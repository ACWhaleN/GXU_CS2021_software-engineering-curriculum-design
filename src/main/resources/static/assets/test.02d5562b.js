import { l as service } from './index.e65e155f.js';
import { a9 as getAugmentedNamespace } from './element-plus.f66de0e1.js';

var require$$0 = [
	{
		name: "nodejs",
		version: "0.2.0",
		date: "2011-08-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.3.0",
		date: "2011-08-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.4.0",
		date: "2011-08-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.5.0",
		date: "2011-08-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.6.0",
		date: "2011-11-04",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.7.0",
		date: "2012-01-17",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.8.0",
		date: "2012-06-22",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.9.0",
		date: "2012-07-20",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.10.0",
		date: "2013-03-11",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.11.0",
		date: "2013-03-28",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.12.0",
		date: "2015-02-06",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "4.0.0",
		date: "2015-09-08",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "4.1.0",
		date: "2015-09-17",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "4.2.0",
		date: "2015-10-12",
		lts: "Argon",
		security: false
	},
	{
		name: "nodejs",
		version: "4.3.0",
		date: "2016-02-09",
		lts: "Argon",
		security: false
	},
	{
		name: "nodejs",
		version: "4.4.0",
		date: "2016-03-08",
		lts: "Argon",
		security: false
	},
	{
		name: "nodejs",
		version: "4.5.0",
		date: "2016-08-16",
		lts: "Argon",
		security: false
	},
	{
		name: "nodejs",
		version: "4.6.0",
		date: "2016-09-27",
		lts: "Argon",
		security: true
	},
	{
		name: "nodejs",
		version: "4.7.0",
		date: "2016-12-06",
		lts: "Argon",
		security: false
	},
	{
		name: "nodejs",
		version: "4.8.0",
		date: "2017-02-21",
		lts: "Argon",
		security: false
	},
	{
		name: "nodejs",
		version: "4.9.0",
		date: "2018-03-28",
		lts: "Argon",
		security: true
	},
	{
		name: "nodejs",
		version: "5.0.0",
		date: "2015-10-29",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.1.0",
		date: "2015-11-17",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.2.0",
		date: "2015-12-09",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.3.0",
		date: "2015-12-15",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.4.0",
		date: "2016-01-06",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.5.0",
		date: "2016-01-21",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.6.0",
		date: "2016-02-09",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.7.0",
		date: "2016-02-23",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.8.0",
		date: "2016-03-09",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.9.0",
		date: "2016-03-16",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.10.0",
		date: "2016-04-01",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.11.0",
		date: "2016-04-21",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.12.0",
		date: "2016-06-23",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "6.0.0",
		date: "2016-04-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "6.1.0",
		date: "2016-05-05",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "6.2.0",
		date: "2016-05-17",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "6.3.0",
		date: "2016-07-06",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "6.4.0",
		date: "2016-08-12",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "6.5.0",
		date: "2016-08-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "6.6.0",
		date: "2016-09-14",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "6.7.0",
		date: "2016-09-27",
		lts: false,
		security: true
	},
	{
		name: "nodejs",
		version: "6.8.0",
		date: "2016-10-12",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "6.9.0",
		date: "2016-10-18",
		lts: "Boron",
		security: false
	},
	{
		name: "nodejs",
		version: "6.10.0",
		date: "2017-02-21",
		lts: "Boron",
		security: false
	},
	{
		name: "nodejs",
		version: "6.11.0",
		date: "2017-06-06",
		lts: "Boron",
		security: false
	},
	{
		name: "nodejs",
		version: "6.12.0",
		date: "2017-11-06",
		lts: "Boron",
		security: false
	},
	{
		name: "nodejs",
		version: "6.13.0",
		date: "2018-02-10",
		lts: "Boron",
		security: false
	},
	{
		name: "nodejs",
		version: "6.14.0",
		date: "2018-03-28",
		lts: "Boron",
		security: true
	},
	{
		name: "nodejs",
		version: "6.15.0",
		date: "2018-11-27",
		lts: "Boron",
		security: true
	},
	{
		name: "nodejs",
		version: "6.16.0",
		date: "2018-12-26",
		lts: "Boron",
		security: false
	},
	{
		name: "nodejs",
		version: "6.17.0",
		date: "2019-02-28",
		lts: "Boron",
		security: true
	},
	{
		name: "nodejs",
		version: "7.0.0",
		date: "2016-10-25",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.1.0",
		date: "2016-11-08",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.2.0",
		date: "2016-11-22",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.3.0",
		date: "2016-12-20",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.4.0",
		date: "2017-01-04",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.5.0",
		date: "2017-01-31",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.6.0",
		date: "2017-02-21",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.7.0",
		date: "2017-02-28",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.8.0",
		date: "2017-03-29",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.9.0",
		date: "2017-04-11",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.10.0",
		date: "2017-05-02",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.0.0",
		date: "2017-05-30",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.1.0",
		date: "2017-06-08",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.2.0",
		date: "2017-07-19",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.3.0",
		date: "2017-08-08",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.4.0",
		date: "2017-08-15",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.5.0",
		date: "2017-09-12",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.6.0",
		date: "2017-09-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.7.0",
		date: "2017-10-11",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.8.0",
		date: "2017-10-24",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.9.0",
		date: "2017-10-31",
		lts: "Carbon",
		security: false
	},
	{
		name: "nodejs",
		version: "8.10.0",
		date: "2018-03-06",
		lts: "Carbon",
		security: false
	},
	{
		name: "nodejs",
		version: "8.11.0",
		date: "2018-03-28",
		lts: "Carbon",
		security: true
	},
	{
		name: "nodejs",
		version: "8.12.0",
		date: "2018-09-10",
		lts: "Carbon",
		security: false
	},
	{
		name: "nodejs",
		version: "8.13.0",
		date: "2018-11-20",
		lts: "Carbon",
		security: false
	},
	{
		name: "nodejs",
		version: "8.14.0",
		date: "2018-11-27",
		lts: "Carbon",
		security: true
	},
	{
		name: "nodejs",
		version: "8.15.0",
		date: "2018-12-26",
		lts: "Carbon",
		security: false
	},
	{
		name: "nodejs",
		version: "8.16.0",
		date: "2019-04-16",
		lts: "Carbon",
		security: false
	},
	{
		name: "nodejs",
		version: "8.17.0",
		date: "2019-12-17",
		lts: "Carbon",
		security: true
	},
	{
		name: "nodejs",
		version: "9.0.0",
		date: "2017-10-31",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.1.0",
		date: "2017-11-07",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.2.0",
		date: "2017-11-14",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.3.0",
		date: "2017-12-12",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.4.0",
		date: "2018-01-10",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.5.0",
		date: "2018-01-31",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.6.0",
		date: "2018-02-21",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.7.0",
		date: "2018-03-01",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.8.0",
		date: "2018-03-07",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.9.0",
		date: "2018-03-21",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.10.0",
		date: "2018-03-28",
		lts: false,
		security: true
	},
	{
		name: "nodejs",
		version: "9.11.0",
		date: "2018-04-04",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.0.0",
		date: "2018-04-24",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.1.0",
		date: "2018-05-08",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.2.0",
		date: "2018-05-23",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.3.0",
		date: "2018-05-29",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.4.0",
		date: "2018-06-06",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.5.0",
		date: "2018-06-20",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.6.0",
		date: "2018-07-04",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.7.0",
		date: "2018-07-18",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.8.0",
		date: "2018-08-01",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.9.0",
		date: "2018-08-15",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.10.0",
		date: "2018-09-06",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.11.0",
		date: "2018-09-19",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.12.0",
		date: "2018-10-10",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.13.0",
		date: "2018-10-30",
		lts: "Dubnium",
		security: false
	},
	{
		name: "nodejs",
		version: "10.14.0",
		date: "2018-11-27",
		lts: "Dubnium",
		security: true
	},
	{
		name: "nodejs",
		version: "10.15.0",
		date: "2018-12-26",
		lts: "Dubnium",
		security: false
	},
	{
		name: "nodejs",
		version: "10.16.0",
		date: "2019-05-28",
		lts: "Dubnium",
		security: false
	},
	{
		name: "nodejs",
		version: "10.17.0",
		date: "2019-10-22",
		lts: "Dubnium",
		security: false
	},
	{
		name: "nodejs",
		version: "10.18.0",
		date: "2019-12-17",
		lts: "Dubnium",
		security: true
	},
	{
		name: "nodejs",
		version: "10.19.0",
		date: "2020-02-05",
		lts: "Dubnium",
		security: true
	},
	{
		name: "nodejs",
		version: "10.20.0",
		date: "2020-03-26",
		lts: "Dubnium",
		security: false
	},
	{
		name: "nodejs",
		version: "10.21.0",
		date: "2020-06-02",
		lts: "Dubnium",
		security: true
	},
	{
		name: "nodejs",
		version: "10.22.0",
		date: "2020-07-21",
		lts: "Dubnium",
		security: false
	},
	{
		name: "nodejs",
		version: "10.23.0",
		date: "2020-10-27",
		lts: "Dubnium",
		security: false
	},
	{
		name: "nodejs",
		version: "10.24.0",
		date: "2021-02-23",
		lts: "Dubnium",
		security: true
	},
	{
		name: "nodejs",
		version: "11.0.0",
		date: "2018-10-23",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.1.0",
		date: "2018-10-30",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.2.0",
		date: "2018-11-15",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.3.0",
		date: "2018-11-27",
		lts: false,
		security: true
	},
	{
		name: "nodejs",
		version: "11.4.0",
		date: "2018-12-07",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.5.0",
		date: "2018-12-18",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.6.0",
		date: "2018-12-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.7.0",
		date: "2019-01-17",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.8.0",
		date: "2019-01-24",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.9.0",
		date: "2019-01-30",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.10.0",
		date: "2019-02-14",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.11.0",
		date: "2019-03-05",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.12.0",
		date: "2019-03-14",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.13.0",
		date: "2019-03-28",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.14.0",
		date: "2019-04-10",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.15.0",
		date: "2019-04-30",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.0.0",
		date: "2019-04-23",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.1.0",
		date: "2019-04-29",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.2.0",
		date: "2019-05-07",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.3.0",
		date: "2019-05-21",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.4.0",
		date: "2019-06-04",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.5.0",
		date: "2019-06-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.6.0",
		date: "2019-07-03",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.7.0",
		date: "2019-07-23",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.8.0",
		date: "2019-08-06",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.9.0",
		date: "2019-08-20",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.10.0",
		date: "2019-09-04",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.11.0",
		date: "2019-09-25",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.12.0",
		date: "2019-10-11",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.13.0",
		date: "2019-10-21",
		lts: "Erbium",
		security: false
	},
	{
		name: "nodejs",
		version: "12.14.0",
		date: "2019-12-17",
		lts: "Erbium",
		security: true
	},
	{
		name: "nodejs",
		version: "12.15.0",
		date: "2020-02-05",
		lts: "Erbium",
		security: true
	},
	{
		name: "nodejs",
		version: "12.16.0",
		date: "2020-02-11",
		lts: "Erbium",
		security: false
	},
	{
		name: "nodejs",
		version: "12.17.0",
		date: "2020-05-26",
		lts: "Erbium",
		security: false
	},
	{
		name: "nodejs",
		version: "12.18.0",
		date: "2020-06-02",
		lts: "Erbium",
		security: true
	},
	{
		name: "nodejs",
		version: "12.19.0",
		date: "2020-10-06",
		lts: "Erbium",
		security: false
	},
	{
		name: "nodejs",
		version: "12.20.0",
		date: "2020-11-24",
		lts: "Erbium",
		security: false
	},
	{
		name: "nodejs",
		version: "12.21.0",
		date: "2021-02-23",
		lts: "Erbium",
		security: true
	},
	{
		name: "nodejs",
		version: "12.22.0",
		date: "2021-03-30",
		lts: "Erbium",
		security: false
	},
	{
		name: "nodejs",
		version: "13.0.0",
		date: "2019-10-22",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.1.0",
		date: "2019-11-05",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.2.0",
		date: "2019-11-21",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.3.0",
		date: "2019-12-03",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.4.0",
		date: "2019-12-17",
		lts: false,
		security: true
	},
	{
		name: "nodejs",
		version: "13.5.0",
		date: "2019-12-18",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.6.0",
		date: "2020-01-07",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.7.0",
		date: "2020-01-21",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.8.0",
		date: "2020-02-05",
		lts: false,
		security: true
	},
	{
		name: "nodejs",
		version: "13.9.0",
		date: "2020-02-18",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.10.0",
		date: "2020-03-04",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.11.0",
		date: "2020-03-12",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.12.0",
		date: "2020-03-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.13.0",
		date: "2020-04-14",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.14.0",
		date: "2020-04-29",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.0.0",
		date: "2020-04-21",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.1.0",
		date: "2020-04-29",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.2.0",
		date: "2020-05-05",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.3.0",
		date: "2020-05-19",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.4.0",
		date: "2020-06-02",
		lts: false,
		security: true
	},
	{
		name: "nodejs",
		version: "14.5.0",
		date: "2020-06-30",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.6.0",
		date: "2020-07-20",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.7.0",
		date: "2020-07-29",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.8.0",
		date: "2020-08-11",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.9.0",
		date: "2020-08-27",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.10.0",
		date: "2020-09-08",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.11.0",
		date: "2020-09-15",
		lts: false,
		security: true
	},
	{
		name: "nodejs",
		version: "14.12.0",
		date: "2020-09-22",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.13.0",
		date: "2020-09-29",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.14.0",
		date: "2020-10-15",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.15.0",
		date: "2020-10-27",
		lts: "Fermium",
		security: false
	},
	{
		name: "nodejs",
		version: "14.16.0",
		date: "2021-02-23",
		lts: "Fermium",
		security: true
	},
	{
		name: "nodejs",
		version: "14.17.0",
		date: "2021-05-11",
		lts: "Fermium",
		security: false
	},
	{
		name: "nodejs",
		version: "14.18.0",
		date: "2021-09-28",
		lts: "Fermium",
		security: false
	},
	{
		name: "nodejs",
		version: "14.19.0",
		date: "2022-02-01",
		lts: "Fermium",
		security: false
	},
	{
		name: "nodejs",
		version: "14.20.0",
		date: "2022-07-07",
		lts: "Fermium",
		security: true
	},
	{
		name: "nodejs",
		version: "15.0.0",
		date: "2020-10-20",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "15.1.0",
		date: "2020-11-04",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "15.2.0",
		date: "2020-11-10",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "15.3.0",
		date: "2020-11-24",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "15.4.0",
		date: "2020-12-09",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "15.5.0",
		date: "2020-12-22",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "15.6.0",
		date: "2021-01-14",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "15.7.0",
		date: "2021-01-25",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "15.8.0",
		date: "2021-02-02",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "15.9.0",
		date: "2021-02-18",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "15.10.0",
		date: "2021-02-23",
		lts: false,
		security: true
	},
	{
		name: "nodejs",
		version: "15.11.0",
		date: "2021-03-03",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "15.12.0",
		date: "2021-03-17",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "15.13.0",
		date: "2021-03-31",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "15.14.0",
		date: "2021-04-06",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "16.0.0",
		date: "2021-04-20",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "16.1.0",
		date: "2021-05-04",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "16.2.0",
		date: "2021-05-19",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "16.3.0",
		date: "2021-06-03",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "16.4.0",
		date: "2021-06-23",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "16.5.0",
		date: "2021-07-14",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "16.6.0",
		date: "2021-07-29",
		lts: false,
		security: true
	},
	{
		name: "nodejs",
		version: "16.7.0",
		date: "2021-08-18",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "16.8.0",
		date: "2021-08-25",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "16.9.0",
		date: "2021-09-07",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "16.10.0",
		date: "2021-09-22",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "16.11.0",
		date: "2021-10-08",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "16.12.0",
		date: "2021-10-20",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "16.13.0",
		date: "2021-10-26",
		lts: "Gallium",
		security: false
	},
	{
		name: "nodejs",
		version: "16.14.0",
		date: "2022-02-08",
		lts: "Gallium",
		security: false
	},
	{
		name: "nodejs",
		version: "16.15.0",
		date: "2022-04-26",
		lts: "Gallium",
		security: false
	},
	{
		name: "nodejs",
		version: "16.16.0",
		date: "2022-07-07",
		lts: "Gallium",
		security: true
	},
	{
		name: "nodejs",
		version: "17.0.0",
		date: "2021-10-19",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "17.1.0",
		date: "2021-11-09",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "17.2.0",
		date: "2021-11-30",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "17.3.0",
		date: "2021-12-17",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "17.4.0",
		date: "2022-01-18",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "17.5.0",
		date: "2022-02-10",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "17.6.0",
		date: "2022-02-22",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "17.7.0",
		date: "2022-03-09",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "17.8.0",
		date: "2022-03-22",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "17.9.0",
		date: "2022-04-07",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "18.0.0",
		date: "2022-04-18",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "18.1.0",
		date: "2022-05-03",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "18.2.0",
		date: "2022-05-17",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "18.3.0",
		date: "2022-06-02",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "18.4.0",
		date: "2022-06-16",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "18.5.0",
		date: "2022-07-06",
		lts: false,
		security: true
	}
];

var agents$3 = {};

var browsers$5 = {};

var browsers$4={A:"ie",B:"edge",C:"firefox",D:"chrome",E:"safari",F:"opera",G:"ios_saf",H:"op_mini",I:"android",J:"bb",K:"op_mob",L:"and_chr",M:"and_ff",N:"ie_mob",O:"and_uc",P:"samsung",Q:"and_qq",R:"baidu",S:"kaios"};

browsers$5.browsers = browsers$4;

var browserVersions$1 = {};

var browserVersions={"0":"29","1":"30","2":"31","3":"32","4":"33","5":"34","6":"35","7":"36","8":"37","9":"38",A:"10",B:"11",C:"12",D:"7",E:"8",F:"9",G:"15",H:"105",I:"4",J:"6",K:"13",L:"14",M:"16",N:"17",O:"18",P:"79",Q:"80",R:"81",S:"83",T:"84",U:"85",V:"86",W:"87",X:"88",Y:"89",Z:"90",a:"91",b:"104",c:"64",d:"92",e:"93",f:"94",g:"95",h:"96",i:"97",j:"98",k:"99",l:"100",m:"101",n:"102",o:"103",p:"5",q:"19",r:"20",s:"21",t:"22",u:"23",v:"24",w:"25",x:"26",y:"27",z:"28",AB:"39",BB:"40",CB:"41",DB:"42",EB:"43",FB:"44",GB:"45",HB:"46",IB:"47",JB:"48",KB:"49",LB:"50",MB:"51",NB:"52",OB:"53",PB:"54",QB:"55",RB:"56",SB:"57",TB:"58",UB:"60",VB:"62",WB:"63",XB:"65",YB:"66",ZB:"67",aB:"68",bB:"69",cB:"70",dB:"71",eB:"72",fB:"73",gB:"74",hB:"75",iB:"76",jB:"77",kB:"78",lB:"11.1",mB:"12.1",nB:"16.0",oB:"3",pB:"59",qB:"61",rB:"82",sB:"106",tB:"107",uB:"3.2",vB:"10.1",wB:"15.2-15.3",xB:"15.4",yB:"15.5",zB:"15.6","0B":"16.1","1B":"11.5","2B":"4.2-4.3","3B":"5.5","4B":"2","5B":"3.5","6B":"3.6","7B":"108","8B":"3.1","9B":"5.1",AC:"6.1",BC:"7.1",CC:"9.1",DC:"13.1",EC:"14.1",FC:"15.1",GC:"TP",HC:"9.5-9.6",IC:"10.0-10.1",JC:"10.5",KC:"10.6",LC:"11.6",MC:"4.0-4.1",NC:"5.0-5.1",OC:"6.0-6.1",PC:"7.0-7.1",QC:"8.1-8.4",RC:"9.0-9.2",SC:"9.3",TC:"10.0-10.2",UC:"10.3",VC:"11.0-11.2",WC:"11.3-11.4",XC:"12.0-12.1",YC:"12.2-12.5",ZC:"13.0-13.1",aC:"13.2",bC:"13.3",cC:"13.4-13.7",dC:"14.0-14.4",eC:"14.5-14.8",fC:"15.0-15.1",gC:"all",hC:"2.1",iC:"2.2",jC:"2.3",kC:"4.1",lC:"4.4",mC:"4.4.3-4.4.4",nC:"13.4",oC:"5.0-5.4",pC:"6.2-6.4",qC:"7.2-7.4",rC:"8.2",sC:"9.2",tC:"11.1-11.2",uC:"12.0",vC:"13.0",wC:"14.0",xC:"15.0",yC:"17.0",zC:"18.0","0C":"10.4","1C":"13.18","2C":"2.5"};

browserVersions$1.browserVersions = browserVersions;

var agents$2={A:{A:{J:0.0131217,D:0.00621152,E:0.0368202,F:0.0810044,A:0.00556471,B:0.45657,"3B":0.009298},B:"ms",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","3B","J","D","E","F","A","B","","",""],E:"IE",F:{"3B":962323200,J:998870400,D:1161129600,E:1237420800,F:1300060800,A:1346716800,B:1381968000}},B:{A:{C:0.003855,K:0.004267,L:0.004268,G:0.003855,M:0.003702,N:0.00771,O:0.019275,P:0,Q:0.004298,R:0.00944,S:0.004043,T:0.00771,U:0.00771,V:0.003855,W:0.003855,X:0.004318,Y:0.003855,Z:0.004118,a:0.003939,d:0.00771,e:0.004118,f:0.003939,g:0.003801,h:0.003855,i:0.003855,j:0.00771,k:0.00771,l:0.011565,m:0.04626,n:0.034695,o:1.06783,b:2.96835,H:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C","K","L","G","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","d","e","f","g","h","i","j","k","l","m","n","o","b","H","","",""],E:"Edge",F:{C:1438128000,K:1447286400,L:1470096000,G:1491868800,M:1508198400,N:1525046400,O:1542067200,P:1579046400,Q:1581033600,R:1586736000,S:1590019200,T:1594857600,U:1598486400,V:1602201600,W:1605830400,X:1611360000,Y:1614816000,Z:1618358400,a:1622073600,d:1626912000,e:1630627200,f:1632441600,g:1634774400,h:1637539200,i:1641427200,j:1643932800,k:1646265600,l:1649635200,m:1651190400,n:1653955200,o:1655942400,b:1659657600,H:1661990400},D:{C:"ms",K:"ms",L:"ms",G:"ms",M:"ms",N:"ms",O:"ms"}},C:{A:{"0":0.008834,"1":0.008322,"2":0.008928,"3":0.004471,"4":0.009284,"5":0.004707,"6":0.009076,"7":0.00771,"8":0.004783,"9":0.004271,"4B":0.004118,oB:0.004271,I:0.019275,p:0.004879,J:0.020136,D:0.005725,E:0.004525,F:0.00533,A:0.004283,B:0.00771,C:0.004471,K:0.004486,L:0.00453,G:0.008322,M:0.004417,N:0.004425,O:0.004161,q:0.004443,r:0.004283,s:0.008322,t:0.013698,u:0.004161,v:0.008786,w:0.004118,x:0.004317,y:0.004393,z:0.004418,AB:0.004783,BB:0.00487,CB:0.005029,DB:0.0047,EB:0.02313,FB:0.00771,GB:0.003867,HB:0.004525,IB:0.004293,JB:0.003702,KB:0.004538,LB:0.008282,MB:0.011601,NB:0.057825,OB:0.011601,PB:0.00771,QB:0.003801,RB:0.00771,SB:0.011601,TB:0.003939,pB:0.003855,UB:0.003855,qB:0.004356,VB:0.004425,WB:0.008322,c:0.00415,XB:0.004267,YB:0.003801,ZB:0.004267,aB:0.00771,bB:0.00415,cB:0.004293,dB:0.004425,eB:0.003855,fB:0.00415,gB:0.00415,hB:0.004318,iB:0.004356,jB:0.003855,kB:0.03855,P:0.00771,Q:0.00771,R:0.019275,rB:0.003855,S:0.00771,T:0.00771,U:0.004268,V:0.003801,W:0.00771,X:0.00771,Y:0.00771,Z:0.00771,a:0.08481,d:0.003801,e:0.003855,f:0.02313,g:0.011565,h:0.00771,i:0.00771,j:0.00771,k:0.01542,l:0.01542,m:0.02313,n:0.096375,o:1.8504,b:0.35466,H:0.003855,sB:0,tB:0,"5B":0.008786,"6B":0.00487},B:"moz",C:["4B","oB","5B","6B","I","p","J","D","E","F","A","B","C","K","L","G","M","N","O","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","AB","BB","CB","DB","EB","FB","GB","HB","IB","JB","KB","LB","MB","NB","OB","PB","QB","RB","SB","TB","pB","UB","qB","VB","WB","c","XB","YB","ZB","aB","bB","cB","dB","eB","fB","gB","hB","iB","jB","kB","P","Q","R","rB","S","T","U","V","W","X","Y","Z","a","d","e","f","g","h","i","j","k","l","m","n","o","b","H","sB","tB",""],E:"Firefox",F:{"0":1398729600,"1":1402358400,"2":1405987200,"3":1409616000,"4":1413244800,"5":1417392000,"6":1421107200,"7":1424736000,"8":1428278400,"9":1431475200,"4B":1161648000,oB:1213660800,"5B":1246320000,"6B":1264032000,I:1300752000,p:1308614400,J:1313452800,D:1317081600,E:1317081600,F:1320710400,A:1324339200,B:1327968000,C:1331596800,K:1335225600,L:1338854400,G:1342483200,M:1346112000,N:1349740800,O:1353628800,q:1357603200,r:1361232000,s:1364860800,t:1368489600,u:1372118400,v:1375747200,w:1379376000,x:1386633600,y:1391472000,z:1395100800,AB:1435881600,BB:1439251200,CB:1442880000,DB:1446508800,EB:1450137600,FB:1453852800,GB:1457395200,HB:1461628800,IB:1465257600,JB:1470096000,KB:1474329600,LB:1479168000,MB:1485216000,NB:1488844800,OB:1492560000,PB:1497312000,QB:1502150400,RB:1506556800,SB:1510617600,TB:1516665600,pB:1520985600,UB:1525824000,qB:1529971200,VB:1536105600,WB:1540252800,c:1544486400,XB:1548720000,YB:1552953600,ZB:1558396800,aB:1562630400,bB:1567468800,cB:1571788800,dB:1575331200,eB:1578355200,fB:1581379200,gB:1583798400,hB:1586304000,iB:1588636800,jB:1591056000,kB:1593475200,P:1595894400,Q:1598313600,R:1600732800,rB:1603152000,S:1605571200,T:1607990400,U:1611619200,V:1614038400,W:1616457600,X:1618790400,Y:1622505600,Z:1626134400,a:1628553600,d:1630972800,e:1633392000,f:1635811200,g:1638835200,h:1641859200,i:1644364800,j:1646697600,k:1649116800,l:1651536000,m:1653955200,n:1656374400,o:1658793600,b:1661212800,H:1663632000,sB:null,tB:null}},D:{A:{"0":0.004538,"1":0.008322,"2":0.008596,"3":0.004566,"4":0.004118,"5":0.00771,"6":0.003702,"7":0.004335,"8":0.004464,"9":0.01542,I:0.004706,p:0.004879,J:0.004879,D:0.005591,E:0.005591,F:0.005591,A:0.004534,B:0.004464,C:0.010424,K:0.0083,L:0.004706,G:0.015087,M:0.004393,N:0.004393,O:0.008652,q:0.008322,r:0.004393,s:0.004317,t:0.003855,u:0.008786,v:0.003939,w:0.004461,x:0.004141,y:0.004326,z:0.0047,AB:0.003867,BB:0.01542,CB:0.003702,DB:0.007734,EB:0.00771,FB:0.003867,GB:0.003867,HB:0.003867,IB:0.00771,JB:0.019275,KB:0.05397,LB:0.003867,MB:0.003801,NB:0.00771,OB:0.00771,PB:0.003867,QB:0.003855,RB:0.042405,SB:0.003855,TB:0.003702,pB:0.003702,UB:0.011565,qB:0.011565,VB:0.003855,WB:0.011565,c:0.003855,XB:0.011565,YB:0.03084,ZB:0.011565,aB:0.00771,bB:0.06168,cB:0.034695,dB:0.01542,eB:0.034695,fB:0.011565,gB:0.034695,hB:0.042405,iB:0.04626,jB:0.01542,kB:0.034695,P:0.134925,Q:0.05397,R:0.03855,S:0.06939,T:0.06168,U:0.088665,V:0.088665,W:0.104085,X:0.02313,Y:0.042405,Z:0.026985,a:0.057825,d:0.05397,e:0.050115,f:0.04626,g:0.026985,h:0.088665,i:0.0771,j:0.080955,k:0.0771,l:0.127215,m:0.1542,n:0.31611,o:6.11789,b:15.1,H:0.05397,sB:0.019275,tB:0.00771,"7B":0},B:"webkit",C:["","","","","","I","p","J","D","E","F","A","B","C","K","L","G","M","N","O","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","AB","BB","CB","DB","EB","FB","GB","HB","IB","JB","KB","LB","MB","NB","OB","PB","QB","RB","SB","TB","pB","UB","qB","VB","WB","c","XB","YB","ZB","aB","bB","cB","dB","eB","fB","gB","hB","iB","jB","kB","P","Q","R","S","T","U","V","W","X","Y","Z","a","d","e","f","g","h","i","j","k","l","m","n","o","b","H","sB","tB","7B"],E:"Chrome",F:{"0":1374105600,"1":1376956800,"2":1384214400,"3":1389657600,"4":1392940800,"5":1397001600,"6":1400544000,"7":1405468800,"8":1409011200,"9":1412640000,I:1264377600,p:1274745600,J:1283385600,D:1287619200,E:1291248000,F:1296777600,A:1299542400,B:1303862400,C:1307404800,K:1312243200,L:1316131200,G:1316131200,M:1319500800,N:1323734400,O:1328659200,q:1332892800,r:1337040000,s:1340668800,t:1343692800,u:1348531200,v:1352246400,w:1357862400,x:1361404800,y:1364428800,z:1369094400,AB:1416268800,BB:1421798400,CB:1425513600,DB:1429401600,EB:1432080000,FB:1437523200,GB:1441152000,HB:1444780800,IB:1449014400,JB:1453248000,KB:1456963200,LB:1460592000,MB:1464134400,NB:1469059200,OB:1472601600,PB:1476230400,QB:1480550400,RB:1485302400,SB:1489017600,TB:1492560000,pB:1496707200,UB:1500940800,qB:1504569600,VB:1508198400,WB:1512518400,c:1516752000,XB:1520294400,YB:1523923200,ZB:1527552000,aB:1532390400,bB:1536019200,cB:1539648000,dB:1543968000,eB:1548720000,fB:1552348800,gB:1555977600,hB:1559606400,iB:1564444800,jB:1568073600,kB:1571702400,P:1575936000,Q:1580860800,R:1586304000,S:1589846400,T:1594684800,U:1598313600,V:1601942400,W:1605571200,X:1611014400,Y:1614556800,Z:1618272000,a:1621987200,d:1626739200,e:1630368000,f:1632268800,g:1634601600,h:1637020800,i:1641340800,j:1643673600,k:1646092800,l:1648512000,m:1650931200,n:1653350400,o:1655769600,b:1659398400,H:1661817600,sB:null,tB:null,"7B":null}},E:{A:{I:0,p:0.008322,J:0.004656,D:0.004465,E:0.004356,F:0.004891,A:0.004425,B:0.004318,C:0.003801,K:0.03084,L:0.11565,G:0.03084,"8B":0,uB:0.008692,"9B":0.011565,AC:0.00456,BC:0.004283,CC:0.01542,vB:0.00771,lB:0.02313,mB:0.042405,DC:0.25443,EC:0.32382,FC:0.057825,wB:0.05397,xB:0.17733,yB:0.68619,zB:1.39165,nB:0.011565,"0B":0,GC:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","8B","uB","I","p","9B","J","AC","D","BC","E","F","CC","A","vB","B","lB","C","mB","K","DC","L","EC","G","FC","wB","xB","yB","zB","nB","0B","GC",""],E:"Safari",F:{"8B":1205798400,uB:1226534400,I:1244419200,p:1275868800,"9B":1311120000,J:1343174400,AC:1382400000,D:1382400000,BC:1410998400,E:1413417600,F:1443657600,CC:1458518400,A:1474329600,vB:1490572800,B:1505779200,lB:1522281600,C:1537142400,mB:1553472000,K:1568851200,DC:1585008000,L:1600214400,EC:1619395200,G:1632096000,FC:1635292800,wB:1639353600,xB:1647216000,yB:1652745600,zB:1658275200,nB:1662940800,"0B":null,GC:null}},F:{A:{"0":0.004879,"1":0.004879,"2":0.003855,"3":0.005152,"4":0.005014,"5":0.009758,"6":0.004879,"7":0.003855,"8":0.004283,"9":0.004367,F:0.0082,B:0.016581,C:0.004317,G:0.00685,M:0.00685,N:0.00685,O:0.005014,q:0.006015,r:0.004879,s:0.006597,t:0.006597,u:0.013434,v:0.006702,w:0.006015,x:0.005595,y:0.004393,z:0.00771,AB:0.004534,BB:0.00771,CB:0.004227,DB:0.004418,EB:0.004161,FB:0.004227,GB:0.004725,HB:0.011565,IB:0.008942,JB:0.004707,KB:0.004827,LB:0.004707,MB:0.004707,NB:0.004326,OB:0.008922,PB:0.014349,QB:0.004425,RB:0.00472,SB:0.004425,TB:0.004425,UB:0.00472,VB:0.004532,WB:0.004566,c:0.02283,XB:0.00867,YB:0.004656,ZB:0.004642,aB:0.003867,bB:0.00944,cB:0.004293,dB:0.003855,eB:0.004298,fB:0.096692,gB:0.004201,hB:0.004141,iB:0.004257,jB:0.003939,kB:0.008236,P:0.003855,Q:0.003939,R:0.008514,rB:0.003939,S:0.003939,T:0.003702,U:0.01542,V:0.003855,W:0.003855,X:0.019275,Y:0.844245,Z:0.08481,a:0,HC:0.00685,IC:0,JC:0.008392,KC:0.004706,lB:0.006229,"1B":0.004879,LC:0.008786,mB:0.00472},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","F","HC","IC","JC","KC","B","lB","1B","LC","C","mB","G","M","N","O","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","AB","BB","CB","DB","EB","FB","GB","HB","IB","JB","KB","LB","MB","NB","OB","PB","QB","RB","SB","TB","UB","VB","WB","c","XB","YB","ZB","aB","bB","cB","dB","eB","fB","gB","hB","iB","jB","kB","P","Q","R","rB","S","T","U","V","W","X","Y","Z","a","","",""],E:"Opera",F:{"0":1430179200,"1":1433808000,"2":1438646400,"3":1442448000,"4":1445904000,"5":1449100800,"6":1454371200,"7":1457308800,"8":1462320000,"9":1465344000,F:1150761600,HC:1223424000,IC:1251763200,JC:1267488000,KC:1277942400,B:1292457600,lB:1302566400,"1B":1309219200,LC:1323129600,C:1323129600,mB:1352073600,G:1372723200,M:1377561600,N:1381104000,O:1386288000,q:1390867200,r:1393891200,s:1399334400,t:1401753600,u:1405987200,v:1409616000,w:1413331200,x:1417132800,y:1422316800,z:1425945600,AB:1470096000,BB:1474329600,CB:1477267200,DB:1481587200,EB:1486425600,FB:1490054400,GB:1494374400,HB:1498003200,IB:1502236800,JB:1506470400,KB:1510099200,LB:1515024000,MB:1517961600,NB:1521676800,OB:1525910400,PB:1530144000,QB:1534982400,RB:1537833600,SB:1543363200,TB:1548201600,UB:1554768000,VB:1561593600,WB:1566259200,c:1570406400,XB:1573689600,YB:1578441600,ZB:1583971200,aB:1587513600,bB:1592956800,cB:1595894400,dB:1600128000,eB:1603238400,fB:1613520000,gB:1612224000,hB:1616544000,iB:1619568000,jB:1623715200,kB:1627948800,P:1631577600,Q:1633392000,R:1635984000,rB:1638403200,S:1642550400,T:1644969600,U:1647993600,V:1650412800,W:1652745600,X:1654646400,Y:1657152000,Z:1660780800,a:1663113600},D:{F:"o",B:"o",C:"o",HC:"o",IC:"o",JC:"o",KC:"o",lB:"o","1B":"o",LC:"o",mB:"o"}},G:{A:{E:0,uB:0,MC:0,"2B":0.00302517,NC:0.00453776,OC:0.00453776,PC:0.0151259,QC:0.00756293,RC:0.0151259,SC:0.069579,TC:0.00756293,UC:0.0816797,VC:0.0393273,WC:0.0287392,XC:0.0302517,YC:0.47949,ZC:0.0226888,aC:0.0121007,bC:0.0499154,cC:0.158822,dC:0.482515,eC:1.06637,fC:0.287392,wB:0.4326,xB:0.638312,yB:3.16887,zB:7.91083,nB:0.105881,"0B":0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uB","MC","2B","NC","OC","PC","E","QC","RC","SC","TC","UC","VC","WC","XC","YC","ZC","aC","bC","cC","dC","eC","fC","wB","xB","yB","zB","nB","0B","",""],E:"Safari on iOS",F:{uB:1270252800,MC:1283904000,"2B":1299628800,NC:1331078400,OC:1359331200,PC:1394409600,E:1410912000,QC:1413763200,RC:1442361600,SC:1458518400,TC:1473724800,UC:1490572800,VC:1505779200,WC:1522281600,XC:1537142400,YC:1553472000,ZC:1568851200,aC:1572220800,bC:1580169600,cC:1585008000,dC:1600214400,eC:1619395200,fC:1632096000,wB:1639353600,xB:1647216000,yB:1652659200,zB:1658275200,nB:1662940800,"0B":null}},H:{A:{gC:1.06464},B:"o",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gC","","",""],E:"Opera Mini",F:{gC:1426464000}},I:{A:{oB:0,I:0.0643374,H:0,hC:0,iC:0,jC:0,kC:0.0350931,"2B":0.0760351,lC:0,mC:0.309989},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hC","iC","jC","oB","I","kC","2B","lC","mC","H","","",""],E:"Android Browser",F:{hC:1256515200,iC:1274313600,jC:1291593600,oB:1298332800,I:1318896000,kC:1341792000,"2B":1374624000,lC:1386547200,mC:1401667200,H:1662336000}},J:{A:{D:0,A:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","D","A","","",""],E:"Blackberry Browser",F:{D:1325376000,A:1359504000}},K:{A:{A:0,B:0,C:0,c:0.0111391,lB:0,"1B":0,mB:0},B:"o",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A","B","lB","1B","C","mB","c","","",""],E:"Opera Mobile",F:{A:1287100800,B:1300752000,lB:1314835200,"1B":1318291200,C:1330300800,mB:1349740800,c:1613433600},D:{c:"webkit"}},L:{A:{H:42.0211},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","H","","",""],E:"Chrome for Android",F:{H:1662336000}},M:{A:{b:0.31954},B:"moz",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","b","","",""],E:"Firefox for Android",F:{b:1661212800}},N:{A:{A:0.0115934,B:0.022664},B:"ms",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A","B","","",""],E:"IE Mobile",F:{A:1340150400,B:1353456000}},O:{A:{nC:0.743545},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nC","","",""],E:"UC Browser for Android",F:{nC:1634688000},D:{nC:"webkit"}},P:{A:{I:0.177554,oC:0.0103543,pC:0.010304,qC:0.062666,rC:0.0103584,sC:0.0104443,vB:0.0105043,tC:0.0417773,uC:0.0208887,vC:0.062666,wC:0.062666,xC:0.0731103,nB:0.135776,yC:1.00266,zC:1.30554},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","I","oC","pC","qC","rC","sC","vB","tC","uC","vC","wC","xC","nB","yC","zC","","",""],E:"Samsung Internet",F:{I:1461024000,oC:1481846400,pC:1509408000,qC:1528329600,rC:1546128000,sC:1554163200,vB:1567900800,tC:1582588800,uC:1593475200,vC:1605657600,wC:1618531200,xC:1629072000,nB:1640736000,yC:1651708800,zC:1659657600}},Q:{A:{"0C":0.141335},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","0C","","",""],E:"QQ Browser",F:{"0C":1589846400}},R:{A:{"1C":0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","1C","","",""],E:"Baidu Browser",F:{"1C":1663027200}},S:{A:{"2C":0.02458},B:"moz",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2C","","",""],E:"KaiOS Browser",F:{"2C":1527811200}}};

const browsers$3 = browsers$5.browsers;
const versions$2 = browserVersions$1.browserVersions;
const agentsData = agents$2;

function unpackBrowserVersions(versionsData) {
  return Object.keys(versionsData).reduce((usage, version) => {
    usage[versions$2[version]] = versionsData[version];
    return usage
  }, {})
}

agents$3.agents = Object.keys(agentsData).reduce((map, key) => {
  let versionsData = agentsData[key];
  map[browsers$3[key]] = Object.keys(versionsData).reduce((data, entry) => {
    if (entry === 'A') {
      data.usage_global = unpackBrowserVersions(versionsData[entry]);
    } else if (entry === 'C') {
      data.versions = versionsData[entry].reduce((list, version) => {
        if (version === '') {
          list.push(null);
        } else {
          list.push(versions$2[version]);
        }
        return list
      }, []);
    } else if (entry === 'D') {
      data.prefix_exceptions = unpackBrowserVersions(versionsData[entry]);
    } else if (entry === 'E') {
      data.browser = versionsData[entry];
    } else if (entry === 'F') {
      data.release_date = Object.keys(versionsData[entry]).reduce(
        (map2, key2) => {
          map2[versions$2[key2]] = versionsData[entry][key2];
          return map2
        },
        {}
      );
    } else {
      // entry is B
      data.prefix = versionsData[entry];
    }
    return data
  }, {});
  return map
}, {});

const v4 = {
	start: "2015-09-08",
	lts: "2015-10-12",
	maintenance: "2017-04-01",
	end: "2018-04-30",
	codename: "Argon"
};
const v5 = {
	start: "2015-10-29",
	maintenance: "2016-04-30",
	end: "2016-06-30"
};
const v6 = {
	start: "2016-04-26",
	lts: "2016-10-18",
	maintenance: "2018-04-30",
	end: "2019-04-30",
	codename: "Boron"
};
const v7 = {
	start: "2016-10-25",
	maintenance: "2017-04-30",
	end: "2017-06-30"
};
const v8 = {
	start: "2017-05-30",
	lts: "2017-10-31",
	maintenance: "2019-01-01",
	end: "2019-12-31",
	codename: "Carbon"
};
const v9 = {
	start: "2017-10-01",
	maintenance: "2018-04-01",
	end: "2018-06-30"
};
const v10 = {
	start: "2018-04-24",
	lts: "2018-10-30",
	maintenance: "2020-05-19",
	end: "2021-04-30",
	codename: "Dubnium"
};
const v11 = {
	start: "2018-10-23",
	maintenance: "2019-04-22",
	end: "2019-06-01"
};
const v12 = {
	start: "2019-04-23",
	lts: "2019-10-21",
	maintenance: "2020-11-30",
	end: "2022-04-30",
	codename: "Erbium"
};
const v13 = {
	start: "2019-10-22",
	maintenance: "2020-04-01",
	end: "2020-06-01"
};
const v14 = {
	start: "2020-04-21",
	lts: "2020-10-27",
	maintenance: "2021-10-19",
	end: "2023-04-30",
	codename: "Fermium"
};
const v15 = {
	start: "2020-10-20",
	maintenance: "2021-04-01",
	end: "2021-06-01"
};
const v16 = {
	start: "2021-04-20",
	lts: "2021-10-26",
	maintenance: "2022-10-18",
	end: "2023-09-11",
	codename: "Gallium"
};
const v17 = {
	start: "2021-10-19",
	maintenance: "2022-04-01",
	end: "2022-06-01"
};
const v18 = {
	start: "2022-04-19",
	lts: "2022-10-25",
	maintenance: "2023-10-18",
	end: "2025-04-30",
	codename: ""
};
const v19 = {
	start: "2022-10-18",
	maintenance: "2023-04-01",
	end: "2023-06-01"
};
const v20 = {
	start: "2023-04-18",
	lts: "2023-10-24",
	maintenance: "2024-10-22",
	end: "2026-04-30",
	codename: ""
};
var require$$2$1 = {
	"v0.8": {
	start: "2012-06-25",
	end: "2014-07-31"
},
	"v0.10": {
	start: "2013-03-11",
	end: "2016-10-31"
},
	"v0.12": {
	start: "2015-02-06",
	end: "2016-12-31"
},
	v4: v4,
	v5: v5,
	v6: v6,
	v7: v7,
	v8: v8,
	v9: v9,
	v10: v10,
	v11: v11,
	v12: v12,
	v13: v13,
	v14: v14,
	v15: v15,
	v16: v16,
	v17: v17,
	v18: v18,
	v19: v19,
	v20: v20
};

var __viteBrowserExternal = {};

var __viteBrowserExternal$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  'default': __viteBrowserExternal
}, Symbol.toStringTag, { value: 'Module' }));

var require$$2 = /*@__PURE__*/getAugmentedNamespace(__viteBrowserExternal$1);

var versions$1 = {
	"0.20": "39",
	"0.21": "41",
	"0.22": "41",
	"0.23": "41",
	"0.24": "41",
	"0.25": "42",
	"0.26": "42",
	"0.27": "43",
	"0.28": "43",
	"0.29": "43",
	"0.30": "44",
	"0.31": "45",
	"0.32": "45",
	"0.33": "45",
	"0.34": "45",
	"0.35": "45",
	"0.36": "47",
	"0.37": "49",
	"1.0": "49",
	"1.1": "50",
	"1.2": "51",
	"1.3": "52",
	"1.4": "53",
	"1.5": "54",
	"1.6": "56",
	"1.7": "58",
	"1.8": "59",
	"2.0": "61",
	"2.1": "61",
	"3.0": "66",
	"3.1": "66",
	"4.0": "69",
	"4.1": "69",
	"4.2": "69",
	"5.0": "73",
	"6.0": "76",
	"6.1": "76",
	"7.0": "78",
	"7.1": "78",
	"7.2": "78",
	"7.3": "78",
	"8.0": "80",
	"8.1": "80",
	"8.2": "80",
	"8.3": "80",
	"8.4": "80",
	"8.5": "80",
	"9.0": "83",
	"9.1": "83",
	"9.2": "83",
	"9.3": "83",
	"9.4": "83",
	"10.0": "85",
	"10.1": "85",
	"10.2": "85",
	"10.3": "85",
	"10.4": "85",
	"11.0": "87",
	"11.1": "87",
	"11.2": "87",
	"11.3": "87",
	"11.4": "87",
	"11.5": "87",
	"12.0": "89",
	"12.1": "89",
	"12.2": "89",
	"13.0": "91",
	"13.1": "91",
	"13.2": "91",
	"13.3": "91",
	"13.4": "91",
	"13.5": "91",
	"13.6": "91",
	"14.0": "93",
	"14.1": "93",
	"14.2": "93",
	"15.0": "94",
	"15.1": "94",
	"15.2": "94",
	"15.3": "94",
	"15.4": "94",
	"15.5": "94",
	"16.0": "96",
	"16.1": "96",
	"16.2": "96",
	"17.0": "98",
	"17.1": "98",
	"17.2": "98",
	"17.3": "98",
	"17.4": "98",
	"18.0": "100",
	"18.1": "100",
	"18.2": "100",
	"18.3": "100",
	"19.0": "102",
	"19.1": "102",
	"20.0": "104",
	"20.1": "104",
	"20.2": "104",
	"21.0": "106"
};

function BrowserslistError$2(message) {
  this.name = 'BrowserslistError';
  this.message = message;
  this.browserslist = true;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, BrowserslistError$2);
  }
}

BrowserslistError$2.prototype = Error.prototype;

var error = BrowserslistError$2;

var AND_REGEXP = /^\s+and\s+(.*)/i;
var OR_REGEXP = /^(?:,\s*|\s+or\s+)(.*)/i;

function flatten(array) {
  if (!Array.isArray(array)) return [array]
  return array.reduce(function (a, b) {
    return a.concat(flatten(b))
  }, [])
}

function find(string, predicate) {
  for (var n = 1, max = string.length; n <= max; n++) {
    var parsed = string.substr(-n, n);
    if (predicate(parsed, n, max)) {
      return string.slice(0, -n)
    }
  }
  return ''
}

function matchQuery(all, query) {
  var node = { query: query };
  if (query.indexOf('not ') === 0) {
    node.not = true;
    query = query.slice(4);
  }

  for (var name in all) {
    var type = all[name];
    var match = query.match(type.regexp);
    if (match) {
      node.type = name;
      for (var i = 0; i < type.matches.length; i++) {
        node[type.matches[i]] = match[i + 1];
      }
      return node
    }
  }

  node.type = 'unknown';
  return node
}

function matchBlock(all, string, qs) {
  var node;
  return find(string, function (parsed, n, max) {
    if (AND_REGEXP.test(parsed)) {
      node = matchQuery(all, parsed.match(AND_REGEXP)[1]);
      node.compose = 'and';
      qs.unshift(node);
      return true
    } else if (OR_REGEXP.test(parsed)) {
      node = matchQuery(all, parsed.match(OR_REGEXP)[1]);
      node.compose = 'or';
      qs.unshift(node);
      return true
    } else if (n === max) {
      node = matchQuery(all, parsed.trim());
      node.compose = 'or';
      qs.unshift(node);
      return true
    }
    return false
  })
}

var parse$9 = function parse(all, queries) {
  if (!Array.isArray(queries)) queries = [queries];
  return flatten(
    queries.map(function (block) {
      var qs = [];
      do {
        block = matchBlock(all, block, qs);
      } while (block)
      return qs
    })
  )
};

var BrowserslistError$1 = error;

function noop() {}

var browser = {
  loadQueries: function loadQueries() {
    throw new BrowserslistError$1(
      'Sharable configs are not supported in client-side build of Browserslist'
    )
  },

  getStat: function getStat(opts) {
    return opts.stats
  },

  loadConfig: function loadConfig(opts) {
    if (opts.config) {
      throw new BrowserslistError$1(
        'Browserslist config are not supported in client-side build'
      )
    }
  },

  loadCountry: function loadCountry() {
    throw new BrowserslistError$1(
      'Country statistics are not supported ' +
        'in client-side build of Browserslist'
    )
  },

  loadFeature: function loadFeature() {
    throw new BrowserslistError$1(
      'Supports queries are not available in client-side build of Browserslist'
    )
  },

  currentNode: function currentNode(resolve, context) {
    return resolve(['maintained node versions'], context)[0]
  },

  parseConfig: noop,

  readConfig: noop,

  findConfig: noop,

  clearCaches: noop,

  oldDataWarning: noop
};

var jsReleases = require$$0;
var agents$1 = agents$3.agents;
var jsEOL = require$$2$1;
var path = require$$2;
var e2c = versions$1;

var BrowserslistError = error;
var parse$8 = parse$9;
var env = browser; // Will load browser.js in webpack

var YEAR = 365.259641 * 24 * 60 * 60 * 1000;
var ANDROID_EVERGREEN_FIRST = 37;

// Helpers

function isVersionsMatch(versionA, versionB) {
  return (versionA + '.').indexOf(versionB + '.') === 0
}

function isEolReleased(name) {
  var version = name.slice(1);
  return browserslist$2.nodeVersions.some(function (i) {
    return isVersionsMatch(i, version)
  })
}

function normalize(versions) {
  return versions.filter(function (version) {
    return typeof version === 'string'
  })
}

function normalizeElectron(version) {
  var versionToUse = version;
  if (version.split('.').length === 3) {
    versionToUse = version.split('.').slice(0, -1).join('.');
  }
  return versionToUse
}

function nameMapper(name) {
  return function mapName(version) {
    return name + ' ' + version
  }
}

function getMajor(version) {
  return parseInt(version.split('.')[0])
}

function getMajorVersions(released, number) {
  if (released.length === 0) return []
  var majorVersions = uniq$1(released.map(getMajor));
  var minimum = majorVersions[majorVersions.length - number];
  if (!minimum) {
    return released
  }
  var selected = [];
  for (var i = released.length - 1; i >= 0; i--) {
    if (minimum > getMajor(released[i])) break
    selected.unshift(released[i]);
  }
  return selected
}

function uniq$1(array) {
  var filtered = [];
  for (var i = 0; i < array.length; i++) {
    if (filtered.indexOf(array[i]) === -1) filtered.push(array[i]);
  }
  return filtered
}

function fillUsage(result, name, data) {
  for (var i in data) {
    result[name + ' ' + i] = data[i];
  }
}

function generateFilter(sign, version) {
  version = parseFloat(version);
  if (sign === '>') {
    return function (v) {
      return parseFloat(v) > version
    }
  } else if (sign === '>=') {
    return function (v) {
      return parseFloat(v) >= version
    }
  } else if (sign === '<') {
    return function (v) {
      return parseFloat(v) < version
    }
  } else {
    return function (v) {
      return parseFloat(v) <= version
    }
  }
}

function generateSemverFilter(sign, version) {
  version = version.split('.').map(parseSimpleInt);
  version[1] = version[1] || 0;
  version[2] = version[2] || 0;
  if (sign === '>') {
    return function (v) {
      v = v.split('.').map(parseSimpleInt);
      return compareSemver(v, version) > 0
    }
  } else if (sign === '>=') {
    return function (v) {
      v = v.split('.').map(parseSimpleInt);
      return compareSemver(v, version) >= 0
    }
  } else if (sign === '<') {
    return function (v) {
      v = v.split('.').map(parseSimpleInt);
      return compareSemver(version, v) > 0
    }
  } else {
    return function (v) {
      v = v.split('.').map(parseSimpleInt);
      return compareSemver(version, v) >= 0
    }
  }
}

function parseSimpleInt(x) {
  return parseInt(x)
}

function compare(a, b) {
  if (a < b) return -1
  if (a > b) return +1
  return 0
}

function compareSemver(a, b) {
  return (
    compare(parseInt(a[0]), parseInt(b[0])) ||
    compare(parseInt(a[1] || '0'), parseInt(b[1] || '0')) ||
    compare(parseInt(a[2] || '0'), parseInt(b[2] || '0'))
  )
}

// this follows the npm-like semver behavior
function semverFilterLoose(operator, range) {
  range = range.split('.').map(parseSimpleInt);
  if (typeof range[1] === 'undefined') {
    range[1] = 'x';
  }
  // ignore any patch version because we only return minor versions
  // range[2] = 'x'
  switch (operator) {
    case '<=':
      return function (version) {
        version = version.split('.').map(parseSimpleInt);
        return compareSemverLoose(version, range) <= 0
      }
    case '>=':
    default:
      return function (version) {
        version = version.split('.').map(parseSimpleInt);
        return compareSemverLoose(version, range) >= 0
      }
  }
}

// this follows the npm-like semver behavior
function compareSemverLoose(version, range) {
  if (version[0] !== range[0]) {
    return version[0] < range[0] ? -1 : +1
  }
  if (range[1] === 'x') {
    return 0
  }
  if (version[1] !== range[1]) {
    return version[1] < range[1] ? -1 : +1
  }
  return 0
}

function resolveVersion(data, version) {
  if (data.versions.indexOf(version) !== -1) {
    return version
  } else if (browserslist$2.versionAliases[data.name][version]) {
    return browserslist$2.versionAliases[data.name][version]
  } else {
    return false
  }
}

function normalizeVersion(data, version) {
  var resolved = resolveVersion(data, version);
  if (resolved) {
    return resolved
  } else if (data.versions.length === 1) {
    return data.versions[0]
  } else {
    return false
  }
}

function filterByYear(since, context) {
  since = since / 1000;
  return Object.keys(agents$1).reduce(function (selected, name) {
    var data = byName(name, context);
    if (!data) return selected
    var versions = Object.keys(data.releaseDate).filter(function (v) {
      var date = data.releaseDate[v];
      return date !== null && date >= since
    });
    return selected.concat(versions.map(nameMapper(data.name)))
  }, [])
}

function cloneData(data) {
  return {
    name: data.name,
    versions: data.versions,
    released: data.released,
    releaseDate: data.releaseDate
  }
}

function mapVersions(data, map) {
  data.versions = data.versions.map(function (i) {
    return map[i] || i
  });
  data.released = data.released.map(function (i) {
    return map[i] || i
  });
  var fixedDate = {};
  for (var i in data.releaseDate) {
    fixedDate[map[i] || i] = data.releaseDate[i];
  }
  data.releaseDate = fixedDate;
  return data
}

function byName(name, context) {
  name = name.toLowerCase();
  name = browserslist$2.aliases[name] || name;
  if (context.mobileToDesktop && browserslist$2.desktopNames[name]) {
    var desktop = browserslist$2.data[browserslist$2.desktopNames[name]];
    if (name === 'android') {
      return normalizeAndroidData(cloneData(browserslist$2.data[name]), desktop)
    } else {
      var cloned = cloneData(desktop);
      cloned.name = name;
      if (name === 'op_mob') {
        cloned = mapVersions(cloned, { '10.0-10.1': '10' });
      }
      return cloned
    }
  }
  return browserslist$2.data[name]
}

function normalizeAndroidVersions(androidVersions, chromeVersions) {
  var firstEvergreen = ANDROID_EVERGREEN_FIRST;
  var last = chromeVersions[chromeVersions.length - 1];
  return androidVersions
    .filter(function (version) {
      return /^(?:[2-4]\.|[34]$)/.test(version)
    })
    .concat(chromeVersions.slice(firstEvergreen - last - 1))
}

function normalizeAndroidData(android, chrome) {
  android.released = normalizeAndroidVersions(android.released, chrome.released);
  android.versions = normalizeAndroidVersions(android.versions, chrome.versions);
  return android
}

function checkName(name, context) {
  var data = byName(name, context);
  if (!data) throw new BrowserslistError('Unknown browser ' + name)
  return data
}

function unknownQuery(query) {
  return new BrowserslistError(
    'Unknown browser query `' +
      query +
      '`. ' +
      'Maybe you are using old Browserslist or made typo in query.'
  )
}

function filterAndroid(list, versions, context) {
  if (context.mobileToDesktop) return list
  var released = browserslist$2.data.android.released;
  var last = released[released.length - 1];
  var diff = last - ANDROID_EVERGREEN_FIRST - versions;
  if (diff > 0) {
    return list.slice(-1)
  } else {
    return list.slice(diff - 1)
  }
}

function resolve$2(queries, context) {
  return parse$8(QUERIES, queries).reduce(function (result, node, index) {
    if (node.not && index === 0) {
      throw new BrowserslistError(
        'Write any browsers query (for instance, `defaults`) ' +
          'before `' +
          node.query +
          '`'
      )
    }
    var type = QUERIES[node.type];
    var array = type.select.call(browserslist$2, context, node).map(function (j) {
      var parts = j.split(' ');
      if (parts[1] === '0') {
        return parts[0] + ' ' + byName(parts[0], context).versions[0]
      } else {
        return j
      }
    });

    if (node.compose === 'and') {
      if (node.not) {
        return result.filter(function (j) {
          return array.indexOf(j) === -1
        })
      } else {
        return result.filter(function (j) {
          return array.indexOf(j) !== -1
        })
      }
    } else {
      if (node.not) {
        var filter = {};
        array.forEach(function (j) {
          filter[j] = true;
        });
        return result.filter(function (j) {
          return !filter[j]
        })
      }
      return result.concat(array)
    }
  }, [])
}

function prepareOpts(opts) {
  if (typeof opts === 'undefined') opts = {};

  if (typeof opts.path === 'undefined') {
    opts.path = path.resolve ? path.resolve('.') : '.';
  }

  return opts
}

function prepareQueries(queries, opts) {
  if (typeof queries === 'undefined' || queries === null) {
    var config = browserslist$2.loadConfig(opts);
    if (config) {
      queries = config;
    } else {
      queries = browserslist$2.defaults;
    }
  }

  return queries
}

function checkQueries(queries) {
  if (!(typeof queries === 'string' || Array.isArray(queries))) {
    throw new BrowserslistError(
      'Browser queries must be an array or string. Got ' + typeof queries + '.'
    )
  }
}

var cache = {};

function browserslist$2(queries, opts) {
  opts = prepareOpts(opts);
  queries = prepareQueries(queries, opts);
  checkQueries(queries);

  var context = {
    ignoreUnknownVersions: opts.ignoreUnknownVersions,
    dangerousExtend: opts.dangerousExtend,
    mobileToDesktop: opts.mobileToDesktop,
    path: opts.path,
    env: opts.env
  };

  env.oldDataWarning(browserslist$2.data);
  var stats = env.getStat(opts, browserslist$2.data);
  if (stats) {
    context.customUsage = {};
    for (var browser in stats) {
      fillUsage(context.customUsage, browser, stats[browser]);
    }
  }

  var cacheKey = JSON.stringify([queries, context]);
  if (cache[cacheKey]) return cache[cacheKey]

  var result = uniq$1(resolve$2(queries, context)).sort(function (name1, name2) {
    name1 = name1.split(' ');
    name2 = name2.split(' ');
    if (name1[0] === name2[0]) {
      // assumptions on caniuse data
      // 1) version ranges never overlaps
      // 2) if version is not a range, it never contains `-`
      var version1 = name1[1].split('-')[0];
      var version2 = name2[1].split('-')[0];
      return compareSemver(version2.split('.'), version1.split('.'))
    } else {
      return compare(name1[0], name2[0])
    }
  });
  if (!({}).BROWSERSLIST_DISABLE_CACHE) {
    cache[cacheKey] = result;
  }
  return result
}

browserslist$2.parse = function (queries, opts) {
  opts = prepareOpts(opts);
  queries = prepareQueries(queries, opts);
  checkQueries(queries);
  return parse$8(QUERIES, queries)
};

// Will be filled by Can I Use data below
browserslist$2.cache = {};
browserslist$2.data = {};
browserslist$2.usage = {
  global: {},
  custom: null
};

// Default browsers query
browserslist$2.defaults = ['> 0.5%', 'last 2 versions', 'Firefox ESR', 'not dead'];

// Browser names aliases
browserslist$2.aliases = {
  fx: 'firefox',
  ff: 'firefox',
  ios: 'ios_saf',
  explorer: 'ie',
  blackberry: 'bb',
  explorermobile: 'ie_mob',
  operamini: 'op_mini',
  operamobile: 'op_mob',
  chromeandroid: 'and_chr',
  firefoxandroid: 'and_ff',
  ucandroid: 'and_uc',
  qqandroid: 'and_qq'
};

// Can I Use only provides a few versions for some browsers (e.g. and_chr).
// Fallback to a similar browser for unknown versions
browserslist$2.desktopNames = {
  and_chr: 'chrome',
  and_ff: 'firefox',
  ie_mob: 'ie',
  op_mob: 'opera',
  android: 'chrome' // has extra processing logic
};

// Aliases to work with joined versions like `ios_saf 7.0-7.1`
browserslist$2.versionAliases = {};

browserslist$2.clearCaches = env.clearCaches;
browserslist$2.parseConfig = env.parseConfig;
browserslist$2.readConfig = env.readConfig;
browserslist$2.findConfig = env.findConfig;
browserslist$2.loadConfig = env.loadConfig;

browserslist$2.coverage = function (browsers, stats) {
  var data;
  if (typeof stats === 'undefined') {
    data = browserslist$2.usage.global;
  } else if (stats === 'my stats') {
    var opts = {};
    opts.path = path.resolve ? path.resolve('.') : '.';
    var customStats = env.getStat(opts);
    if (!customStats) {
      throw new BrowserslistError('Custom usage statistics was not provided')
    }
    data = {};
    for (var browser in customStats) {
      fillUsage(data, browser, customStats[browser]);
    }
  } else if (typeof stats === 'string') {
    if (stats.length > 2) {
      stats = stats.toLowerCase();
    } else {
      stats = stats.toUpperCase();
    }
    env.loadCountry(browserslist$2.usage, stats, browserslist$2.data);
    data = browserslist$2.usage[stats];
  } else {
    if ('dataByBrowser' in stats) {
      stats = stats.dataByBrowser;
    }
    data = {};
    for (var name in stats) {
      for (var version in stats[name]) {
        data[name + ' ' + version] = stats[name][version];
      }
    }
  }

  return browsers.reduce(function (all, i) {
    var usage = data[i];
    if (usage === undefined) {
      usage = data[i.replace(/ \S+$/, ' 0')];
    }
    return all + (usage || 0)
  }, 0)
};

function nodeQuery(context, node) {
  var matched = browserslist$2.nodeVersions.filter(function (i) {
    return isVersionsMatch(i, node.version)
  });
  if (matched.length === 0) {
    if (context.ignoreUnknownVersions) {
      return []
    } else {
      throw new BrowserslistError(
        'Unknown version ' + node.version + ' of Node.js'
      )
    }
  }
  return ['node ' + matched[matched.length - 1]]
}

function sinceQuery(context, node) {
  var year = parseInt(node.year);
  var month = parseInt(node.month || '01') - 1;
  var day = parseInt(node.day || '01');
  return filterByYear(Date.UTC(year, month, day, 0, 0, 0), context)
}

function coverQuery(context, node) {
  var coverage = parseFloat(node.coverage);
  var usage = browserslist$2.usage.global;
  if (node.place) {
    if (node.place.match(/^my\s+stats$/i)) {
      if (!context.customUsage) {
        throw new BrowserslistError('Custom usage statistics was not provided')
      }
      usage = context.customUsage;
    } else {
      var place;
      if (node.place.length === 2) {
        place = node.place.toUpperCase();
      } else {
        place = node.place.toLowerCase();
      }
      env.loadCountry(browserslist$2.usage, place, browserslist$2.data);
      usage = browserslist$2.usage[place];
    }
  }
  var versions = Object.keys(usage).sort(function (a, b) {
    return usage[b] - usage[a]
  });
  var coveraged = 0;
  var result = [];
  var version;
  for (var i = 0; i < versions.length; i++) {
    version = versions[i];
    if (usage[version] === 0) break
    coveraged += usage[version];
    result.push(version);
    if (coveraged >= coverage) break
  }
  return result
}

var QUERIES = {
  last_major_versions: {
    matches: ['versions'],
    regexp: /^last\s+(\d+)\s+major\s+versions?$/i,
    select: function (context, node) {
      return Object.keys(agents$1).reduce(function (selected, name) {
        var data = byName(name, context);
        if (!data) return selected
        var list = getMajorVersions(data.released, node.versions);
        list = list.map(nameMapper(data.name));
        if (data.name === 'android') {
          list = filterAndroid(list, node.versions, context);
        }
        return selected.concat(list)
      }, [])
    }
  },
  last_versions: {
    matches: ['versions'],
    regexp: /^last\s+(\d+)\s+versions?$/i,
    select: function (context, node) {
      return Object.keys(agents$1).reduce(function (selected, name) {
        var data = byName(name, context);
        if (!data) return selected
        var list = data.released.slice(-node.versions);
        list = list.map(nameMapper(data.name));
        if (data.name === 'android') {
          list = filterAndroid(list, node.versions, context);
        }
        return selected.concat(list)
      }, [])
    }
  },
  last_electron_major_versions: {
    matches: ['versions'],
    regexp: /^last\s+(\d+)\s+electron\s+major\s+versions?$/i,
    select: function (context, node) {
      var validVersions = getMajorVersions(Object.keys(e2c), node.versions);
      return validVersions.map(function (i) {
        return 'chrome ' + e2c[i]
      })
    }
  },
  last_node_major_versions: {
    matches: ['versions'],
    regexp: /^last\s+(\d+)\s+node\s+major\s+versions?$/i,
    select: function (context, node) {
      return getMajorVersions(browserslist$2.nodeVersions, node.versions).map(
        function (version) {
          return 'node ' + version
        }
      )
    }
  },
  last_browser_major_versions: {
    matches: ['versions', 'browser'],
    regexp: /^last\s+(\d+)\s+(\w+)\s+major\s+versions?$/i,
    select: function (context, node) {
      var data = checkName(node.browser, context);
      var validVersions = getMajorVersions(data.released, node.versions);
      var list = validVersions.map(nameMapper(data.name));
      if (data.name === 'android') {
        list = filterAndroid(list, node.versions, context);
      }
      return list
    }
  },
  last_electron_versions: {
    matches: ['versions'],
    regexp: /^last\s+(\d+)\s+electron\s+versions?$/i,
    select: function (context, node) {
      return Object.keys(e2c)
        .slice(-node.versions)
        .map(function (i) {
          return 'chrome ' + e2c[i]
        })
    }
  },
  last_node_versions: {
    matches: ['versions'],
    regexp: /^last\s+(\d+)\s+node\s+versions?$/i,
    select: function (context, node) {
      return browserslist$2.nodeVersions
        .slice(-node.versions)
        .map(function (version) {
          return 'node ' + version
        })
    }
  },
  last_browser_versions: {
    matches: ['versions', 'browser'],
    regexp: /^last\s+(\d+)\s+(\w+)\s+versions?$/i,
    select: function (context, node) {
      var data = checkName(node.browser, context);
      var list = data.released.slice(-node.versions).map(nameMapper(data.name));
      if (data.name === 'android') {
        list = filterAndroid(list, node.versions, context);
      }
      return list
    }
  },
  unreleased_versions: {
    matches: [],
    regexp: /^unreleased\s+versions$/i,
    select: function (context) {
      return Object.keys(agents$1).reduce(function (selected, name) {
        var data = byName(name, context);
        if (!data) return selected
        var list = data.versions.filter(function (v) {
          return data.released.indexOf(v) === -1
        });
        list = list.map(nameMapper(data.name));
        return selected.concat(list)
      }, [])
    }
  },
  unreleased_electron_versions: {
    matches: [],
    regexp: /^unreleased\s+electron\s+versions?$/i,
    select: function () {
      return []
    }
  },
  unreleased_browser_versions: {
    matches: ['browser'],
    regexp: /^unreleased\s+(\w+)\s+versions?$/i,
    select: function (context, node) {
      var data = checkName(node.browser, context);
      return data.versions
        .filter(function (v) {
          return data.released.indexOf(v) === -1
        })
        .map(nameMapper(data.name))
    }
  },
  last_years: {
    matches: ['years'],
    regexp: /^last\s+(\d*.?\d+)\s+years?$/i,
    select: function (context, node) {
      return filterByYear(Date.now() - YEAR * node.years, context)
    }
  },
  since_y: {
    matches: ['year'],
    regexp: /^since (\d+)$/i,
    select: sinceQuery
  },
  since_y_m: {
    matches: ['year', 'month'],
    regexp: /^since (\d+)-(\d+)$/i,
    select: sinceQuery
  },
  since_y_m_d: {
    matches: ['year', 'month', 'day'],
    regexp: /^since (\d+)-(\d+)-(\d+)$/i,
    select: sinceQuery
  },
  popularity: {
    matches: ['sign', 'popularity'],
    regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%$/,
    select: function (context, node) {
      var popularity = parseFloat(node.popularity);
      var usage = browserslist$2.usage.global;
      return Object.keys(usage).reduce(function (result, version) {
        if (node.sign === '>') {
          if (usage[version] > popularity) {
            result.push(version);
          }
        } else if (node.sign === '<') {
          if (usage[version] < popularity) {
            result.push(version);
          }
        } else if (node.sign === '<=') {
          if (usage[version] <= popularity) {
            result.push(version);
          }
        } else if (usage[version] >= popularity) {
          result.push(version);
        }
        return result
      }, [])
    }
  },
  popularity_in_my_stats: {
    matches: ['sign', 'popularity'],
    regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+my\s+stats$/,
    select: function (context, node) {
      var popularity = parseFloat(node.popularity);
      if (!context.customUsage) {
        throw new BrowserslistError('Custom usage statistics was not provided')
      }
      var usage = context.customUsage;
      return Object.keys(usage).reduce(function (result, version) {
        var percentage = usage[version];
        if (percentage == null) {
          return result
        }

        if (node.sign === '>') {
          if (percentage > popularity) {
            result.push(version);
          }
        } else if (node.sign === '<') {
          if (percentage < popularity) {
            result.push(version);
          }
        } else if (node.sign === '<=') {
          if (percentage <= popularity) {
            result.push(version);
          }
        } else if (percentage >= popularity) {
          result.push(version);
        }
        return result
      }, [])
    }
  },
  popularity_in_config_stats: {
    matches: ['sign', 'popularity', 'config'],
    regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+(\S+)\s+stats$/,
    select: function (context, node) {
      var popularity = parseFloat(node.popularity);
      var stats = env.loadStat(context, node.config, browserslist$2.data);
      if (stats) {
        context.customUsage = {};
        for (var browser in stats) {
          fillUsage(context.customUsage, browser, stats[browser]);
        }
      }
      if (!context.customUsage) {
        throw new BrowserslistError('Custom usage statistics was not provided')
      }
      var usage = context.customUsage;
      return Object.keys(usage).reduce(function (result, version) {
        var percentage = usage[version];
        if (percentage == null) {
          return result
        }

        if (node.sign === '>') {
          if (percentage > popularity) {
            result.push(version);
          }
        } else if (node.sign === '<') {
          if (percentage < popularity) {
            result.push(version);
          }
        } else if (node.sign === '<=') {
          if (percentage <= popularity) {
            result.push(version);
          }
        } else if (percentage >= popularity) {
          result.push(version);
        }
        return result
      }, [])
    }
  },
  popularity_in_place: {
    matches: ['sign', 'popularity', 'place'],
    regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+((alt-)?\w\w)$/,
    select: function (context, node) {
      var popularity = parseFloat(node.popularity);
      var place = node.place;
      if (place.length === 2) {
        place = place.toUpperCase();
      } else {
        place = place.toLowerCase();
      }
      env.loadCountry(browserslist$2.usage, place, browserslist$2.data);
      var usage = browserslist$2.usage[place];
      return Object.keys(usage).reduce(function (result, version) {
        var percentage = usage[version];
        if (percentage == null) {
          return result
        }

        if (node.sign === '>') {
          if (percentage > popularity) {
            result.push(version);
          }
        } else if (node.sign === '<') {
          if (percentage < popularity) {
            result.push(version);
          }
        } else if (node.sign === '<=') {
          if (percentage <= popularity) {
            result.push(version);
          }
        } else if (percentage >= popularity) {
          result.push(version);
        }
        return result
      }, [])
    }
  },
  cover: {
    matches: ['coverage'],
    regexp: /^cover\s+(\d+|\d+\.\d+|\.\d+)%$/i,
    select: coverQuery
  },
  cover_in: {
    matches: ['coverage', 'place'],
    regexp: /^cover\s+(\d+|\d+\.\d+|\.\d+)%\s+in\s+(my\s+stats|(alt-)?\w\w)$/i,
    select: coverQuery
  },
  supports: {
    matches: ['feature'],
    regexp: /^supports\s+([\w-]+)$/,
    select: function (context, node) {
      env.loadFeature(browserslist$2.cache, node.feature);
      var features = browserslist$2.cache[node.feature];
      return Object.keys(features).reduce(function (result, version) {
        var flags = features[version];
        if (flags.indexOf('y') >= 0 || flags.indexOf('a') >= 0) {
          result.push(version);
        }
        return result
      }, [])
    }
  },
  electron_range: {
    matches: ['from', 'to'],
    regexp: /^electron\s+([\d.]+)\s*-\s*([\d.]+)$/i,
    select: function (context, node) {
      var fromToUse = normalizeElectron(node.from);
      var toToUse = normalizeElectron(node.to);
      var from = parseFloat(node.from);
      var to = parseFloat(node.to);
      if (!e2c[fromToUse]) {
        throw new BrowserslistError('Unknown version ' + from + ' of electron')
      }
      if (!e2c[toToUse]) {
        throw new BrowserslistError('Unknown version ' + to + ' of electron')
      }
      return Object.keys(e2c)
        .filter(function (i) {
          var parsed = parseFloat(i);
          return parsed >= from && parsed <= to
        })
        .map(function (i) {
          return 'chrome ' + e2c[i]
        })
    }
  },
  node_range: {
    matches: ['from', 'to'],
    regexp: /^node\s+([\d.]+)\s*-\s*([\d.]+)$/i,
    select: function (context, node) {
      return browserslist$2.nodeVersions
        .filter(semverFilterLoose('>=', node.from))
        .filter(semverFilterLoose('<=', node.to))
        .map(function (v) {
          return 'node ' + v
        })
    }
  },
  browser_range: {
    matches: ['browser', 'from', 'to'],
    regexp: /^(\w+)\s+([\d.]+)\s*-\s*([\d.]+)$/i,
    select: function (context, node) {
      var data = checkName(node.browser, context);
      var from = parseFloat(normalizeVersion(data, node.from) || node.from);
      var to = parseFloat(normalizeVersion(data, node.to) || node.to);
      function filter(v) {
        var parsed = parseFloat(v);
        return parsed >= from && parsed <= to
      }
      return data.released.filter(filter).map(nameMapper(data.name))
    }
  },
  electron_ray: {
    matches: ['sign', 'version'],
    regexp: /^electron\s*(>=?|<=?)\s*([\d.]+)$/i,
    select: function (context, node) {
      var versionToUse = normalizeElectron(node.version);
      return Object.keys(e2c)
        .filter(generateFilter(node.sign, versionToUse))
        .map(function (i) {
          return 'chrome ' + e2c[i]
        })
    }
  },
  node_ray: {
    matches: ['sign', 'version'],
    regexp: /^node\s*(>=?|<=?)\s*([\d.]+)$/i,
    select: function (context, node) {
      return browserslist$2.nodeVersions
        .filter(generateSemverFilter(node.sign, node.version))
        .map(function (v) {
          return 'node ' + v
        })
    }
  },
  browser_ray: {
    matches: ['browser', 'sign', 'version'],
    regexp: /^(\w+)\s*(>=?|<=?)\s*([\d.]+)$/,
    select: function (context, node) {
      var version = node.version;
      var data = checkName(node.browser, context);
      var alias = browserslist$2.versionAliases[data.name][version];
      if (alias) version = alias;
      return data.released
        .filter(generateFilter(node.sign, version))
        .map(function (v) {
          return data.name + ' ' + v
        })
    }
  },
  firefox_esr: {
    matches: [],
    regexp: /^(firefox|ff|fx)\s+esr$/i,
    select: function () {
      return ['firefox 102']
    }
  },
  opera_mini_all: {
    matches: [],
    regexp: /(operamini|op_mini)\s+all/i,
    select: function () {
      return ['op_mini all']
    }
  },
  electron_version: {
    matches: ['version'],
    regexp: /^electron\s+([\d.]+)$/i,
    select: function (context, node) {
      var versionToUse = normalizeElectron(node.version);
      var chrome = e2c[versionToUse];
      if (!chrome) {
        throw new BrowserslistError(
          'Unknown version ' + node.version + ' of electron'
        )
      }
      return ['chrome ' + chrome]
    }
  },
  node_major_version: {
    matches: ['version'],
    regexp: /^node\s+(\d+)$/i,
    select: nodeQuery
  },
  node_minor_version: {
    matches: ['version'],
    regexp: /^node\s+(\d+\.\d+)$/i,
    select: nodeQuery
  },
  node_patch_version: {
    matches: ['version'],
    regexp: /^node\s+(\d+\.\d+\.\d+)$/i,
    select: nodeQuery
  },
  current_node: {
    matches: [],
    regexp: /^current\s+node$/i,
    select: function (context) {
      return [env.currentNode(resolve$2, context)]
    }
  },
  maintained_node: {
    matches: [],
    regexp: /^maintained\s+node\s+versions$/i,
    select: function (context) {
      var now = Date.now();
      var queries = Object.keys(jsEOL)
        .filter(function (key) {
          return (
            now < Date.parse(jsEOL[key].end) &&
            now > Date.parse(jsEOL[key].start) &&
            isEolReleased(key)
          )
        })
        .map(function (key) {
          return 'node ' + key.slice(1)
        });
      return resolve$2(queries, context)
    }
  },
  phantomjs_1_9: {
    matches: [],
    regexp: /^phantomjs\s+1.9$/i,
    select: function () {
      return ['safari 5']
    }
  },
  phantomjs_2_1: {
    matches: [],
    regexp: /^phantomjs\s+2.1$/i,
    select: function () {
      return ['safari 6']
    }
  },
  browser_version: {
    matches: ['browser', 'version'],
    regexp: /^(\w+)\s+(tp|[\d.]+)$/i,
    select: function (context, node) {
      var version = node.version;
      if (/^tp$/i.test(version)) version = 'TP';
      var data = checkName(node.browser, context);
      var alias = normalizeVersion(data, version);
      if (alias) {
        version = alias;
      } else {
        if (version.indexOf('.') === -1) {
          alias = version + '.0';
        } else {
          alias = version.replace(/\.0$/, '');
        }
        alias = normalizeVersion(data, alias);
        if (alias) {
          version = alias;
        } else if (context.ignoreUnknownVersions) {
          return []
        } else {
          throw new BrowserslistError(
            'Unknown version ' + version + ' of ' + node.browser
          )
        }
      }
      return [data.name + ' ' + version]
    }
  },
  browserslist_config: {
    matches: [],
    regexp: /^browserslist config$/i,
    select: function (context) {
      return browserslist$2(undefined, context)
    }
  },
  extends: {
    matches: ['config'],
    regexp: /^extends (.+)$/i,
    select: function (context, node) {
      return resolve$2(env.loadQueries(context, node.config), context)
    }
  },
  defaults: {
    matches: [],
    regexp: /^defaults$/i,
    select: function (context) {
      return resolve$2(browserslist$2.defaults, context)
    }
  },
  dead: {
    matches: [],
    regexp: /^dead$/i,
    select: function (context) {
      var dead = [
        'Baidu >= 0',
        'ie <= 11',
        'ie_mob <= 11',
        'bb <= 10',
        'op_mob <= 12.1',
        'samsung 4'
      ];
      return resolve$2(dead, context)
    }
  },
  unknown: {
    matches: [],
    regexp: /^(\w+)$/i,
    select: function (context, node) {
      if (byName(node.query, context)) {
        throw new BrowserslistError(
          'Specify versions in Browserslist query for browser ' + node.query
        )
      } else {
        throw unknownQuery(node.query)
      }
    }
  }
}

// Get and convert Can I Use data

;(function () {
  for (var name in agents$1) {
    var browser = agents$1[name];
    browserslist$2.data[name] = {
      name: name,
      versions: normalize(agents$1[name].versions),
      released: normalize(agents$1[name].versions.slice(0, -3)),
      releaseDate: agents$1[name].release_date
    };
    fillUsage(browserslist$2.usage.global, name, browser.usage_global);

    browserslist$2.versionAliases[name] = {};
    for (var i = 0; i < browser.versions.length; i++) {
      var full = browser.versions[i];
      if (!full) continue

      if (full.indexOf('-') !== -1) {
        var interval = full.split('-');
        for (var j = 0; j < interval.length; j++) {
          browserslist$2.versionAliases[name][interval[j]] = full;
        }
      }
    }
  }

  browserslist$2.versionAliases.op_mob['59'] = '58';

  browserslist$2.nodeVersions = jsReleases.map(function (release) {
    return release.version
  });
})();

var browserslist_1 = browserslist$2;

var unpacker = {};

var feature$1 = {exports: {}};

var statuses$1 = {
  1: 'ls', // WHATWG Living Standard
  2: 'rec', // W3C Recommendation
  3: 'pr', // W3C Proposed Recommendation
  4: 'cr', // W3C Candidate Recommendation
  5: 'wd', // W3C Working Draft
  6: 'other', // Non-W3C, but reputable
  7: 'unoff' // Unofficial, Editor's Draft or W3C "Note"
};

var supported$1 = {
  y: 1 << 0,
  n: 1 << 1,
  a: 1 << 2,
  p: 1 << 3,
  u: 1 << 4,
  x: 1 << 5,
  d: 1 << 6
};

const statuses = statuses$1;
const supported = supported$1;
const browsers$2 = browsers$5.browsers;
const versions = browserVersions$1.browserVersions;

const MATH2LOG = Math.log(2);

function unpackSupport(cipher) {
  // bit flags
  let stats = Object.keys(supported).reduce((list, support) => {
    if (cipher & supported[support]) list.push(support);
    return list
  }, []);

  // notes
  let notes = cipher >> 7;
  let notesArray = [];
  while (notes) {
    let note = Math.floor(Math.log(notes) / MATH2LOG) + 1;
    notesArray.unshift(`#${note}`);
    notes -= Math.pow(2, note - 1);
  }

  return stats.concat(notesArray).join(' ')
}

function unpackFeature(packed) {
  let unpacked = { status: statuses[packed.B], title: packed.C };
  unpacked.stats = Object.keys(packed.A).reduce((browserStats, key) => {
    let browser = packed.A[key];
    browserStats[browsers$2[key]] = Object.keys(browser).reduce(
      (stats, support) => {
        let packedVersions = browser[support].split(' ');
        let unpacked2 = unpackSupport(support);
        packedVersions.forEach(v => (stats[versions[v]] = unpacked2));
        return stats
      },
      {}
    );
    return browserStats
  }, {});
  return unpacked
}

feature$1.exports = unpackFeature;
feature$1.exports.default = unpackFeature;

var features$1 = {};

var aac={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"4B oB I p J D E F A B C K L G M N O q r s 5B 6B","132":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F","16":"A B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB"},H:{"2":"gC"},I:{"1":"oB I H kC 2B lC mC","2":"hC iC jC"},J:{"1":"A","2":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"132":"b"},N:{"1":"A","2":"B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"132":"2C"}},B:6,C:"AAC audio file format"};

var abortcontroller={A:{A:{"2":"J D E F A B 3B"},B:{"1":"M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G"},C:{"1":"SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB 5B 6B"},D:{"1":"YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB"},E:{"1":"K L G mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B 8B uB 9B AC BC CC vB","130":"C lB"},F:{"1":"OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB HC IC JC KC lB 1B LC mB"},G:{"1":"WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"sC vB tC uC vC wC xC nB yC zC","2":"I oC pC qC rC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:1,C:"AbortController & AbortSignal"};

var ac3Ec3={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O","2":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC","132":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D","132":"A"},K:{"2":"A B C c lB 1B","132":"mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:6,C:"AC-3 (Dolby Digital) and EC-3 (Dolby Digital Plus) codecs"};

var accelerometer={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB","194":"TB pB UB qB VB WB c XB YB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:4,C:"Accelerometer"};

var addeventlistener={A:{A:{"1":"F A B","130":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","257":"4B oB I p J 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"EventTarget.addEventListener()"};

var alternateStylesheet={A:{A:{"1":"E F A B","2":"J D 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"F B C HC IC JC KC lB 1B LC mB","16":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"16":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"16":"D A"},K:{"2":"c","16":"A B C lB 1B mB"},L:{"16":"H"},M:{"16":"b"},N:{"16":"A B"},O:{"16":"nC"},P:{"16":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"16":"1C"},S:{"1":"2C"}},B:1,C:"Alternate stylesheet"};

var ambientLight={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K","132":"L G M N O","322":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"4B oB I p J D E F A B C K L G M N O q r s 5B 6B","132":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB","194":"UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB","322":"TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB HC IC JC KC lB 1B LC mB","322":"fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"132":"2C"}},B:4,C:"Ambient Light Sensor"};

var apng={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B"},D:{"1":"pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB"},E:{"1":"E F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D 8B uB 9B AC BC"},F:{"1":"B C HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","2":"0 1 2 3 4 5 6 7 8 9 F G M N O q r s t u v w x y z AB BB CB DB EB FB GB"},G:{"1":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:7,C:"Animated PNG (APNG)"};

var arrayFindIndex={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v 5B 6B"},D:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB"},E:{"1":"E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D 8B uB 9B AC"},F:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D","16":"A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"Array.prototype.findIndex"};

var arrayFind={A:{A:{"2":"J D E F A B 3B"},B:{"1":"G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","16":"C K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v 5B 6B"},D:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB"},E:{"1":"E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D 8B uB 9B AC"},F:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D","16":"A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"Array.prototype.find"};

var arrayFlat={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB 5B 6B"},D:{"1":"bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB"},E:{"1":"C K L G mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B 8B uB 9B AC BC CC vB lB"},F:{"1":"RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB HC IC JC KC lB 1B LC mB"},G:{"1":"XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"vB tC uC vC wC xC nB yC zC","2":"I oC pC qC rC sC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:6,C:"flat & flatMap array methods"};

var arrayIncludes={A:{A:{"2":"J D E F A B 3B"},B:{"1":"L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K"},C:{"1":"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB 5B 6B"},D:{"1":"IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E 8B uB 9B AC BC"},F:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"Array.prototype.includes"};

var arrowFunctions={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s 5B 6B"},D:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC"},F:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"Arrow functions"};

var asmjs={A:{A:{"2":"J D E F A B 3B"},B:{"1":"K L G M N O","132":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","322":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s 5B 6B"},D:{"2":"I p J D E F A B C K L G M N O q r s t u v w x y","132":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","132":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B lC mC","132":"H"},J:{"2":"D A"},K:{"2":"A B C lB 1B mB","132":"c"},L:{"132":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"132":"nC"},P:{"2":"I","132":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"132":"0C"},R:{"132":"1C"},S:{"1":"2C"}},B:6,C:"asm.js"};

var asyncClipboard={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB 5B 6B","132":"WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB","66":"TB pB UB qB"},E:{"1":"L G DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C K 8B uB 9B AC BC CC vB lB mB"},F:{"1":"KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC","260":"dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B lC mC","260":"H"},J:{"2":"D A"},K:{"2":"A B C lB 1B mB","260":"c"},L:{"1":"H"},M:{"132":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"2":"I oC pC qC rC","260":"sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"Asynchronous Clipboard API"};

var asyncFunctions={A:{A:{"2":"J D E F A B 3B"},B:{"1":"G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K","194":"L"},C:{"1":"NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB 5B 6B"},D:{"1":"QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC","514":"vB"},F:{"1":"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB HC IC JC KC lB 1B LC mB"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC","514":"UC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:6,C:"Async functions"};

var atobBtoa={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC lB 1B LC mB","2":"F HC IC","16":"JC"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","16":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Base64 encoding and decoding"};

var audioApi={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v 5B 6B"},D:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K","33":"0 1 2 3 4 L G M N O q r s t u v w x y z"},E:{"1":"G EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B","33":"J D E F A B C K L AC BC CC vB lB mB DC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","33":"G M N O q r s"},G:{"1":"eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC","33":"E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"Web Audio API"};

var audio={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB","132":"I p J D E F A B C K L G M N O q 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC lB 1B LC mB","2":"F","4":"HC IC"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB"},H:{"2":"gC"},I:{"1":"oB I H jC kC 2B lC mC","2":"hC iC"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Audio element"};

var audiotracks={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O","322":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","194":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB","322":"GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B"},F:{"2":"0 1 2 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","322":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"322":"H"},M:{"2":"b"},N:{"1":"A B"},O:{"322":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"322":"1C"},S:{"194":"2C"}},B:1,C:"Audio Tracks"};

var autofocus={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","2":"F"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"oB I H kC 2B lC mC","2":"hC iC jC"},J:{"1":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:1,C:"Autofocus attribute"};

var auxclick={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB 5B 6B","129":"OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"Auxclick"};

var av1={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N","194":"O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB 5B 6B","66":"QB RB SB TB pB UB qB VB WB c","260":"XB","516":"YB"},D:{"1":"cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB","66":"ZB aB bB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1090":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"uC vC wC xC nB yC zC","2":"I oC pC qC rC sC vB tC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:6,C:"AV1 video format"};

var avif={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB 5B 6B","194":"jB kB P Q R rB S T U V W X Y Z a d","257":"e f g h i j k l m n o b H sB tB"},D:{"1":"U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB","516":"0B GC"},F:{"1":"dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB HC IC JC KC lB 1B LC mB"},G:{"1":"0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB","257":"nB"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"wC xC nB yC zC","2":"I oC pC qC rC sC vB tC uC vC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:6,C:"AVIF image format"};

var backgroundAttachment={A:{A:{"1":"F A B","132":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","132":"4B oB I p J D E F A B C K L G M N O q r s t u v 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"p J D E F A B C 9B AC BC CC vB lB mB xB yB zB nB 0B GC","132":"I K 8B uB DC","2050":"L G EC FC wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC lB 1B LC mB","132":"F HC IC"},G:{"2":"uB MC 2B","772":"E NC OC PC QC RC SC TC UC VC WC XC YC","2050":"ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC lC mC","132":"kC 2B"},J:{"260":"D A"},K:{"1":"B C lB 1B mB","2":"c","132":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"2":"I","1028":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS background-attachment"};

var backgroundClipText={A:{A:{"2":"J D E F A B 3B"},B:{"1":"G M N O","33":"C K L P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB 5B 6B"},D:{"33":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"L G EC FC wB xB yB zB nB 0B GC","16":"8B uB","33":"I p J D E F A B C K 9B AC BC CC vB lB mB DC"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B NC","33":"E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC"},H:{"2":"gC"},I:{"16":"oB hC iC jC","33":"I H kC 2B lC mC"},J:{"33":"D A"},K:{"16":"A B C lB 1B mB","33":"c"},L:{"33":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"33":"nC"},P:{"33":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"33":"0C"},R:{"33":"1C"},S:{"1":"2C"}},B:7,C:"Background-clip: text"};

var backgroundImgOpts={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B","36":"6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","516":"I p J D E F A B C K L"},E:{"1":"D E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","772":"I p J 8B uB 9B AC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC lB 1B LC mB","2":"F HC","36":"IC"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","4":"uB MC 2B OC","516":"NC"},H:{"132":"gC"},I:{"1":"H lC mC","36":"hC","516":"oB I kC 2B","548":"iC jC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS3 Background-image options"};

var backgroundPositionXY={A:{A:{"1":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:"background-position-x & background-position-y"};

var backgroundRepeatRoundSpace={A:{A:{"1":"A B","2":"J D E 3B","132":"F"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB 5B 6B"},D:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"D E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B AC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC lB 1B LC mB","2":"F G M N O HC IC"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC"},H:{"1":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"A","2":"D"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:4,C:"CSS background-repeat round and space"};

var backgroundSync={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H 5B 6B","16":"sB tB"},D:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:"Background Sync API"};

var batteryStatus={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"EB FB GB HB IB JB KB LB MB","2":"4B oB I p J D E F NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","132":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB","164":"A B C K L G"},D:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 I p J D E F A B C K L G M N O q r s t u v w x y z","66":"8"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"Battery Status API"};

var beacon={A:{A:{"2":"J D E F A B 3B"},B:{"1":"L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K"},C:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B 8B uB 9B AC BC CC vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v w HC IC JC KC lB 1B LC mB"},G:{"1":"WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"Beacon API"};

var beforeafterprint={A:{A:{"1":"J D E F A B","16":"3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p 5B 6B"},D:{"1":"WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB"},E:{"1":"K L G DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C 8B uB 9B AC BC CC vB lB mB"},F:{"1":"LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB HC IC JC KC lB 1B LC mB"},G:{"1":"ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"16":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"16":"A B"},O:{"1":"nC"},P:{"2":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","16":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Printing Events"};

var bigint={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c 5B 6B","194":"XB YB ZB"},D:{"1":"ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB"},E:{"1":"L G EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C K 8B uB 9B AC BC CC vB lB mB DC"},F:{"1":"PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB HC IC JC KC lB 1B LC mB"},G:{"1":"dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"sC vB tC uC vC wC xC nB yC zC","2":"I oC pC qC rC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:6,C:"BigInt"};

var blobbuilder={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p 5B 6B","36":"J D E F A B C"},D:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D","36":"E F A B C K L G M N O q"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F B C HC IC JC KC lB 1B LC"},G:{"1":"E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC"},H:{"2":"gC"},I:{"1":"H","2":"hC iC jC","36":"oB I kC 2B lC mC"},J:{"1":"A","2":"D"},K:{"1":"c mB","2":"A B C lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"Blob constructing"};

var bloburls={A:{A:{"2":"J D E F 3B","129":"A B"},B:{"1":"G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","129":"C K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D","33":"E F A B C K L G M N O q r s t"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B","33":"J"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC","33":"OC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB hC iC jC","33":"I kC 2B"},J:{"1":"A","2":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","2":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"Blob URLs"};

var borderImage$1={A:{A:{"1":"B","2":"J D E F A 3B"},B:{"1":"L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","129":"C K"},C:{"1":"LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB","260":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB","804":"I p J D E F A B C K L 5B 6B"},D:{"1":"RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","260":"MB NB OB PB QB","388":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB","1412":"0 G M N O q r s t u v w x y z","1956":"I p J D E F A B C K L"},E:{"1":"xB yB zB nB 0B GC","129":"A B C K L G CC vB lB mB DC EC FC wB","1412":"J D E F AC BC","1956":"I p 8B uB 9B"},F:{"1":"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F HC IC","260":"9 AB BB CB DB","388":"0 1 2 3 4 5 6 7 8 G M N O q r s t u v w x y z","1796":"JC KC","1828":"B C lB 1B LC mB"},G:{"1":"xB yB zB nB 0B","129":"SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB","1412":"E OC PC QC RC","1956":"uB MC 2B NC"},H:{"1828":"gC"},I:{"1":"H","388":"lC mC","1956":"oB I hC iC jC kC 2B"},J:{"1412":"A","1924":"D"},K:{"1":"c","2":"A","1828":"B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","2":"A"},O:{"1":"nC"},P:{"1":"qC rC sC vB tC uC vC wC xC nB yC zC","260":"oC pC","388":"I"},Q:{"260":"0C"},R:{"1":"1C"},S:{"260":"2C"}},B:4,C:"CSS3 Border images"};

var borderRadius$1={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","257":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB","289":"oB 5B 6B","292":"4B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","33":"I"},E:{"1":"p D E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","33":"I 8B uB","129":"J 9B AC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC lB 1B LC mB","2":"F HC IC"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","33":"uB"},H:{"2":"gC"},I:{"1":"oB I H iC jC kC 2B lC mC","33":"hC"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"257":"2C"}},B:4,C:"CSS3 Border-radius (rounded corners)"};

var broadcastchannel={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB"},E:{"1":"xB yB zB nB 0B GC","2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB"},F:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB HC IC JC KC lB 1B LC mB"},G:{"1":"xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"BroadcastChannel"};

var brotli={A:{A:{"2":"J D E F A B 3B"},B:{"1":"G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L"},C:{"1":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB 5B 6B"},D:{"1":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB","194":"KB","257":"LB"},E:{"1":"K L G DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC vB","513":"B C lB mB"},F:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","194":"7 8"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"Brotli Accept-Encoding/Content-Encoding"};

var calc={A:{A:{"2":"J D E 3B","260":"F","516":"A B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","33":"I p J D E F A B C K L G"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O","33":"q r s t u v w"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B","33":"J"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC","33":"OC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B","132":"lC mC"},J:{"1":"A","2":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"calc() as CSS unit value"};

var canvasBlending={A:{A:{"2":"J D E F A B 3B"},B:{"1":"K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q 5B 6B"},D:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M HC IC JC KC lB 1B LC mB"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"Canvas blend modes"};

var canvasText={A:{A:{"1":"F A B","2":"3B","8":"J D E"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","8":"4B oB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","8":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC lB 1B LC mB","8":"F HC IC"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","8":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Text API for Canvas"};

var canvas={A:{A:{"1":"F A B","2":"3B","8":"J D E"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B","132":"4B oB 5B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","132":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"260":"gC"},I:{"1":"oB I H kC 2B lC mC","132":"hC iC jC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Canvas (basic support)"};

var chUnit={A:{A:{"2":"J D E 3B","132":"F A B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t u v w x"},E:{"1":"D E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B AC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"A","2":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"ch (character) unit"};

var chacha20Poly1305={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB 5B 6B"},D:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 I p J D E F A B C K L G M N O q r s t u v w x y z","129":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB"},E:{"1":"C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B 8B uB 9B AC BC CC vB"},F:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC","16":"mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"ChaCha20-Poly1305 cipher suites for TLS"};

var channelMessaging={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v w 5B 6B","194":"0 1 2 3 4 5 6 7 8 9 x y z AB BB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC lB 1B LC mB","2":"F HC IC","16":"JC"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Channel messaging"};

var childnodeRemove={A:{A:{"2":"J D E F A B 3B"},B:{"1":"K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","16":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t u"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B","16":"J"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"A","2":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"ChildNode.remove()"};

var classlist={A:{A:{"8":"J D E F 3B","1924":"A B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","8":"4B oB 5B","516":"v w","772":"I p J D E F A B C K L G M N O q r s t u 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","8":"I p J D","516":"v w x y","772":"u","900":"E F A B C K L G M N O q r s t"},E:{"1":"D E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","8":"I p 8B uB","900":"J 9B AC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","8":"F B HC IC JC KC lB","900":"C 1B LC mB"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","8":"uB MC 2B","900":"NC OC"},H:{"900":"gC"},I:{"1":"H lC mC","8":"hC iC jC","900":"oB I kC 2B"},J:{"1":"A","900":"D"},K:{"1":"c","8":"A B","900":"C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"900":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"classList (DOMTokenList)"};

var clientHintsDprWidthViewport={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:6,C:"Client Hints: DPR, Width, Viewport-Width"};

var clipboard={A:{A:{"2436":"J D E F A B 3B"},B:{"260":"N O","2436":"C K L G M","8196":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"4B oB I p J D E F A B C K L G M N O q r s 5B 6B","772":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB","4100":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"2":"I p J D E F A B C","2564":"0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB","8196":"TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","10244":"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB"},E:{"1":"C K L G mB DC EC FC wB xB yB zB nB 0B GC","16":"8B uB","2308":"A B vB lB","2820":"I p J D E F 9B AC BC CC"},F:{"2":"F B HC IC JC KC lB 1B LC","16":"C","516":"mB","2564":"0 G M N O q r s t u v w x y z","8196":"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","10244":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB"},G:{"1":"XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B","2820":"E NC OC PC QC RC SC TC UC VC WC"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B","260":"H","2308":"lC mC"},J:{"2":"D","2308":"A"},K:{"2":"A B C lB 1B","16":"mB","260":"c"},L:{"8196":"H"},M:{"1028":"b"},N:{"2":"A B"},O:{"8196":"nC"},P:{"2052":"oC pC","2308":"I","8196":"qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"10244":"0C"},R:{"8196":"1C"},S:{"4100":"2C"}},B:5,C:"Synchronous Clipboard API"};

var colrV1={A:{A:{"2":"J D E F A B 3B"},B:{"1":"j k l m n o b H","2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i 5B 6B","258":"j k l m n o b H sB tB"},D:{"1":"j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y","194":"Z a d e f g h i"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"16":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"16":"A B"},O:{"2":"nC"},P:{"1":"zC","2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:6,C:"COLR/CPAL(v1) Font Formats"};

var colr={A:{A:{"2":"J D E 3B","257":"F A B"},B:{"1":"C K L G M N O","513":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB","513":"dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"L G EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC vB","129":"B C K lB mB DC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB HC IC JC KC lB 1B LC mB","513":"TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"16":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"16":"A B"},O:{"1":"nC"},P:{"1":"vB tC uC vC wC xC nB yC zC","2":"I oC pC qC rC sC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"COLR/CPAL(v0) Font Formats"};

var comparedocumentposition={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","16":"4B oB 5B 6B"},D:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L","132":"0 G M N O q r s t u v w x y z"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"I p J 8B uB","132":"D E F AC BC CC","260":"9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC mB","16":"F B HC IC JC KC lB 1B","132":"G M"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB","132":"E MC 2B NC OC PC QC RC SC"},H:{"1":"gC"},I:{"1":"H lC mC","16":"hC iC","132":"oB I jC kC 2B"},J:{"132":"D A"},K:{"1":"C c mB","16":"A B lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Node.compareDocumentPosition()"};

var consoleBasic={A:{A:{"1":"A B","2":"J D 3B","132":"E F"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 1B LC mB","2":"F HC IC JC KC"},G:{"1":"uB MC 2B NC","513":"E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"4097":"gC"},I:{"1025":"oB I H hC iC jC kC 2B lC mC"},J:{"258":"D A"},K:{"2":"A","258":"B C lB 1B mB","1025":"c"},L:{"1025":"H"},M:{"2049":"b"},N:{"258":"A B"},O:{"258":"nC"},P:{"1025":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1025":"1C"},S:{"1":"2C"}},B:1,C:"Basic console logging functions"};

var consoleTime={A:{A:{"1":"B","2":"J D E F A 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 1B LC mB","2":"F HC IC JC KC","16":"B"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"c","16":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","2":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"console.time and console.timeEnd"};

var _const={A:{A:{"2":"J D E F A 3B","2052":"B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","132":"4B oB I p J D E F A B C 5B 6B","260":"0 1 2 3 4 5 6 K L G M N O q r s t u v w x y z"},D:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","260":"I p J D E F A B C K L G M N O q r","772":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB","1028":"CB DB EB FB GB HB IB JB"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","260":"I p A 8B uB vB","772":"J D E F 9B AC BC CC"},F:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F HC","132":"B IC JC KC lB 1B","644":"C LC mB","772":"G M N O q r s t u v w x y","1028":"0 1 2 3 4 5 6 z"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","260":"uB MC 2B TC UC","772":"E NC OC PC QC RC SC"},H:{"644":"gC"},I:{"1":"H","16":"hC iC","260":"jC","772":"oB I kC 2B lC mC"},J:{"772":"D A"},K:{"1":"c","132":"A B lB 1B","644":"C mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","2":"A"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","1028":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"const"};

var constraintValidation={A:{A:{"2":"J D E F 3B","900":"A B"},B:{"1":"N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","388":"L G M","900":"C K"},C:{"1":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","260":"KB LB","388":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB","900":"I p J D E F A B C K L G M N O q r s t u v w x y z"},D:{"1":"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L","388":"0 1 2 3 4 5 6 7 8 9 w x y z AB","900":"G M N O q r s t u v"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"I p 8B uB","388":"E F BC CC","900":"J D 9B AC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","16":"F B HC IC JC KC lB 1B","388":"G M N O q r s t u v w x","900":"C LC mB"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B","388":"E PC QC RC SC","900":"NC OC"},H:{"2":"gC"},I:{"1":"H","16":"oB hC iC jC","388":"lC mC","900":"I kC 2B"},J:{"16":"D","388":"A"},K:{"1":"c","16":"A B lB 1B","900":"C mB"},L:{"1":"H"},M:{"1":"b"},N:{"900":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"388":"2C"}},B:1,C:"Constraint Validation API"};

var contenteditable={A:{A:{"1":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B","4":"oB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B"},H:{"2":"gC"},I:{"1":"oB I H kC 2B lC mC","2":"hC iC jC"},J:{"1":"D A"},K:{"1":"c mB","2":"A B C lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"contenteditable attribute (basic support)"};

var contentsecuritypolicy={A:{A:{"2":"J D E F 3B","132":"A B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","129":"I p J D E F A B C K L G M N O q r s t"},D:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K","257":"L G M N O q r s t u v"},E:{"1":"D E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB","257":"J AC","260":"9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B","257":"OC","260":"NC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"2":"D","257":"A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"132":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"Content Security Policy 1.0"};

var contentsecuritypolicy2={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L","4100":"G M N O"},C:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","132":"2 3 4 5","260":"6","516":"7 8 9 AB BB CB DB EB FB"},D:{"1":"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z","1028":"7 8 9","2052":"AB"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t HC IC JC KC lB 1B LC mB","1028":"u v w","2052":"x"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"Content Security Policy Level 2"};

var cookieStoreApi={A:{A:{"2":"J D E F A B 3B"},B:{"1":"W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O","194":"P Q R S T U V"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB","194":"c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB HC IC JC KC lB 1B LC mB","194":"MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"wC xC nB yC zC","2":"I oC pC qC rC sC vB tC uC vC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:"Cookie Store API"};

var cors={A:{A:{"1":"B","2":"J D 3B","132":"A","260":"E F"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B oB","1025":"qB VB WB c XB YB ZB aB bB cB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","132":"I p J D E F A B C"},E:{"2":"8B uB","513":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","644":"I p 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F B HC IC JC KC lB 1B LC"},G:{"513":"E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","644":"uB MC 2B NC"},H:{"2":"gC"},I:{"1":"H lC mC","132":"oB I hC iC jC kC 2B"},J:{"1":"A","132":"D"},K:{"1":"C c mB","2":"A B lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","132":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Cross-Origin Resource Sharing"};

var createimagebitmap={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB 5B 6B","1028":"e f g h i j k l m n o b H sB tB","3076":"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d"},D:{"1":"pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB","132":"LB MB","260":"NB OB","516":"PB QB RB SB TB"},E:{"2":"I p J D E F A B C K L 8B uB 9B AC BC CC vB lB mB DC EC","4100":"G FC wB xB yB zB nB 0B GC"},F:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","132":"8 9","260":"AB BB","516":"CB DB EB FB GB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC","4100":"fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1028":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","16":"I oC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"3076":"2C"}},B:1,C:"createImageBitmap"};

var credentialManagement={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB","66":"JB KB LB","129":"MB NB OB PB QB RB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB HC IC JC KC lB 1B LC mB"},G:{"1":"dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"Credential Management API"};

var cryptography={A:{A:{"2":"3B","8":"J D E F A","164":"B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","513":"C K L G M N O"},C:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","8":"0 1 2 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","66":"3 4"},D:{"1":"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","8":"0 1 2 3 4 5 6 7 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","8":"I p J D 8B uB 9B AC","289":"E F A BC CC vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","8":"F B C G M N O q r s t u HC IC JC KC lB 1B LC mB"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","8":"uB MC 2B NC OC PC","289":"E QC RC SC TC UC"},H:{"2":"gC"},I:{"1":"H","8":"oB I hC iC jC kC 2B lC mC"},J:{"8":"D A"},K:{"1":"c","8":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"8":"A","164":"B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"Web Cryptography"};

var cssAll={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v w x 5B 6B"},D:{"1":"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u HC IC JC KC lB 1B LC mB"},G:{"1":"SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC"},H:{"2":"gC"},I:{"1":"H mC","2":"oB I hC iC jC kC 2B lC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS all property"};

var cssAnimation={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I 5B 6B","33":"p J D E F A B C K L G"},D:{"1":"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","33":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B uB","33":"J D E 9B AC BC","292":"I p"},F:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F B HC IC JC KC lB 1B LC","33":"0 C G M N O q r s t u v w x y z"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","33":"E OC PC QC","164":"uB MC 2B NC"},H:{"2":"gC"},I:{"1":"H","33":"I kC 2B lC mC","164":"oB hC iC jC"},J:{"33":"D A"},K:{"1":"c mB","2":"A B C lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"33":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"CSS Animation"};

var cssAnyLink={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","16":"4B","33":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB 5B 6B"},D:{"1":"XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L","33":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"I p J 8B uB 9B","33":"D E AC BC"},F:{"1":"NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B NC","33":"E OC PC QC"},H:{"2":"gC"},I:{"1":"H","16":"oB I hC iC jC kC 2B","33":"lC mC"},J:{"16":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"sC vB tC uC vC wC xC nB yC zC","16":"I","33":"oC pC qC rC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"33":"2C"}},B:5,C:"CSS :any-link selector"};

var cssAppearance={A:{A:{"2":"J D E F A B 3B"},B:{"1":"T U V W X Y Z a d e f g h i j k l m n o b H","33":"S","164":"P Q R","388":"C K L G M N O"},C:{"1":"Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","164":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P","676":"0 1 2 3 4 5 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","33":"S","164":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R"},E:{"1":"xB yB zB nB 0B GC","164":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB"},F:{"1":"fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","33":"cB dB eB","164":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB"},G:{"1":"xB yB zB nB 0B","164":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB"},H:{"2":"gC"},I:{"1":"H","164":"oB I hC iC jC kC 2B lC mC"},J:{"164":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A","388":"B"},O:{"164":"nC"},P:{"164":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"164":"0C"},R:{"1":"1C"},S:{"164":"2C"}},B:5,C:"CSS Appearance"};

var cssAtCounterStyle={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z","132":"a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","132":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z","132":"a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB HC IC JC KC lB 1B LC mB","132":"jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B lC mC","132":"H"},J:{"2":"D A"},K:{"2":"A B C lB 1B mB","132":"c"},L:{"132":"H"},M:{"132":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC","132":"nB yC zC"},Q:{"2":"0C"},R:{"132":"1C"},S:{"132":"2C"}},B:4,C:"CSS Counter Styles"};

var cssAutofill={A:{D:{"33":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},L:{"33":"H"},B:{"2":"C K L G M N O","33":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U 5B 6B"},M:{"1":"b"},A:{"2":"J D E F A B 3B"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},K:{"2":"A B C lB 1B mB","33":"c"},E:{"1":"G FC wB xB yB zB nB 0B","2":"GC","33":"I p J D E F A B C K L 8B uB 9B AC BC CC vB lB mB DC EC"},G:{"1":"fC wB xB yB zB nB 0B","33":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC"},P:{"33":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},I:{"2":"oB I hC iC jC kC 2B","33":"H lC mC"}},B:6,C:":autofill CSS pseudo-class"};

var cssBackdropFilter={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M","257":"N O"},C:{"1":"o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB 5B 6B","578":"cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n"},D:{"1":"iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB","194":"IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB"},E:{"2":"I p J D E 8B uB 9B AC BC","33":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","194":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB"},G:{"2":"E uB MC 2B NC OC PC QC","33":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"uC vC wC xC nB yC zC","2":"I","194":"oC pC qC rC sC vB tC"},Q:{"194":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:"CSS Backdrop Filter"};

var cssBackgroundOffsets={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t u v"},E:{"1":"D E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B AC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC lB 1B LC mB","2":"F HC IC"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC"},H:{"1":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"A","2":"D"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS background-position edge offsets"};

var cssBackgroundblendmode={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"6 7 8 9 AB BB CB DB EB FB GB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 I p J D E F A B C K L G M N O q r s t u v w x y z","260":"HB"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D 8B uB 9B AC","132":"E F A BC CC"},F:{"1":"0 1 2 3 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s HC IC JC KC lB 1B LC mB","260":"4"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC","132":"E QC RC SC TC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS background-blend-mode"};

var cssBoxdecorationbreak={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","164":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"2":"I p J D E F A B C K L G M N O q r s","164":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J 8B uB 9B","164":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"F HC IC JC KC","129":"B C lB 1B LC mB","164":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"uB MC 2B NC OC","164":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"132":"gC"},I:{"2":"oB I hC iC jC kC 2B","164":"H lC mC"},J:{"2":"D","164":"A"},K:{"2":"A","129":"B C lB 1B mB","164":"c"},L:{"164":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"164":"nC"},P:{"164":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"164":"0C"},R:{"164":"1C"},S:{"1":"2C"}},B:4,C:"CSS box-decoration-break"};

var cssBoxshadow={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB","33":"5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","33":"I p J D E F"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","33":"p","164":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC lB 1B LC mB","2":"F HC IC"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","33":"MC 2B","164":"uB"},H:{"2":"gC"},I:{"1":"I H kC 2B lC mC","164":"oB hC iC jC"},J:{"1":"A","33":"D"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS3 Box-shadow"};

var cssCanvas={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","33":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB"},E:{"2":"8B uB","33":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"6 7 8 9 F B C AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 G M N O q r s t u v w x y z"},G:{"33":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"H","33":"oB I hC iC jC kC 2B lC mC"},J:{"33":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","33":"I"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"CSS Canvas Drawings"};

var cssCaretColor={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB 5B 6B"},D:{"1":"SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB"},E:{"1":"C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B 8B uB 9B AC BC CC vB"},F:{"1":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB HC IC JC KC lB 1B LC mB"},G:{"1":"WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:2,C:"CSS caret-color"};

var cssCascadeLayers={A:{A:{"2":"J D E F A B 3B"},B:{"1":"k l m n o b H","2":"C K L G M N O P Q R S T U V W X Y Z a d e f g","322":"h i j"},C:{"1":"i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e 5B 6B","194":"f g h"},D:{"1":"k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g","322":"h i j"},E:{"1":"xB yB zB nB 0B GC","2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB"},F:{"1":"V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U HC IC JC KC lB 1B LC mB"},G:{"1":"xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"zC","2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:4,C:"CSS Cascade Layers"};

var cssCaseInsensitive={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB 5B 6B"},D:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E 8B uB 9B AC BC"},F:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"Case-insensitive CSS attribute selectors"};

var cssClipPath={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N","260":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","3138":"O"},C:{"1":"PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB","132":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB 5B 6B","644":"IB JB KB LB MB NB OB"},D:{"2":"I p J D E F A B C K L G M N O q r s t u","260":"QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","292":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB"},E:{"2":"I p J 8B uB 9B AC","260":"L G DC EC FC wB xB yB zB nB 0B GC","292":"D E F A B C K BC CC vB lB mB"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","260":"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","292":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB"},G:{"2":"uB MC 2B NC OC","260":"ZC aC bC cC dC eC fC wB xB yB zB nB 0B","292":"E PC QC RC SC TC UC VC WC XC YC"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B","260":"H","292":"lC mC"},J:{"2":"D A"},K:{"2":"A B C lB 1B mB","260":"c"},L:{"260":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"260":"nC"},P:{"292":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"292":"0C"},R:{"260":"1C"},S:{"644":"2C"}},B:4,C:"CSS clip-path property (for HTML)"};

var cssColorAdjust={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","33":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB 5B 6B"},D:{"16":"I p J D E F A B C K L G M N O","33":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p 8B uB 9B","33":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"16":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"16":"oB I hC iC jC kC 2B lC mC","33":"H"},J:{"16":"D A"},K:{"2":"A B C lB 1B mB","33":"c"},L:{"16":"H"},M:{"1":"b"},N:{"16":"A B"},O:{"16":"nC"},P:{"16":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"33":"0C"},R:{"16":"1C"},S:{"1":"2C"}},B:4,C:"CSS print-color-adjust"};

var cssColorFunction={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"G FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC","132":"B C K L vB lB mB DC EC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC","132":"UC VC WC XC YC ZC aC bC cC dC eC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:4,C:"CSS color() function"};

var cssConicGradients={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB 5B 6B","578":"hB iB jB kB P Q R rB"},D:{"1":"bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB","194":"pB UB qB VB WB c XB YB ZB aB"},E:{"1":"K L G mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C 8B uB 9B AC BC CC vB lB"},F:{"1":"c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HC IC JC KC lB 1B LC mB","194":"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB"},G:{"1":"YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"vB tC uC vC wC xC nB yC zC","2":"I oC pC qC rC sC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"CSS Conical Gradients"};

var cssContainerQueries={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b","516":"H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a","194":"e f g h i j k l m n o b","450":"d","516":"H"},E:{"1":"nB 0B GC","2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB HC IC JC KC lB 1B LC mB","194":"P Q R rB S T U V W X Y Z","516":"a"},G:{"1":"nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B lC mC","516":"H"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"516":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:5,C:"CSS Container Queries (Size)"};

var cssContainerQueryUnits={A:{A:{"2":"J D E F A B 3B"},B:{"1":"H","2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d","194":"m n o b","450":"e f g h i j k l"},E:{"1":"nB 0B GC","2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB"},F:{"1":"a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB HC IC JC KC lB 1B LC mB","194":"P Q R rB S T U V W X Y Z"},G:{"1":"nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:5,C:"CSS Container Query Units"};

var cssContainment={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB 5B 6B","194":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB"},D:{"1":"NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB","66":"MB"},E:{"1":"xB yB zB nB 0B GC","2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB"},F:{"1":"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","66":"9 AB"},G:{"1":"xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"194":"2C"}},B:2,C:"CSS Containment"};

var cssContentVisibility={A:{A:{"2":"J D E F A B 3B"},B:{"1":"U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O P Q R S T"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"wC xC nB yC zC","2":"I oC pC qC rC sC vB tC uC vC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"CSS content-visibility"};

var cssCounters={A:{A:{"1":"E F A B","2":"J D 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS Counters"};

var cssCrispEdges={A:{A:{"2":"J 3B","2340":"D E F A B"},B:{"2":"C K L G M N O","1025":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"e f g h i j k l m n o b H sB tB","2":"4B oB 5B","513":"XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d","545":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB","1025":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B","164":"J","4644":"D E F AC BC CC"},F:{"2":"F B G M N O q r s t u v w x y HC IC JC KC lB 1B","545":"C LC mB","1025":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B","4260":"NC OC","4644":"E PC QC RC SC"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B lC mC","1025":"H"},J:{"2":"D","4260":"A"},K:{"2":"A B lB 1B","545":"C mB","1025":"c"},L:{"1025":"H"},M:{"1":"b"},N:{"2340":"A B"},O:{"1025":"nC"},P:{"1025":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1025":"0C"},R:{"1025":"1C"},S:{"4097":"2C"}},B:4,C:"Crisp edges/pixelated images"};

var cssCrossFade={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","33":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"I p J D E F A B C K L G M","33":"0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB","33":"J D E F 9B AC BC CC"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B","33":"E NC OC PC QC RC SC"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B","33":"H lC mC"},J:{"2":"D A"},K:{"2":"A B C lB 1B mB","33":"c"},L:{"33":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"33":"nC"},P:{"33":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"33":"0C"},R:{"33":"1C"},S:{"2":"2C"}},B:4,C:"CSS Cross-Fade Function"};

var cssDefaultPseudo={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","16":"4B oB 5B 6B"},D:{"1":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L","132":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"I p 8B uB","132":"J D E F A 9B AC BC CC"},F:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","16":"F B HC IC JC KC lB 1B","132":"0 1 2 3 4 5 6 7 8 G M N O q r s t u v w x y z","260":"C LC mB"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B NC OC","132":"E PC QC RC SC TC"},H:{"260":"gC"},I:{"1":"H","16":"oB hC iC jC","132":"I kC 2B lC mC"},J:{"16":"D","132":"A"},K:{"1":"c","16":"A B C lB 1B","260":"mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","132":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:":default CSS pseudo-class"};

var cssDescendantGtgt={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O Q R S T U V W X Y Z a d e f g h i j k l m n o b H","16":"P"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"B","2":"I p J D E F A C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"Explicit descendant combinator >>"};

var cssDeviceadaptation={A:{A:{"2":"J D E F 3B","164":"A B"},B:{"66":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","164":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"I p J D E F A B C K L G M N O q r s t u v w x y z","66":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB HC IC JC KC lB 1B LC mB","66":"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"292":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A c","292":"B C lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"164":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"66":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:5,C:"CSS Device Adaptation"};

var cssDirPseudo={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b","194":"H"},C:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M 5B 6B","33":"0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z","194":"a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B","322":"GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z HC IC JC KC lB 1B LC mB","194":"a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"33":"2C"}},B:5,C:":dir() CSS pseudo-class"};

var cssDisplayContents={A:{A:{"2":"J D E F A B 3B"},B:{"1":"Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O","260":"P Q R S T U V W X"},C:{"1":"VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","260":"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB"},D:{"1":"Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB","194":"TB pB UB qB VB WB c","260":"XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X"},E:{"2":"I p J D E F A B 8B uB 9B AC BC CC vB","260":"L G DC EC FC wB xB yB zB","772":"C K lB mB","2052":"0B GC","3076":"nB"},F:{"1":"iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB HC IC JC KC lB 1B LC mB","260":"NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC","260":"cC dC eC fC wB xB yB zB","772":"WC XC YC ZC aC bC","2052":"0B","3076":"nB"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"260":"nC"},P:{"1":"xC nB yC zC","2":"I oC pC qC rC","260":"sC vB tC uC vC wC"},Q:{"260":"0C"},R:{"1":"1C"},S:{"260":"2C"}},B:4,C:"CSS display: contents"};

var cssElementFunction={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"33":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","164":"4B oB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"33":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"33":"2C"}},B:5,C:"CSS element() function"};

var cssEnvFunction={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c 5B 6B"},D:{"1":"bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB"},E:{"1":"C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC vB","132":"B"},F:{"1":"RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB HC IC JC KC lB 1B LC mB"},G:{"1":"WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC","132":"VC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"vB tC uC vC wC xC nB yC zC","2":"I oC pC qC rC sC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:"CSS Environment Variables env()"};

var cssExclusions={A:{A:{"2":"J D E F 3B","33":"A B"},B:{"2":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","33":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"33":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:5,C:"CSS Exclusions Level 1"};

var cssFeaturequeries={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t u v w x y"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E 8B uB 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F B C HC IC JC KC lB 1B LC"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC"},H:{"1":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS Feature Queries"};

var cssFileSelectorButton={A:{D:{"1":"Y Z a d e f g h i j k l m n o b H sB tB 7B","33":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X"},L:{"1":"H"},B:{"1":"Y Z a d e f g h i j k l m n o b H","33":"C K L G M N O P Q R S T U V W X"},C:{"1":"rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R 5B 6B"},M:{"1":"b"},A:{"2":"J D E F 3B","33":"A B"},F:{"1":"hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB"},K:{"1":"c","2":"A B C lB 1B mB"},E:{"1":"G EC FC wB xB yB zB nB 0B","2":"GC","33":"I p J D E F A B C K L 8B uB 9B AC BC CC vB lB mB DC"},G:{"1":"eC fC wB xB yB zB nB 0B","33":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC"},P:{"1":"xC nB yC zC","33":"I oC pC qC rC sC vB tC uC vC wC"},I:{"1":"H","2":"oB I hC iC jC kC 2B","33":"lC mC"}},B:6,C:"::file-selector-button CSS pseudo-element"};

var cssFilterFunction={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E 8B uB 9B AC BC","33":"F"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC","33":"RC SC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:5,C:"CSS filter() function"};

var cssFilters={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","1028":"K L G M N O","1346":"C"},C:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B","196":"5","516":"0 1 2 3 4 I p J D E F A B C K L G M N O q r s t u v w x y z 6B"},D:{"1":"OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N","33":"0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB"},E:{"1":"A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B","33":"J D E F AC BC"},F:{"1":"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB"},G:{"1":"SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC","33":"E OC PC QC RC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B","33":"lC mC"},J:{"2":"D","33":"A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"qC rC sC vB tC uC vC wC xC nB yC zC","33":"I oC pC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"CSS Filter Effects"};

var cssFirstLetter={A:{A:{"1":"F A B","16":"3B","516":"E","1540":"J D"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","132":"oB","260":"4B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"p J D E","132":"I"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"p 8B","132":"I uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC mB","16":"F HC","260":"B IC JC KC lB 1B"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B"},H:{"1":"gC"},I:{"1":"oB I H kC 2B lC mC","16":"hC iC","132":"jC"},J:{"1":"D A"},K:{"1":"C c mB","260":"A B lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"::first-letter CSS pseudo-element selector"};

var cssFirstLine={A:{A:{"1":"F A B","132":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS first-line pseudo-element"};

var cssFixed={A:{A:{"1":"D E F A B","2":"3B","8":"J"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC vB lB mB DC EC FC wB xB yB zB nB 0B GC","1025":"CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B","132":"NC OC PC"},H:{"2":"gC"},I:{"1":"oB H lC mC","260":"hC iC jC","513":"I kC 2B"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS position:fixed"};

var cssFocusVisible={A:{A:{"2":"J D E F A B 3B"},B:{"1":"V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O","328":"P Q R S T U"},C:{"1":"U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","161":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T"},D:{"1":"V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB","328":"ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U"},E:{"1":"xB yB zB nB 0B GC","2":"I p J D E F A B C K L 8B uB 9B AC BC CC vB lB mB DC EC","578":"G FC wB"},F:{"1":"eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB HC IC JC KC lB 1B LC mB","328":"YB ZB aB bB cB dB"},G:{"1":"xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC","578":"fC wB"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"wC xC nB yC zC","2":"I oC pC qC rC sC vB tC uC vC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"161":"2C"}},B:5,C:":focus-visible CSS pseudo-class"};

var cssFocusWithin={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB 5B 6B"},D:{"1":"UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB","194":"pB"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC"},F:{"1":"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HC IC JC KC lB 1B LC mB","194":"HB"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC qC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:":focus-within CSS pseudo-class"};

var cssFontPalette={A:{A:{"2":"J D E F A B 3B"},B:{"1":"H","2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l"},E:{"1":"xB yB zB nB 0B GC","2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB"},F:{"1":"W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V HC IC JC KC lB 1B LC mB"},G:{"1":"xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:5,C:"CSS font-palette"};

var cssFontRenderingControls={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB 5B 6B","194":"HB IB JB KB LB MB NB OB PB QB RB SB"},D:{"1":"UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB","66":"KB LB MB NB OB PB QB RB SB TB pB"},E:{"1":"C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B 8B uB 9B AC BC CC vB"},F:{"1":"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","66":"7 8 9 AB BB CB DB EB FB GB HB"},G:{"1":"WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"rC sC vB tC uC vC wC xC nB yC zC","2":"I","66":"oC pC qC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"194":"2C"}},B:5,C:"CSS font-display"};

var cssFontStretch={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E 5B 6B"},D:{"1":"JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC vB"},F:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS font-stretch"};

var cssGencontent={A:{A:{"1":"F A B","2":"J D 3B","132":"E"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS Generated content for pseudo-elements"};

var cssGradients={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B","260":"0 1 2 3 4 5 6 M N O q r s t u v w x y z","292":"I p J D E F A B C K L G 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","33":"A B C K L G M N O q r s t u v w","548":"I p J D E F"},E:{"1":"xB yB zB nB 0B GC","2":"8B uB","260":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB","292":"J 9B","804":"I p"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F B HC IC JC KC","33":"C LC","164":"lB 1B"},G:{"1":"xB yB zB nB 0B","260":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB","292":"NC OC","804":"uB MC 2B"},H:{"2":"gC"},I:{"1":"H lC mC","33":"I kC 2B","548":"oB hC iC jC"},J:{"1":"A","548":"D"},K:{"1":"c mB","2":"A B","33":"C","164":"lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS Gradients"};

var cssGridAnimation={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"nB 0B GC","2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:4,C:"CSS Grid animation"};

var cssGrid={A:{A:{"2":"J D E 3B","8":"F","292":"A B"},B:{"1":"M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","292":"C K L G"},C:{"1":"PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O 5B 6B","8":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB","584":"BB CB DB EB FB GB HB IB JB KB LB MB","1025":"NB OB"},D:{"1":"TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t u v","8":"w x y z","200":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB","1025":"SB"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B","8":"J D E F A AC BC CC"},F:{"1":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v w x y HC IC JC KC lB 1B LC mB","200":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC","8":"E OC PC QC RC SC TC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC","8":"2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"292":"A B"},O:{"1":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"oC","8":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS Grid Layout (level 1)"};

var cssHangingPunctuation={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:4,C:"CSS hanging-punctuation"};

var cssHas={A:{A:{"2":"J D E F A B 3B"},B:{"1":"H","2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n 5B 6B","322":"o b H sB tB"},D:{"1":"H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l","194":"m n o b"},E:{"1":"xB yB zB nB 0B GC","2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB"},F:{"1":"a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z HC IC JC KC lB 1B LC mB"},G:{"1":"xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:5,C:":has() CSS relational pseudo-class"};

var cssHyphens={A:{A:{"2":"J D E F 3B","33":"A B"},B:{"1":"H","33":"C K L G M N O","132":"P Q R S T U V W","260":"X Y Z a d e f g h i j k l m n o b"},C:{"1":"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p 5B 6B","33":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB"},D:{"1":"X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB","132":"QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W"},E:{"2":"I p 8B uB","33":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB HC IC JC KC lB 1B LC mB","132":"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z"},G:{"2":"uB MC","33":"E 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"4":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I","132":"oC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS Hyphenation"};

var cssImageOrientation={A:{A:{"2":"J D E F A B 3B"},B:{"1":"Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O P Q","257":"R S T U V W X"},C:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v w 5B 6B"},D:{"1":"Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q","257":"R S T U V W X"},E:{"1":"L G DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C K 8B uB 9B AC BC CC vB lB mB"},F:{"1":"jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB HC IC JC KC lB 1B LC mB","257":"aB bB cB dB eB fB gB hB iB"},G:{"1":"dC eC fC wB xB yB zB nB 0B","132":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"xC nB yC zC","2":"I oC pC qC rC sC vB tC uC","257":"vC wC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS3 image-orientation"};

var cssImageSet={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","164":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U 5B 6B","66":"V W","257":"Y Z a d e f g h i j k l m n o b H sB tB","772":"X"},D:{"2":"I p J D E F A B C K L G M N O q r","164":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p 8B uB 9B","132":"A B C K vB lB mB DC","164":"J D E F AC BC CC","516":"L G EC FC wB xB yB zB nB 0B GC"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","164":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"uB MC 2B NC","132":"TC UC VC WC XC YC ZC aC bC cC","164":"E OC PC QC RC SC","516":"dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B","164":"H lC mC"},J:{"2":"D","164":"A"},K:{"2":"A B C lB 1B mB","164":"c"},L:{"164":"H"},M:{"257":"b"},N:{"2":"A B"},O:{"164":"nC"},P:{"164":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"164":"0C"},R:{"164":"1C"},S:{"2":"2C"}},B:5,C:"CSS image-set"};

var cssInOutOfRange={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C","260":"K L G M N O"},C:{"1":"LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","516":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB"},D:{"1":"OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I","16":"p J D E F A B C K L","260":"NB","772":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB","16":"p","772":"J D E F A 9B AC BC CC"},F:{"1":"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","16":"F HC","260":"B C AB IC JC KC lB 1B LC mB","772":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B","772":"E NC OC PC QC RC SC TC"},H:{"132":"gC"},I:{"1":"H","2":"oB hC iC jC","260":"I kC 2B lC mC"},J:{"2":"D","260":"A"},K:{"1":"c","260":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","260":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"516":"2C"}},B:5,C:":in-range and :out-of-range CSS pseudo-classes"};

var cssIndeterminatePseudo={A:{A:{"2":"J D E 3B","132":"A B","388":"F"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","132":"C K L G M N O"},C:{"1":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","16":"4B oB 5B 6B","132":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB","388":"I p"},D:{"1":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L","132":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"I p J 8B uB","132":"D E F A AC BC CC","388":"9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","16":"F B HC IC JC KC lB 1B","132":"G M N O q r s t u v w","516":"C LC mB"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B NC OC","132":"E PC QC RC SC TC"},H:{"516":"gC"},I:{"1":"H","16":"oB hC iC jC mC","132":"lC","388":"I kC 2B"},J:{"16":"D","132":"A"},K:{"1":"c","16":"A B C lB 1B","516":"mB"},L:{"1":"H"},M:{"1":"b"},N:{"132":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"132":"2C"}},B:5,C:":indeterminate CSS pseudo-class"};

var cssInitialLetter={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E 8B uB 9B AC BC","4":"F","164":"A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC","164":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:5,C:"CSS Initial Letter"};

var cssInitialValue={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","33":"I p J D E F A B C K L G M N O 5B 6B","164":"4B oB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"8B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB"},H:{"2":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS initial value"};

var cssLchLab={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"G FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C K L 8B uB 9B AC BC CC vB lB mB DC EC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:4,C:"LCH and Lab color values"};

var cssLetterSpacing={A:{A:{"1":"F A B","16":"3B","132":"J D E"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","132":"0 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"8B","132":"I p J uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","16":"F HC","132":"B C G M IC JC KC lB 1B LC mB"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB"},H:{"2":"gC"},I:{"1":"H lC mC","16":"hC iC","132":"oB I jC kC 2B"},J:{"132":"D A"},K:{"1":"c","132":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"letter-spacing CSS property"};

var cssLineClamp={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M","33":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","129":"N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB 5B 6B","33":"aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"16":"I p J D E F A B C K","33":"0 1 2 3 4 5 6 7 8 9 L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I 8B uB","33":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"uB MC 2B","33":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"16":"hC iC","33":"oB I H jC kC 2B lC mC"},J:{"33":"D A"},K:{"2":"A B C lB 1B mB","33":"c"},L:{"33":"H"},M:{"33":"b"},N:{"2":"A B"},O:{"33":"nC"},P:{"33":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"33":"0C"},R:{"33":"1C"},S:{"2":"2C"}},B:5,C:"CSS line-clamp"};

var cssLogicalProps={A:{A:{"2":"J D E F A B 3B"},B:{"1":"Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O","1028":"W X","1540":"P Q R S T U V"},C:{"1":"YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B","164":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB 5B 6B","1540":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB"},D:{"1":"Y Z a d e f g h i j k l m n o b H sB tB 7B","292":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB","1028":"W X","1540":"bB cB dB eB fB gB hB iB jB kB P Q R S T U V"},E:{"1":"G FC wB xB yB zB nB 0B GC","292":"I p J D E F A B C 8B uB 9B AC BC CC vB lB","1028":"EC","1540":"K L mB DC"},F:{"1":"iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","292":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB","1028":"gB hB","1540":"RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB"},G:{"1":"fC wB xB yB zB nB 0B","292":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC","1028":"eC","1540":"YC ZC aC bC cC dC"},H:{"2":"gC"},I:{"1":"H","292":"oB I hC iC jC kC 2B lC mC"},J:{"292":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"292":"nC"},P:{"1":"xC nB yC zC","292":"I oC pC qC rC sC","1540":"vB tC uC vC wC"},Q:{"1540":"0C"},R:{"1":"1C"},S:{"1540":"2C"}},B:5,C:"CSS Logical Properties"};

var cssMarkerPseudo={A:{A:{"2":"J D E F A B 3B"},B:{"1":"V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O P Q R S T U"},C:{"1":"aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB 5B 6B"},D:{"1":"V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U"},E:{"1":"GC","2":"I p J D E F A B 8B uB 9B AC BC CC vB","129":"C K L G lB mB DC EC FC wB xB yB zB nB 0B"},F:{"1":"eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB HC IC JC KC lB 1B LC mB"},G:{"1":"WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"wC xC nB yC zC","2":"I oC pC qC rC sC vB tC uC vC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"CSS ::marker pseudo-element"};

var cssMasks={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M","164":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","3138":"N","12292":"O"},C:{"1":"OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB","260":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB 5B 6B"},D:{"164":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"xB yB zB nB 0B GC","2":"8B uB","164":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","164":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"xB yB zB nB 0B","164":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB"},H:{"2":"gC"},I:{"164":"H lC mC","676":"oB I hC iC jC kC 2B"},J:{"164":"D A"},K:{"2":"A B C lB 1B mB","164":"c"},L:{"164":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"164":"nC"},P:{"164":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"164":"0C"},R:{"164":"1C"},S:{"260":"2C"}},B:4,C:"CSS Masks"};

var cssMatchesPseudo={A:{A:{"2":"J D E F A B 3B"},B:{"1":"X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O","1220":"P Q R S T U V W"},C:{"1":"kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","16":"4B oB 5B 6B","548":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB"},D:{"1":"X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L","164":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c","196":"XB YB ZB","1220":"aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W"},E:{"1":"L G EC FC wB xB yB zB nB 0B GC","2":"I 8B uB","16":"p","164":"J D E 9B AC BC","260":"F A B C K CC vB lB mB DC"},F:{"1":"hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","164":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB","196":"NB OB PB","1220":"QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB"},G:{"1":"dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B NC OC","164":"E PC QC","260":"RC SC TC UC VC WC XC YC ZC aC bC cC"},H:{"2":"gC"},I:{"1":"H","16":"oB hC iC jC","164":"I kC 2B lC mC"},J:{"16":"D","164":"A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"164":"nC"},P:{"1":"xC nB yC zC","164":"I oC pC qC rC sC vB tC uC vC wC"},Q:{"1220":"0C"},R:{"1":"1C"},S:{"548":"2C"}},B:5,C:":is() CSS pseudo-class"};

var cssMathFunctions={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB 5B 6B"},D:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB"},E:{"1":"L G DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B 8B uB 9B AC BC CC vB","132":"C K lB mB"},F:{"1":"YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB HC IC JC KC lB 1B LC mB"},G:{"1":"cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC","132":"WC XC YC ZC aC bC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"uC vC wC xC nB yC zC","2":"I oC pC qC rC sC vB tC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"CSS math functions min(), max() and clamp()"};

var cssMediaInteraction={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB 5B 6B"},D:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E 8B uB 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v w x y HC IC JC KC lB 1B LC mB"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:4,C:"Media Queries: interaction media features"};

var cssMediaRangeSyntax={A:{A:{"2":"J D E F A B 3B"},B:{"1":"b H","2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o"},C:{"1":"WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB 5B 6B"},D:{"1":"b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:4,C:"Media Queries: Range Syntax"};

var cssMediaResolution={A:{A:{"2":"J D E 3B","132":"F A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","1028":"C K L G M N O"},C:{"1":"VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB","260":"I p J D E F A B C K L G 5B 6B","1028":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB"},D:{"1":"aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","548":"I p J D E F A B C K L G M N O q r s t u v w x y z","1028":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB"},E:{"1":"nB 0B GC","2":"8B uB","548":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB"},F:{"1":"QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F","548":"B C HC IC JC KC lB 1B LC","1028":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB"},G:{"1":"nB 0B","16":"uB","548":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB"},H:{"132":"gC"},I:{"1":"H","16":"hC iC","548":"oB I jC kC 2B","1028":"lC mC"},J:{"548":"D A"},K:{"1":"c mB","548":"A B C lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"132":"A B"},O:{"1":"nC"},P:{"1":"vB tC uC vC wC xC nB yC zC","1028":"I oC pC qC rC sC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"Media Queries: resolution feature"};

var cssMediaScripting={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:5,C:"Media Queries: scripting media feature"};

var cssMediaqueries={A:{A:{"8":"J D E 3B","129":"F A B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B oB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","129":"I p J D E F A B C K L G M N O q r s t u v w"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","129":"I p J 9B","388":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","2":"F"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","129":"uB MC 2B NC OC"},H:{"1":"gC"},I:{"1":"H lC mC","129":"oB I hC iC jC kC 2B"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"129":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS3 Media Queries"};

var cssMixblendmode={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t u v w x y z","194":"0 1 2 3 4 5 6 7 8 9 AB BB"},E:{"2":"I p J D 8B uB 9B AC","260":"E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"2":"uB MC 2B NC OC PC","260":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"Blending of HTML/SVG elements"};

var cssMotionPaths={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB 5B 6B"},D:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB","194":"EB FB GB"},E:{"1":"nB 0B GC","2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB"},F:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","194":"1 2 3"},G:{"1":"nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"CSS Motion Path"};

var cssNamespaces={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS namespaces"};

var cssNesting={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:5,C:"CSS Nesting"};

var cssNotSelList={A:{A:{"2":"J D E F A B 3B"},B:{"1":"X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O Q R S T U V W","16":"P"},C:{"1":"T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S 5B 6B"},D:{"1":"X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E 8B uB 9B AC BC"},F:{"1":"hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB HC IC JC KC lB 1B LC mB"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"xC nB yC zC","2":"I oC pC qC rC sC vB tC uC vC wC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"selector list argument of :not()"};

var cssNthChildOf={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E 8B uB 9B AC BC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:5,C:"selector list argument of :nth-child and :nth-last-child CSS pseudo-classes"};

var cssOpacity={A:{A:{"1":"F A B","4":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS3 Opacity"};

var cssOptionalPseudo={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","16":"F HC","132":"B C IC JC KC lB 1B LC mB"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B"},H:{"132":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"D A"},K:{"1":"c","132":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:":optional CSS pseudo-class"};

var cssOverflowAnchor={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB 5B 6B"},D:{"1":"RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"CSS overflow-anchor (Scroll Anchoring)"};

var cssOverflowOverlay={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L"},E:{"1":"I p J D E F A B 9B AC BC CC vB lB","16":"8B uB","130":"C K L G mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC","16":"uB","130":"XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"16":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:"CSS overflow: overlay"};

var cssOverflow={A:{A:{"388":"J D E F A B 3B"},B:{"1":"Z a d e f g h i j k l m n o b H","260":"P Q R S T U V W X Y","388":"C K L G M N O"},C:{"1":"R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","260":"qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q","388":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB 5B 6B"},D:{"1":"Z a d e f g h i j k l m n o b H sB tB 7B","260":"aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y","388":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB"},E:{"1":"nB 0B GC","260":"L G DC EC FC wB xB yB zB","388":"I p J D E F A B C K 8B uB 9B AC BC CC vB lB mB"},F:{"1":"iB jB kB P Q R rB S T U V W X Y Z a","260":"QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB","388":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB HC IC JC KC lB 1B LC mB"},G:{"1":"nB 0B","260":"cC dC eC fC wB xB yB zB","388":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC"},H:{"388":"gC"},I:{"1":"H","388":"oB I hC iC jC kC 2B lC mC"},J:{"388":"D A"},K:{"1":"c","388":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"388":"A B"},O:{"388":"nC"},P:{"1":"xC nB yC zC","388":"I oC pC qC rC sC vB tC uC vC wC"},Q:{"388":"0C"},R:{"1":"1C"},S:{"388":"2C"}},B:5,C:"CSS overflow property"};

var cssOverscrollBehavior={A:{A:{"2":"J D E F 3B","132":"A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","132":"C K L G M N","516":"O"},C:{"1":"pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB 5B 6B"},D:{"1":"XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB","260":"WB c"},E:{"1":"nB 0B GC","2":"I p J D E F A B C K L 8B uB 9B AC BC CC vB lB mB DC","1090":"G EC FC wB xB yB zB"},F:{"1":"NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB HC IC JC KC lB 1B LC mB","260":"LB MB"},G:{"1":"nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC","1090":"eC fC wB xB yB zB"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"132":"A B"},O:{"1":"nC"},P:{"1":"rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC qC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"CSS overscroll-behavior"};

var cssPageBreak={A:{A:{"388":"A B","900":"J D E F 3B"},B:{"388":"C K L G M N O","900":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"772":"XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","900":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c 5B 6B"},D:{"900":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"772":"A","900":"I p J D E F B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"16":"F HC","129":"B C IC JC KC lB 1B LC mB","900":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"900":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"129":"gC"},I:{"900":"oB I H hC iC jC kC 2B lC mC"},J:{"900":"D A"},K:{"129":"A B C lB 1B mB","900":"c"},L:{"900":"H"},M:{"772":"b"},N:{"388":"A B"},O:{"900":"nC"},P:{"900":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"900":"0C"},R:{"900":"1C"},S:{"900":"2C"}},B:2,C:"CSS page-break properties"};

var cssPagedMedia={A:{A:{"2":"J D 3B","132":"E F A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","132":"C K L G M N O"},C:{"2":"4B oB I p J D E F A B C K L G M N O 5B 6B","132":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","132":"F B C HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"16":"gC"},I:{"16":"oB I H hC iC jC kC 2B lC mC"},J:{"16":"D A"},K:{"16":"A B C c lB 1B mB"},L:{"1":"H"},M:{"132":"b"},N:{"258":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"132":"2C"}},B:5,C:"CSS Paged Media (@page)"};

var cssPaintApi={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c"},E:{"2":"I p J D E F A B C 8B uB 9B AC BC CC vB lB","194":"K L G mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:4,C:"CSS Paint API"};

var cssPlaceholderShown={A:{A:{"2":"J D E F 3B","292":"A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","164":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB"},D:{"1":"IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E 8B uB 9B AC BC"},F:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"164":"2C"}},B:5,C:":placeholder-shown CSS pseudo-class"};

var cssPlaceholder={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","36":"C K L G M N O"},C:{"1":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O 5B 6B","33":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB"},D:{"1":"SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","36":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB","36":"p J D E F A 9B AC BC CC"},F:{"1":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","36":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC","36":"E 2B NC OC PC QC RC SC TC"},H:{"2":"gC"},I:{"1":"H","36":"oB I hC iC jC kC 2B lC mC"},J:{"36":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"36":"A B"},O:{"1":"nC"},P:{"1":"qC rC sC vB tC uC vC wC xC nB yC zC","36":"I oC pC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"33":"2C"}},B:5,C:"::placeholder CSS pseudo-element"};

var cssPrintColorAdjust={A:{D:{"2":"I p J D E F A B C K L G M","33":"0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},L:{"33":"H"},B:{"2":"C K L G M N O","33":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB 5B 6B","33":"JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h"},M:{"1":"b"},A:{"2":"J D E F A B 3B"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},K:{"2":"A B C lB 1B mB","33":"c"},E:{"1":"xB yB zB nB 0B","2":"I p 8B uB 9B GC","33":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB"},G:{"1":"xB yB zB nB 0B","2":"uB MC 2B NC","33":"E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB"},P:{"33":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},I:{"2":"oB I hC iC jC kC 2B","33":"H lC mC"}},B:6,C:"print-color-adjust property"};

var cssReadOnlyWrite={A:{A:{"2":"J D E F A B 3B"},B:{"1":"K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C"},C:{"1":"kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","16":"4B","33":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB 5B 6B"},D:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L","132":"0 1 2 3 4 5 6 G M N O q r s t u v w x y z"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"8B uB","132":"I p J D E 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","16":"F B HC IC JC KC lB","132":"C G M N O q r s t 1B LC mB"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC","132":"E 2B NC OC PC QC"},H:{"2":"gC"},I:{"1":"H","16":"hC iC","132":"oB I jC kC 2B lC mC"},J:{"1":"A","132":"D"},K:{"1":"c","2":"A B lB","132":"C 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"33":"2C"}},B:1,C:"CSS :read-only and :read-write selectors"};

var cssRebeccapurple={A:{A:{"2":"J D E F A 3B","132":"B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"D E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B","16":"AC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v HC IC JC KC lB 1B LC mB"},G:{"1":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"Rebeccapurple color"};

var cssReflections={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","33":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"33":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"8B uB","33":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"33":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"33":"oB I H hC iC jC kC 2B lC mC"},J:{"33":"D A"},K:{"2":"A B C lB 1B mB","33":"c"},L:{"33":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"33":"nC"},P:{"33":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"33":"0C"},R:{"33":"1C"},S:{"2":"2C"}},B:7,C:"CSS Reflections"};

var cssRegions={A:{A:{"2":"J D E F 3B","420":"A B"},B:{"2":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","420":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"6 7 8 9 I p J D E F A B C K L AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","36":"G M N O","66":"0 1 2 3 4 5 q r s t u v w x y z"},E:{"2":"I p J C K L G 8B uB 9B lB mB DC EC FC wB xB yB zB nB 0B GC","33":"D E F A B AC BC CC vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"uB MC 2B NC OC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","33":"E PC QC RC SC TC UC VC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"420":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:5,C:"CSS Regions"};

var cssRepeatingGradients={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B","33":"I p J D E F A B C K L G 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F","33":"A B C K L G M N O q r s t u v w"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB","33":"J 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F B HC IC JC KC","33":"C LC","36":"lB 1B"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B","33":"NC OC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB hC iC jC","33":"I kC 2B"},J:{"1":"A","2":"D"},K:{"1":"c mB","2":"A B","33":"C","36":"lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS Repeating Gradients"};

var cssResize={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","33":"I"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC","132":"mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:2,C:"CSS resize property"};

var cssRevertValue={A:{A:{"2":"J D E F A B 3B"},B:{"1":"T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O P Q R S"},C:{"1":"ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB 5B 6B"},D:{"1":"T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S"},E:{"1":"A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC"},F:{"1":"fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB HC IC JC KC lB 1B LC mB"},G:{"1":"SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"wC xC nB yC zC","2":"I oC pC qC rC sC vB tC uC vC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:4,C:"CSS revert value"};

var cssRrggbbaa={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB 5B 6B"},D:{"1":"VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB","194":"NB OB PB QB RB SB TB pB UB qB"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC"},F:{"1":"NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","194":"AB BB CB DB EB FB GB HB IB JB KB LB MB"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"rC sC vB tC uC vC wC xC nB yC zC","2":"I","194":"oC pC qC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:4,C:"#rrggbbaa hex color notation"};

var cssScrollBehavior={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","129":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB","129":"qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","450":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB"},E:{"1":"xB yB zB nB 0B GC","2":"I p J D E F A B C K 8B uB 9B AC BC CC vB lB mB DC","578":"L G EC FC wB"},F:{"2":"F B C G M N O q r s t u v w x y HC IC JC KC lB 1B LC mB","129":"JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","450":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB"},G:{"1":"xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC","578":"eC fC wB"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"129":"nC"},P:{"1":"rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC qC"},Q:{"129":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"CSS Scroll-behavior"};

var cssScrollTimeline={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y","194":"Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T","194":"X Y Z a d e f g h i j k l m n o b H sB tB 7B","322":"U V W"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB HC IC JC KC lB 1B LC mB","194":"hB iB jB kB P Q R rB S T U V W X Y Z a","322":"fB gB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"CSS @scroll-timeline"};

var cssScrollbar={A:{A:{"132":"J D E F A B 3B"},B:{"2":"C K L G M N O","292":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB 5B 6B","3074":"WB","4100":"c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"292":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"16":"I p 8B uB","292":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","292":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B NC OC","292":"PC","804":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC"},H:{"2":"gC"},I:{"16":"hC iC","292":"oB I H jC kC 2B lC mC"},J:{"292":"D A"},K:{"2":"A B C lB 1B mB","292":"c"},L:{"292":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"292":"nC"},P:{"292":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"292":"0C"},R:{"292":"1C"},S:{"2":"2C"}},B:7,C:"CSS scrollbar styling"};

var cssSel2={A:{A:{"1":"D E F A B","2":"3B","8":"J"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS 2.1 selectors"};

var cssSel3={A:{A:{"1":"F A B","2":"3B","8":"J","132":"D E"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B oB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","2":"F"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS3 selectors"};

var cssSelection={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","33":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","2":"F"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"A","2":"D"},K:{"1":"C c 1B mB","16":"A B lB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"33":"2C"}},B:5,C:"::selection CSS pseudo-element"};

var cssShapes={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB 5B 6B","322":"MB NB OB PB QB RB SB TB pB UB qB"},D:{"1":"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 I p J D E F A B C K L G M N O q r s t u v w x y z","194":"5 6 7"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D 8B uB 9B AC","33":"E F A BC CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u HC IC JC KC lB 1B LC mB"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC","33":"E QC RC SC TC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:4,C:"CSS Shapes Level 1"};

var cssSnappoints={A:{A:{"2":"J D E F 3B","6308":"A","6436":"B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","6436":"C K L G M N O"},C:{"1":"aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","2052":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB"},D:{"1":"bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB","8258":"YB ZB aB"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E 8B uB 9B AC BC","3108":"F A CC vB"},F:{"1":"c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB HC IC JC KC lB 1B LC mB","8258":"PB QB RB SB TB UB VB WB"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC","3108":"RC SC TC UC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"vB tC uC vC wC xC nB yC zC","2":"I oC pC qC rC sC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2052":"2C"}},B:4,C:"CSS Scroll Snap"};

var cssSticky={A:{A:{"2":"J D E F A B 3B"},B:{"1":"a d e f g h i j k l m n o b H","2":"C K L G","1028":"P Q R S T U V W X Y Z","4100":"M N O"},C:{"1":"pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v w 5B 6B","194":"0 1 2 x y z","516":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB"},D:{"1":"a d e f g h i j k l m n o b H sB tB 7B","2":"8 9 I p J D E F A B C K L G M N O q r s t AB BB CB DB EB FB GB HB IB JB KB LB MB","322":"0 1 2 3 4 5 6 7 u v w x y z NB OB PB QB","1028":"RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z"},E:{"1":"K L G DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B","33":"E F A B C BC CC vB lB mB","2084":"D AC"},F:{"1":"kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","322":"AB BB CB","1028":"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB"},G:{"1":"ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC","33":"E QC RC SC TC UC VC WC XC YC","2084":"OC PC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1028":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC"},Q:{"1028":"0C"},R:{"1":"1C"},S:{"516":"2C"}},B:5,C:"CSS position:sticky"};

var cssSubgrid={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"nB 0B GC","2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:4,C:"CSS Subgrid"};

var cssSupportsApi={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","260":"C K L G M N O"},C:{"1":"QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q 5B 6B","66":"r s","260":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB"},D:{"1":"qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t u v w x y","260":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E 8B uB 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC","132":"mB"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC"},H:{"132":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B","132":"mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS.supports() API"};

var cssTable={A:{A:{"1":"E F A B","2":"J D 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","132":"4B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS Table display"};

var cssTextAlignLast={A:{A:{"132":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","4":"C K L G M N O"},C:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B 5B 6B","33":"0 1 2 3 4 5 6 7 8 9 C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB"},D:{"1":"IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 I p J D E F A B C K L G M N O q r s t u v w x y z","322":"6 7 8 9 AB BB CB DB EB FB GB HB"},E:{"1":"nB 0B GC","2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB"},F:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s HC IC JC KC lB 1B LC mB","578":"0 1 2 3 4 t u v w x y z"},G:{"1":"nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"132":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"2":"0C"},R:{"1":"1C"},S:{"33":"2C"}},B:4,C:"CSS3 text-align-last"};

var cssTextIndent={A:{A:{"132":"J D E F A B 3B"},B:{"132":"C K L G M N O","388":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"132":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"132":"0 1 2 3 4 5 6 7 8 I p J D E F A B C K L G M N O q r s t u v w x y z","388":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"nB 0B GC","132":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB"},F:{"132":"F B C G M N O q r s t u v HC IC JC KC lB 1B LC mB","388":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"nB 0B","132":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB"},H:{"132":"gC"},I:{"132":"oB I hC iC jC kC 2B lC mC","388":"H"},J:{"132":"D A"},K:{"132":"A B C lB 1B mB","388":"c"},L:{"388":"H"},M:{"132":"b"},N:{"132":"A B"},O:{"388":"nC"},P:{"132":"I","388":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"388":"0C"},R:{"388":"1C"},S:{"132":"2C"}},B:4,C:"CSS text-indent"};

var cssTextJustify={A:{A:{"16":"J D 3B","132":"E F A B"},B:{"132":"C K L G M N O","322":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB 5B 6B","1025":"QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","1602":"PB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB","322":"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","322":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B lC mC","322":"H"},J:{"2":"D A"},K:{"2":"A B C lB 1B mB","322":"c"},L:{"322":"H"},M:{"1025":"b"},N:{"132":"A B"},O:{"322":"nC"},P:{"2":"I","322":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"322":"0C"},R:{"322":"1C"},S:{"2":"2C"}},B:4,C:"CSS text-justify"};

var cssTextOrientation={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","194":"9 AB BB"},D:{"1":"JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB"},E:{"1":"L G EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC","16":"A","33":"B C K vB lB mB DC"},F:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS text-orientation"};

var cssTextSpacing={A:{A:{"2":"J D 3B","161":"E F A B"},B:{"2":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","161":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"16":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:5,C:"CSS Text 4 text-spacing"};

var cssTextshadow={A:{A:{"2":"J D E F 3B","129":"A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","129":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B oB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","260":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","2":"F"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"4":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"A","4":"D"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"129":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS3 Text-shadow"};

var cssTouchAction={A:{A:{"1":"B","2":"J D E F 3B","289":"A"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","194":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB","1025":"NB OB PB QB RB"},D:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t HC IC JC KC lB 1B LC mB"},G:{"1":"ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC","516":"SC TC UC VC WC XC YC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","289":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"194":"2C"}},B:2,C:"CSS touch-action property"};

var cssTransitions={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","33":"p J D E F A B C K L G","164":"I"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","33":"I p J D E F A B C K L G M N O q r s t u v w"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","33":"J 9B","164":"I p 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F HC IC","33":"C","164":"B JC KC lB 1B LC"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","33":"OC","164":"uB MC 2B NC"},H:{"2":"gC"},I:{"1":"H lC mC","33":"oB I hC iC jC kC 2B"},J:{"1":"A","33":"D"},K:{"1":"c mB","33":"C","164":"A B lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"CSS3 Transitions"};

var cssUnicodeBidi={A:{A:{"132":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","132":"C K L G M N O"},C:{"1":"LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","33":"0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB","132":"4B oB I p J D E F 5B 6B","292":"A B C K L G M"},D:{"1":"JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","132":"I p J D E F A B C K L G M","548":"0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB"},E:{"132":"I p J D E 8B uB 9B AC BC","548":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"132":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"132":"E uB MC 2B NC OC PC QC","548":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"16":"gC"},I:{"1":"H","16":"oB I hC iC jC kC 2B lC mC"},J:{"16":"D A"},K:{"1":"c","16":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"132":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","16":"I"},Q:{"16":"0C"},R:{"1":"1C"},S:{"33":"2C"}},B:4,C:"CSS unicode-bidi property"};

var cssUnsetValue={A:{A:{"2":"J D E F A B 3B"},B:{"1":"K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v w x 5B 6B"},D:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB"},E:{"1":"A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v w x y HC IC JC KC lB 1B LC mB"},G:{"1":"SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS unset value"};

var cssVariables={A:{A:{"2":"J D E F A B 3B"},B:{"1":"M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L","260":"G"},C:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB","194":"JB"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC","260":"CC"},F:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","194":"6"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC","260":"SC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"2":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS Variables (Custom Properties)"};

var cssWhenElse={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:5,C:"CSS @when / @else conditional rules"};

var cssWidowsOrphans={A:{A:{"1":"A B","2":"J D 3B","129":"E F"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t u v"},E:{"1":"D E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B AC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","129":"F B HC IC JC KC lB 1B LC"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC"},H:{"1":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"2":"D A"},K:{"1":"c mB","2":"A B C lB 1B"},L:{"1":"H"},M:{"2":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:2,C:"CSS widows & orphans"};

var cssWidthStretch={A:{D:{"2":"I p J D E F A B C K L G M N O q r s","33":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},L:{"33":"H"},B:{"2":"C K L G M N O","33":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"4B","33":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},M:{"33":"b"},A:{"2":"J D E F A B 3B"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},K:{"2":"A B C lB 1B mB","33":"c"},E:{"2":"I p J 8B uB 9B AC GC","33":"D E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B"},G:{"2":"uB MC 2B NC OC","33":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},P:{"2":"I","33":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},I:{"2":"oB I hC iC jC kC 2B","33":"H lC mC"}},B:6,C:"width: stretch property"};

var cssWritingMode={A:{A:{"132":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","322":"7 8 9 AB BB"},D:{"1":"JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J","16":"D","33":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB","16":"p","33":"J D E F A 9B AC BC CC vB"},F:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 G M N O q r s t u v w x y z"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B","33":"E NC OC PC QC RC SC TC UC"},H:{"2":"gC"},I:{"1":"H","2":"hC iC jC","33":"oB I kC 2B lC mC"},J:{"33":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"36":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","33":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS writing-mode property"};

var cssZoom={A:{A:{"1":"J D 3B","129":"E F A B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB"},H:{"2":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"129":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:"CSS zoom"};

var css3Attr={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"CSS3 attr() function for all properties"};

var css3Boxsizing={A:{A:{"1":"E F A B","8":"J D 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","33":"4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","33":"I p J D E F"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","33":"I p 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","2":"F"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","33":"uB MC 2B"},H:{"1":"gC"},I:{"1":"I H kC 2B lC mC","33":"oB hC iC jC"},J:{"1":"A","33":"D"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"CSS3 Box-sizing"};

var css3Colors={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","4":"4B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC lB 1B LC mB","2":"F","4":"HC"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS3 Colors"};

var css3CursorsGrab={A:{A:{"2":"J D E F A B 3B"},B:{"1":"G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","33":"4B oB I p J D E F A B C K L G M N O q r s t u v w x 5B 6B"},D:{"1":"aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","33":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","33":"I p J D E F A 8B uB 9B AC BC CC vB"},F:{"1":"C QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC mB","2":"F B HC IC JC KC lB 1B","33":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"33":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"33":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:2,C:"CSS grab & grabbing cursors"};

var css3CursorsNewer={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","33":"4B oB I p J D E F A B C K L G M N O q r s t u 5B 6B"},D:{"1":"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","33":"0 1 2 3 4 5 6 7 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","33":"I p J D E 8B uB 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC mB","2":"F B HC IC JC KC lB 1B","33":"G M N O q r s t u"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"33":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:2,C:"CSS3 Cursors: zoom-in & zoom-out"};

var css3Cursors={A:{A:{"1":"F A B","132":"J D E 3B"},B:{"1":"L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","260":"C K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","4":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","4":"I"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","4":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","260":"F B C HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D","16":"A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:2,C:"CSS3 Cursors (original values)"};

var css3Tabsize={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","33":"OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z","164":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB"},D:{"1":"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r","132":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB"},E:{"1":"L G DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B","132":"D E F A B C K AC BC CC vB lB mB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F HC IC JC","132":"G M N O q r s t u v w x y z","164":"B C KC lB 1B LC mB"},G:{"1":"cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC","132":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC"},H:{"164":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B","132":"lC mC"},J:{"132":"D A"},K:{"1":"c","2":"A","164":"B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"164":"2C"}},B:4,C:"CSS3 tab-size"};

var currentcolor={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","2":"F"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS currentColor value"};

var customElements={A:{A:{"2":"J D E F 3B","8":"A B"},B:{"1":"P","2":"Q R S T U V W X Y Z a d e f g h i j k l m n o b H","8":"C K L G M N O"},C:{"2":"4B oB I p J D E F A B C K L G M N O q r s t pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","66":"0 u v w x y z","72":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB"},D:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P","2":"I p J D E F A B C K L G M N O q r s t u v w x Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","66":"0 1 2 3 y z"},E:{"2":"I p 8B uB 9B","8":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB","2":"F B C ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","66":"G M N O q"},G:{"2":"uB MC 2B NC OC","8":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"mC","2":"oB I H hC iC jC kC 2B lC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC","2":"vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"2":"1C"},S:{"72":"2C"}},B:7,C:"Custom Elements (deprecated V0 spec)"};

var customElementsv1={A:{A:{"2":"J D E F 3B","8":"A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","8":"C K L G M N O"},C:{"1":"WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","8":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB","456":"LB MB NB OB PB QB RB SB TB","712":"pB UB qB VB"},D:{"1":"ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB","8":"NB OB","132":"PB QB RB SB TB pB UB qB VB WB c XB YB"},E:{"2":"I p J D 8B uB 9B AC BC","8":"E F A CC","132":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB HC IC JC KC lB 1B LC mB","132":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC","132":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I","132":"oC"},Q:{"132":"0C"},R:{"1":"1C"},S:{"8":"2C"}},B:1,C:"Custom Elements (V1)"};

var customevent={A:{A:{"2":"J D E 3B","132":"F A B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p 5B 6B","132":"J D E F A"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I","16":"p J D E K L","388":"F A B C"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB","16":"p J","388":"9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC mB","2":"F HC IC JC KC","132":"B lB 1B"},G:{"1":"E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"MC","16":"uB 2B","388":"NC"},H:{"1":"gC"},I:{"1":"H lC mC","2":"hC iC jC","388":"oB I kC 2B"},J:{"1":"A","388":"D"},K:{"1":"C c mB","2":"A","132":"B lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"132":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"CustomEvent"};

var datalist={A:{A:{"2":"3B","8":"J D E F","260":"A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","260":"C K L G","1284":"M N O"},C:{"8":"4B oB 5B 6B","516":"n o b H sB tB","4612":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m"},D:{"1":"bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","8":"I p J D E F A B C K L G M N O q","132":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB"},E:{"1":"K L G mB DC EC FC wB xB yB zB nB 0B GC","8":"I p J D E F A B C 8B uB 9B AC BC CC vB lB"},F:{"1":"F B C c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","132":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB"},G:{"8":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC","2049":"YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H mC","8":"oB I hC iC jC kC 2B lC"},J:{"1":"A","8":"D"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"516":"b"},N:{"8":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"132":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:1,C:"Datalist element"};

var dataset={A:{A:{"1":"B","4":"J D E F A 3B"},B:{"1":"C K L G M","129":"N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB","4":"4B oB I p 5B 6B","129":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"GB HB IB JB KB LB MB NB OB PB","4":"I p J","129":"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"4":"I p 8B uB","129":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"3 4 5 6 7 8 9 C AB BB CB lB 1B LC mB","4":"F B HC IC JC KC","129":"0 1 2 G M N O q r s t u v w x y z DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"4":"uB MC 2B","129":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"4":"gC"},I:{"4":"hC iC jC","129":"oB I H kC 2B lC mC"},J:{"129":"D A"},K:{"1":"C lB 1B mB","4":"A B","129":"c"},L:{"129":"H"},M:{"129":"b"},N:{"1":"B","4":"A"},O:{"129":"nC"},P:{"129":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"129":"1C"},S:{"1":"2C"}},B:1,C:"dataset & data-* attributes"};

var datauri={A:{A:{"2":"J D 3B","132":"E","260":"F A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","260":"C K G M N O","772":"L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"260":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"Data URIs"};

var dateTolocaledatestring={A:{A:{"16":"3B","132":"J D E F A B"},B:{"1":"O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","132":"C K L G M N"},C:{"1":"RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","132":"4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","260":"NB OB PB QB","772":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB"},D:{"1":"cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","132":"I p J D E F A B C K L G M N O q r s t u","260":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB","772":"0 1 2 3 4 5 6 7 8 v w x y z"},E:{"1":"C K L G mB DC EC FC wB xB yB zB nB 0B GC","16":"I p 8B uB","132":"J D E F A 9B AC BC CC","260":"B vB lB"},F:{"1":"SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","16":"F B C HC IC JC KC lB 1B LC","132":"mB","260":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB","772":"G M N O q r s t u v"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B NC","132":"E OC PC QC RC SC TC"},H:{"132":"gC"},I:{"1":"H","16":"oB hC iC jC","132":"I kC 2B","772":"lC mC"},J:{"132":"D A"},K:{"1":"c","16":"A B C lB 1B","132":"mB"},L:{"1":"H"},M:{"1":"b"},N:{"132":"A B"},O:{"1":"nC"},P:{"1":"sC vB tC uC vC wC xC nB yC zC","260":"I oC pC qC rC"},Q:{"260":"0C"},R:{"1":"1C"},S:{"132":"2C"}},B:6,C:"Date.prototype.toLocaleDateString"};

var declarativeShadowDom={A:{A:{"2":"J D E F A B 3B"},B:{"1":"Z a d e f g h i j k l m n o b H","2":"C K L G M N O P Q R S T U V W X Y"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T","66":"U V W X Y"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B","16":"GC"},F:{"1":"jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"xC nB yC zC","2":"I oC pC qC rC sC vB tC uC vC wC"},Q:{"16":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:"Declarative Shadow DOM"};

var decorators={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"Decorators"};

var details={A:{A:{"2":"F A B 3B","8":"J D E"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B","8":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB 5B 6B","194":"IB JB"},D:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","8":"I p J D E F A B","257":"0 1 2 3 4 5 6 q r s t u v w x y z","769":"C K L G M N O"},E:{"1":"C K L G mB DC EC FC wB xB yB zB nB 0B GC","8":"I p 8B uB 9B","257":"J D E F A AC BC CC","1025":"B vB lB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"C lB 1B LC mB","8":"F B HC IC JC KC"},G:{"1":"E OC PC QC RC SC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","8":"uB MC 2B NC","1025":"TC UC VC"},H:{"8":"gC"},I:{"1":"I H kC 2B lC mC","8":"oB hC iC jC"},J:{"1":"A","8":"D"},K:{"1":"c","8":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Details & Summary elements"};

var deviceorientation={A:{A:{"2":"J D E F A 3B","132":"B"},B:{"1":"C K L G M N O","4":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"4B oB 5B","4":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","8":"I p 6B"},D:{"2":"I p J","4":"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","4":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"uB MC","4":"E 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"hC iC jC","4":"oB I H kC 2B lC mC"},J:{"2":"D","4":"A"},K:{"1":"C mB","2":"A B lB 1B","4":"c"},L:{"4":"H"},M:{"4":"b"},N:{"1":"B","2":"A"},O:{"4":"nC"},P:{"4":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"4":"0C"},R:{"4":"1C"},S:{"4":"2C"}},B:4,C:"DeviceOrientation & DeviceMotion events"};

var devicepixelratio={A:{A:{"1":"B","2":"J D E F A 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC mB","2":"F B HC IC JC KC lB 1B"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"C c mB","2":"A B lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","2":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"Window.devicePixelRatio"};

var dialog={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB 5B 6B","194":"OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P","1218":"Q R rB S T U V W X Y Z a d e f g h i"},D:{"1":"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 I p J D E F A B C K L G M N O q r s t u v w x y z","322":"3 4 5 6 7"},E:{"1":"xB yB zB nB 0B GC","2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O HC IC JC KC lB 1B LC mB","578":"q r s t u"},G:{"1":"xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:1,C:"Dialog element"};

var dispatchevent={A:{A:{"1":"B","16":"3B","129":"F A","130":"J D E"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"8B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","16":"F"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB"},H:{"1":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","129":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"EventTarget.dispatchEvent"};

var dnssec={A:{A:{"132":"J D E F A B 3B"},B:{"132":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"132":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"132":"2 3 4 5 6 7 8 9 I p AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","388":"0 1 J D E F A B C K L G M N O q r s t u v w x y z"},E:{"132":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"132":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"132":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"132":"gC"},I:{"132":"oB I H hC iC jC kC 2B lC mC"},J:{"132":"D A"},K:{"132":"A B C c lB 1B mB"},L:{"132":"H"},M:{"132":"b"},N:{"132":"A B"},O:{"132":"nC"},P:{"132":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"132":"0C"},R:{"132":"1C"},S:{"132":"2C"}},B:6,C:"DNSSEC and DANE"};

var doNotTrack={A:{A:{"2":"J D E 3B","164":"F A","260":"B"},B:{"1":"N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","260":"C K L G M"},C:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E 5B 6B","516":"0 1 2 F A B C K L G M N O q r s t u v w x y z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t"},E:{"1":"J A B C 9B CC vB lB","2":"I p K L G 8B uB mB DC EC FC wB xB yB zB nB 0B GC","1028":"D E F AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F B HC IC JC KC lB 1B LC"},G:{"1":"RC SC TC UC VC WC XC","2":"uB MC 2B NC OC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","1028":"E PC QC"},H:{"1":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"16":"D","1028":"A"},K:{"1":"c mB","16":"A B C lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"164":"A","260":"B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:7,C:"Do Not Track API"};

var documentCurrentscript={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"E F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D 8B uB 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G HC IC JC KC lB 1B LC mB"},G:{"1":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"document.currentScript"};

var documentEvaluateXpath={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","16":"4B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","16":"F"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:7,C:"document.evaluate & XPath"};

var documentExeccommand={A:{A:{"1":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"I p 8B uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC lB 1B LC mB","16":"F HC"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC","16":"2B NC OC"},H:{"2":"gC"},I:{"1":"H kC 2B lC mC","2":"oB I hC iC jC"},J:{"1":"A","2":"D"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","2":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:7,C:"Document.execCommand()"};

var documentPolicy={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T","132":"U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T","132":"U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB HC IC JC KC lB 1B LC mB","132":"dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B lC mC","132":"H"},J:{"2":"D A"},K:{"2":"A B C lB 1B mB","132":"c"},L:{"132":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"132":"1C"},S:{"2":"2C"}},B:7,C:"Document Policy"};

var documentScrollingelement={A:{A:{"2":"J D E F A B 3B"},B:{"1":"L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","16":"C K"},C:{"1":"JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB 5B 6B"},D:{"1":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E 8B uB 9B AC BC"},F:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"document.scrollingElement"};

var documenthead={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB","16":"p"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 1B LC mB","2":"F HC IC JC KC"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB"},H:{"1":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"document.head"};

var domManipConvenience={A:{A:{"2":"J D E F A B 3B"},B:{"1":"N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M"},C:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB 5B 6B"},D:{"1":"PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB","194":"NB OB"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC"},F:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB HC IC JC KC lB 1B LC mB","194":"BB"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC"},Q:{"194":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:1,C:"DOM manipulation convenience methods"};

var domRange={A:{A:{"1":"F A B","2":"3B","8":"J D E"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Document Object Model Range"};

var domcontentloaded={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"DOMContentLoaded"};

var dommatrix={A:{A:{"2":"J D E F 3B","132":"A B"},B:{"132":"C K L G M N O","1028":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","1028":"bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2564":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB","3076":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB"},D:{"16":"I p J D","132":"0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB","388":"E","1028":"qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"16":"I 8B uB","132":"p J D E F A 9B AC BC CC vB","1028":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","132":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB","1028":"JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"16":"uB MC 2B","132":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"132":"I kC 2B lC mC","292":"oB hC iC jC","1028":"H"},J:{"16":"D","132":"A"},K:{"2":"A B C lB 1B mB","1028":"c"},L:{"1028":"H"},M:{"1028":"b"},N:{"132":"A B"},O:{"1028":"nC"},P:{"132":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"132":"0C"},R:{"1028":"1C"},S:{"2564":"2C"}},B:4,C:"DOMMatrix"};

var download={A:{A:{"2":"J D E F A B 3B"},B:{"1":"K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"A","2":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Download attribute"};

var dragndrop={A:{A:{"644":"J D E F 3B","772":"A B"},B:{"1":"O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","260":"C K L G M N"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","8":"4B oB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","8":"F B HC IC JC KC lB 1B LC"},G:{"1":"fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B lC mC","1025":"H"},J:{"2":"D A"},K:{"1":"mB","8":"A B C lB 1B","1025":"c"},L:{"1025":"H"},M:{"2":"b"},N:{"1":"A B"},O:{"1025":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:1,C:"Drag and Drop"};

var elementClosest={A:{A:{"2":"J D E F A B 3B"},B:{"1":"G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L"},C:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E 8B uB 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v w x y HC IC JC KC lB 1B LC mB"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"2":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Element.closest()"};

var elementFromPoint={A:{A:{"1":"J D E F A B","16":"3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","16":"4B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 1B LC mB","16":"F HC IC JC KC"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB"},H:{"1":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"D A"},K:{"1":"C c mB","16":"A B lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"document.elementFromPoint()"};

var elementScrollMethods={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB"},E:{"1":"L G EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC","132":"A B C K vB lB mB DC"},F:{"1":"JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB HC IC JC KC lB 1B LC mB"},G:{"1":"eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC","132":"TC UC VC WC XC YC ZC aC bC cC dC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC qC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"Scroll methods on elements (scroll, scrollTo, scrollBy)"};

var eme={A:{A:{"2":"J D E F A 3B","164":"B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 I p J D E F A B C K L G M N O q r s t u v w x y z","132":"6 7 8 9 AB BB CB"},E:{"1":"C K L G mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B AC","164":"D E F A B BC CC vB lB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s HC IC JC KC lB 1B LC mB","132":"t u v w x y z"},G:{"1":"WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"16":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"Encrypted Media Extensions"};

var eot={A:{A:{"1":"J D E F A B","2":"3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"EOT - Embedded OpenType fonts"};

var es5={A:{A:{"1":"A B","2":"J D 3B","260":"F","1026":"E"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","4":"4B oB 5B 6B","132":"I p J D E F A B C K L G M N O q r"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","4":"I p J D E F A B C K L G M N O","132":"q r s t"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","4":"I p 8B uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","4":"F B C HC IC JC KC lB 1B LC","132":"mB"},G:{"1":"E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","4":"uB MC 2B NC"},H:{"132":"gC"},I:{"1":"H lC mC","4":"oB hC iC jC","132":"kC 2B","900":"I"},J:{"1":"A","4":"D"},K:{"1":"c","4":"A B C lB 1B","132":"mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"ECMAScript 5"};

var es6Class={A:{A:{"2":"J D E F A B 3B"},B:{"1":"K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C"},C:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB 5B 6B"},D:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB","132":"DB EB FB GB HB IB JB"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E 8B uB 9B AC BC"},F:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","132":"0 1 2 3 4 5 6"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"ES6 classes"};

var es6Generators={A:{A:{"2":"J D E F A B 3B"},B:{"1":"K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v w 5B 6B"},D:{"1":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v w HC IC JC KC lB 1B LC mB"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"ES6 Generators"};

var es6ModuleDynamicImport={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB 5B 6B","194":"YB"},D:{"1":"WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB"},E:{"1":"C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B 8B uB 9B AC BC CC vB"},F:{"1":"LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB HC IC JC KC lB 1B LC mB"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC qC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:6,C:"JavaScript modules: dynamic import()"};

var es6Module={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L","4097":"M N O","4290":"G"},C:{"1":"UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB 5B 6B","322":"PB QB RB SB TB pB"},D:{"1":"qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB","194":"UB"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC","3076":"vB"},F:{"1":"JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB HC IC JC KC lB 1B LC mB","194":"IB"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC","3076":"UC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC qC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:1,C:"JavaScript modules via script tag"};

var es6Number={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G 5B 6B","132":"M N O q r s t u v","260":"0 1 w x y z","516":"2"},D:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O","1028":"0 1 2 3 4 q r s t u v w x y z"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E 8B uB 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","1028":"G M N O q r"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC","1028":"kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"ES6 Number"};

var es6StringIncludes={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB 5B 6B"},D:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E 8B uB 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v w x y HC IC JC KC lB 1B LC mB"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"String.prototype.includes"};

var es6={A:{A:{"2":"J D E F A 3B","388":"B"},B:{"257":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","260":"C K L","769":"G M N O"},C:{"2":"4B oB I p 5B 6B","4":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB","257":"PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"2":"I p J D E F A B C K L G M N O q r","4":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB","257":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D 8B uB 9B AC","4":"E F BC CC"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","4":"0 1 2 3 4 5 6 7 8 G M N O q r s t u v w x y z","257":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC","4":"E PC QC RC SC"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B","4":"lC mC","257":"H"},J:{"2":"D","4":"A"},K:{"2":"A B C lB 1B mB","257":"c"},L:{"257":"H"},M:{"257":"b"},N:{"2":"A","388":"B"},O:{"257":"nC"},P:{"4":"I","257":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"257":"0C"},R:{"257":"1C"},S:{"4":"2C"}},B:6,C:"ECMAScript 2015 (ES6)"};

var eventsource={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 1B LC mB","4":"F HC IC JC KC"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"D A"},K:{"1":"C c lB 1B mB","4":"A B"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Server-sent events"};

var extendedSystemFonts={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"L G DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C K 8B uB 9B AC BC CC vB lB mB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:5,C:"ui-serif, ui-sans-serif, ui-monospace and ui-rounded values for font-family"};

var featurePolicy={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W","2":"C K L G M N O","1025":"X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB 5B 6B","260":"gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"gB hB iB jB kB P Q R S T U V W","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB","132":"UB qB VB WB c XB YB ZB aB bB cB dB eB fB","1025":"X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B 8B uB 9B AC BC CC vB","772":"C K L G lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"VB WB c XB YB ZB aB bB cB dB eB fB gB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB HC IC JC KC lB 1B LC mB","132":"IB JB KB LB MB NB OB PB QB RB SB TB UB","1025":"hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC","772":"WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1025":"H"},M:{"260":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"tC uC vC wC xC nB yC zC","2":"I oC pC qC","132":"rC sC vB"},Q:{"132":"0C"},R:{"1025":"1C"},S:{"2":"2C"}},B:7,C:"Feature Policy"};

var fetch={A:{A:{"2":"J D E F A B 3B"},B:{"1":"L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K"},C:{"1":"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","1025":"AB","1218":"5 6 7 8 9"},D:{"1":"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB","260":"BB","772":"CB"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v w x HC IC JC KC lB 1B LC mB","260":"y","772":"z"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Fetch"};

var fieldsetDisabled={A:{A:{"16":"3B","132":"E F","388":"J D A B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G","16":"M N O q"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC lB 1B LC mB","16":"F HC"},G:{"1":"E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC"},H:{"388":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"A","2":"D"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A","260":"B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"disabled attribute of the fieldset element"};

var fileapi={A:{A:{"2":"J D E F 3B","260":"A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","260":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B","260":"I p J D E F A B C K L G M N O q r s t u v w x y 6B"},D:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p","260":"0 1 2 3 4 5 6 7 8 K L G M N O q r s t u v w x y z","388":"J D E F A B C"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB","260":"J D E F AC BC CC","388":"9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B HC IC JC KC","260":"C G M N O q r s t u v lB 1B LC mB"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC","260":"E OC PC QC RC SC"},H:{"2":"gC"},I:{"1":"H mC","2":"hC iC jC","260":"lC","388":"oB I kC 2B"},J:{"260":"A","388":"D"},K:{"1":"c","2":"A B","260":"C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A","260":"B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"File API"};

var filereader={A:{A:{"2":"J D E F 3B","132":"A B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B","2":"4B oB 5B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 1B LC mB","2":"F B HC IC JC KC"},G:{"1":"E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC"},H:{"2":"gC"},I:{"1":"oB I H kC 2B lC mC","2":"hC iC jC"},J:{"1":"A","2":"D"},K:{"1":"C c lB 1B mB","2":"A B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"FileReader API"};

var filereadersync={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC mB","2":"F HC IC","16":"B JC KC lB 1B"},G:{"1":"E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"A","2":"D"},K:{"1":"C c 1B mB","2":"A","16":"B lB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"FileReaderSync"};

var filesystem={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","33":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"I p J D","33":"0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","36":"E F A B C"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D","33":"A"},K:{"2":"A B C c lB 1B mB"},L:{"33":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"33":"nC"},P:{"2":"I","33":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"33":"1C"},S:{"2":"2C"}},B:7,C:"Filesystem & FileWriter API"};

var flac={A:{A:{"2":"J D E F A B 3B"},B:{"1":"M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G"},C:{"1":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB 5B 6B"},D:{"1":"RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB","16":"FB GB HB","388":"IB JB KB LB MB NB OB PB QB"},E:{"1":"K L G DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC vB","516":"B C lB mB"},F:{"1":"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB HC IC JC KC lB 1B LC mB"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC"},H:{"2":"gC"},I:{"1":"H","2":"hC iC jC","16":"oB I kC 2B lC mC"},J:{"1":"A","2":"D"},K:{"1":"c mB","16":"A B C lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","129":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:6,C:"FLAC audio format"};

var flexboxGap={A:{A:{"2":"J D E F A B 3B"},B:{"1":"T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O P Q R S"},C:{"1":"WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB 5B 6B"},D:{"1":"T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S"},E:{"1":"G EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C K L 8B uB 9B AC BC CC vB lB mB DC"},F:{"1":"cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB HC IC JC KC lB 1B LC mB"},G:{"1":"eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"wC xC nB yC zC","2":"I oC pC qC rC sC vB tC uC vC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"gap property for Flexbox"};

var flexbox={A:{A:{"2":"J D E F 3B","1028":"B","1316":"A"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","164":"4B oB I p J D E F A B C K L G M N O q r s 5B 6B","516":"t u v w x y"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","33":"s t u v w x y z","164":"I p J D E F A B C K L G M N O q r"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","33":"D E AC BC","164":"I p J 8B uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F B C HC IC JC KC lB 1B LC","33":"G M"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","33":"E PC QC","164":"uB MC 2B NC OC"},H:{"1":"gC"},I:{"1":"H lC mC","164":"oB I hC iC jC kC 2B"},J:{"1":"A","164":"D"},K:{"1":"c mB","2":"A B C lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","292":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS Flexible Box Layout Module"};

var flowRoot={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB 5B 6B"},D:{"1":"TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB"},E:{"1":"K L G DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C 8B uB 9B AC BC CC vB lB mB"},F:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB HC IC JC KC lB 1B LC mB"},G:{"1":"ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:4,C:"display: flow-root"};

var focusinFocusoutEvents={A:{A:{"1":"J D E F A B","2":"3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"I p 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC mB","2":"F HC IC JC KC","16":"B lB 1B"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B"},H:{"2":"gC"},I:{"1":"I H kC 2B lC mC","2":"hC iC jC","16":"oB"},J:{"1":"D A"},K:{"1":"C c mB","2":"A","16":"B lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"focusin & focusout events"};

var fontFamilySystemUi={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB 5B 6B","132":"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},D:{"1":"RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB","260":"OB PB QB"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E 8B uB 9B AC BC","16":"F","132":"A CC vB"},F:{"1":"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB HC IC JC KC lB 1B LC mB"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC","132":"RC SC TC UC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"132":"2C"}},B:5,C:"system-ui value for font-family"};

var fontFeature={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","33":"0 1 2 3 4 G M N O q r s t u v w x y z","164":"I p J D E F A B C K L"},D:{"1":"JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G","33":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB","292":"M N O q r"},E:{"1":"A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"D E F 8B uB AC BC","4":"I p J 9B"},F:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 G M N O q r s t u v w x y z"},G:{"1":"SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E PC QC RC","4":"uB MC 2B NC OC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B","33":"lC mC"},J:{"2":"D","33":"A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","33":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS font-feature-settings"};

var fontKerning={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u 5B 6B","194":"0 1 2 3 4 v w x y z"},D:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t u v w x y z","33":"0 1 2 3"},E:{"1":"A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B AC","33":"D E F BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G HC IC JC KC lB 1B LC mB","33":"M N O q"},G:{"1":"XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC","33":"E QC RC SC TC UC VC WC"},H:{"2":"gC"},I:{"1":"H mC","2":"oB I hC iC jC kC 2B","33":"lC"},J:{"2":"D","33":"A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS3 font-kerning"};

var fontLoading={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","194":"6 7 8 9 AB BB"},D:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s HC IC JC KC lB 1B LC mB"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"CSS Font Loading"};

var fontSizeAdjust={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","194":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB","194":"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","194":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"194":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:2,C:"CSS font-size-adjust"};

var fontSmooth={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","676":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"4B oB I p J D E F A B C K L G M N O q r s t u v 5B 6B","804":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"2":"I","676":"0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"8B uB","676":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","676":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"804":"2C"}},B:7,C:"CSS font-smooth"};

var fontUnicodeRange={A:{A:{"2":"J D E 3B","4":"F A B"},B:{"1":"N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","4":"C K L G M"},C:{"1":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","194":"7 8 9 AB BB CB DB EB"},D:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","4":"0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","4":"I p J D E F 8B uB 9B AC BC CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","4":"G M N O q r s t"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","4":"E uB MC 2B NC OC PC QC RC SC"},H:{"2":"gC"},I:{"1":"H","4":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D","4":"A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"4":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","4":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"Font unicode-range subsetting"};

var fontVariantAlternates={A:{A:{"2":"J D E F 3B","130":"A B"},B:{"130":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","130":"I p J D E F A B C K L G M N O q r s t u","322":"0 1 2 3 4 v w x y z"},D:{"2":"I p J D E F A B C K L G","130":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"D E F 8B uB AC BC","130":"I p J 9B"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","130":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB PC QC RC","130":"MC 2B NC OC"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B","130":"H lC mC"},J:{"2":"D","130":"A"},K:{"2":"A B C lB 1B mB","130":"c"},L:{"130":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"130":"nC"},P:{"130":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"130":"0C"},R:{"130":"1C"},S:{"1":"2C"}},B:5,C:"CSS font-variant-alternates"};

var fontVariantNumeric={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB"},E:{"1":"A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC"},F:{"1":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D","16":"A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS font-variant-numeric"};

var fontface={A:{A:{"1":"F A B","132":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B oB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC lB 1B LC mB","2":"F HC"},G:{"1":"E 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","260":"uB MC"},H:{"2":"gC"},I:{"1":"I H kC 2B lC mC","2":"hC","4":"oB iC jC"},J:{"1":"A","4":"D"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"@font-face Web fonts"};

var formAttribute={A:{A:{"2":"J D E F A B 3B"},B:{"1":"M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB","16":"p"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","2":"F"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B"},H:{"1":"gC"},I:{"1":"oB I H kC 2B lC mC","2":"hC iC jC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Form attribute"};

var formSubmitAttributes={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC lB 1B LC mB","2":"F HC","16":"IC JC"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B"},H:{"1":"gC"},I:{"1":"I H kC 2B lC mC","2":"hC iC jC","16":"oB"},J:{"1":"A","2":"D"},K:{"1":"B C c lB 1B mB","16":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Attributes for form submission"};

var formValidation={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB","132":"p J D E F A 9B AC BC CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC lB 1B LC mB","2":"F HC"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB","132":"E MC 2B NC OC PC QC RC SC TC"},H:{"516":"gC"},I:{"1":"H mC","2":"oB hC iC jC","132":"I kC 2B lC"},J:{"1":"A","132":"D"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"260":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"132":"2C"}},B:1,C:"Form validation"};

var forms={A:{A:{"2":"3B","4":"A B","8":"J D E F"},B:{"1":"M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","4":"C K L G"},C:{"4":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","8":"4B oB 5B 6B"},D:{"1":"qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","4":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB"},E:{"4":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","8":"8B uB"},F:{"1":"F B C NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","4":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB"},G:{"2":"uB","4":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B","4":"lC mC"},J:{"2":"D","4":"A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"4":"b"},N:{"4":"A B"},O:{"1":"nC"},P:{"1":"rC sC vB tC uC vC wC xC nB yC zC","4":"I oC pC qC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"4":"2C"}},B:1,C:"HTML5 form features"};

var fullscreen$1={A:{A:{"2":"J D E F A 3B","548":"B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","516":"C K L G M N O"},C:{"1":"c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F 5B 6B","676":"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB","1700":"IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB"},D:{"1":"dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L","676":"G M N O q","804":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB"},E:{"2":"I p 8B uB","548":"xB yB zB nB 0B GC","676":"9B","804":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB"},F:{"1":"c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F B C HC IC JC KC lB 1B LC","804":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC","2052":"XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D","292":"A"},K:{"2":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A","548":"B"},O:{"1":"nC"},P:{"1":"vB tC uC vC wC xC nB yC zC","804":"I oC pC qC rC sC"},Q:{"804":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Full Screen API"};

var gamepad={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r","33":"s t u v"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u HC IC JC KC lB 1B LC mB"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"Gamepad API"};

var geolocation={A:{A:{"1":"F A B","2":"3B","8":"J D E"},B:{"1":"C K L G M N O","129":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB 5B 6B","8":"4B oB","129":"QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB","4":"I","129":"LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"p J D E F B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","8":"I 8B uB","129":"A"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C M N O q r s t u v w x y z KC lB 1B LC mB","2":"F G HC","8":"IC JC","129":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"E uB MC 2B NC OC PC QC RC SC","129":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"oB I hC iC jC kC 2B lC mC","129":"H"},J:{"1":"D A"},K:{"1":"B C lB 1B mB","8":"A","129":"c"},L:{"129":"H"},M:{"129":"b"},N:{"1":"A B"},O:{"129":"nC"},P:{"1":"I","129":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"129":"0C"},R:{"129":"1C"},S:{"1":"2C"}},B:2,C:"Geolocation"};

var getboundingclientrect={A:{A:{"644":"J D 3B","2049":"F A B","2692":"E"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2049":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B","260":"I p J D E F A B","1156":"oB","1284":"5B","1796":"6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC lB 1B LC mB","16":"F HC","132":"IC JC"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB"},H:{"1":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","132":"A"},L:{"1":"H"},M:{"1":"b"},N:{"2049":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"Element.getBoundingClientRect()"};

var getcomputedstyle={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B","132":"oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","260":"I p J D E F A"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","260":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC lB 1B LC mB","260":"F HC IC JC"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","260":"uB MC 2B"},H:{"260":"gC"},I:{"1":"I H kC 2B lC mC","260":"oB hC iC jC"},J:{"1":"A","260":"D"},K:{"1":"B C c lB 1B mB","260":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"getComputedStyle"};

var getelementsbyclassname={A:{A:{"1":"F A B","2":"3B","8":"J D E"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","8":"4B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","2":"F"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"getElementsByClassName"};

var getrandomvalues={A:{A:{"2":"J D E F A 3B","33":"B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"A","2":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A","33":"B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"crypto.getRandomValues()"};

var gyroscope={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB","194":"TB pB UB qB VB WB c XB YB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:4,C:"Gyroscope"};

var hardwareconcurrency={A:{A:{"2":"J D E F A B 3B"},B:{"1":"G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L"},C:{"1":"JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB 5B 6B"},D:{"1":"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"2":"I p J D 8B uB 9B AC BC","129":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","194":"E F A CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u HC IC JC KC lB 1B LC mB"},G:{"2":"uB MC 2B NC OC PC","129":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","194":"E QC RC SC TC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"navigator.hardwareConcurrency"};

var hashchange={A:{A:{"1":"E F A B","8":"J D 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B","8":"4B oB 5B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","8":"I"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","8":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC lB 1B LC mB","8":"F HC IC JC"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB"},H:{"2":"gC"},I:{"1":"oB I H iC jC kC 2B lC mC","2":"hC"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","8":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Hashchange event"};

var heif={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A 8B uB 9B AC BC CC vB","130":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC","130":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:6,C:"HEIF/ISO Base Media File Format"};

var hevc={A:{A:{"2":"J D E F A 3B","132":"B"},B:{"132":"C K L G M N O","1028":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b","2052":"H sB tB 7B"},E:{"1":"K L G DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC vB","516":"B C lB mB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B lC mC","258":"H"},J:{"2":"D A"},K:{"2":"A B C lB 1B mB","258":"c"},L:{"260":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I","258":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:6,C:"HEVC/H.265 video format"};

var hidden={A:{A:{"1":"B","2":"J D E F A 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 1B LC mB","2":"F B HC IC JC KC"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B"},H:{"1":"gC"},I:{"1":"I H kC 2B lC mC","2":"oB hC iC jC"},J:{"1":"A","2":"D"},K:{"1":"C c lB 1B mB","2":"A B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","2":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"hidden attribute"};

var highResolutionTime={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q","33":"r s t u"},E:{"1":"E F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D 8B uB 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC QC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"A","2":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"High Resolution Time API"};

var history={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB","4":"p 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a 1B LC mB","2":"F B HC IC JC KC lB"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC","4":"2B"},H:{"2":"gC"},I:{"1":"H iC jC 2B lC mC","2":"oB I hC kC"},J:{"1":"D A"},K:{"1":"C c lB 1B mB","2":"A B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Session history management"};

var htmlMediaCapture={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"uB MC 2B NC","129":"E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"oB I H kC 2B lC mC","2":"hC","257":"iC jC"},J:{"1":"A","16":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"516":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"16":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:2,C:"HTML Media Capture"};

var html5semantic={A:{A:{"2":"3B","8":"J D E","260":"F A B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B","132":"oB 5B 6B","260":"I p J D E F A B C K L G M N O q r"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","132":"I p","260":"J D E F A B C K L G M N O q r s t u v w"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","132":"I 8B uB","260":"p J 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","132":"F B HC IC JC KC","260":"C lB 1B LC mB"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","132":"uB","260":"MC 2B NC OC"},H:{"132":"gC"},I:{"1":"H lC mC","132":"hC","260":"oB I iC jC kC 2B"},J:{"260":"D A"},K:{"1":"c","132":"A","260":"B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"260":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"HTML5 semantic elements"};

var httpLiveStreaming={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O","2":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"oB I H kC 2B lC mC","2":"hC iC jC"},J:{"1":"A","2":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:"HTTP Live Streaming (HLS)"};

var http2={A:{A:{"2":"J D E F A 3B","132":"B"},B:{"1":"C K L G M N O","513":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB","2":"0 1 2 3 4 5 6 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","513":"OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"CB DB EB FB GB HB IB JB KB LB","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB","513":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E 8B uB 9B AC BC","260":"F A CC vB"},F:{"1":"0 1 2 3 4 5 6 7 8 z","2":"F B C G M N O q r s t u v w x y HC IC JC KC lB 1B LC mB","513":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B lC mC","513":"H"},J:{"2":"D A"},K:{"2":"A B C lB 1B mB","513":"c"},L:{"513":"H"},M:{"513":"b"},N:{"2":"A B"},O:{"513":"nC"},P:{"1":"I","513":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"513":"0C"},R:{"513":"1C"},S:{"1":"2C"}},B:6,C:"HTTP/2 protocol"};

var http3={A:{A:{"2":"J D E F A B 3B"},B:{"1":"W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O","322":"P Q R S T","578":"U V"},C:{"1":"X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB 5B 6B","194":"eB fB gB hB iB jB kB P Q R rB S T U V W"},D:{"1":"W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB","322":"P Q R S T","578":"U V"},E:{"2":"I p J D E F A B C K 8B uB 9B AC BC CC vB lB mB DC","1090":"L G EC FC wB xB yB zB nB 0B GC"},F:{"1":"gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB HC IC JC KC lB 1B LC mB","578":"fB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC","66":"dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"wC xC nB yC zC","2":"I oC pC qC rC sC vB tC uC vC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:6,C:"HTTP/3 protocol"};

var iframeSandbox={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M 5B 6B","4":"N O q r s t u v w x y"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC"},H:{"2":"gC"},I:{"1":"oB I H iC jC kC 2B lC mC","2":"hC"},J:{"1":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"sandbox attribute for iframes"};

var iframeSeamless={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","66":"r s t u v w x"},E:{"2":"I p J E F A B C K L G 8B uB 9B AC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","130":"D BC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","130":"PC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"seamless attribute for iframes"};

var iframeSrcdoc={A:{A:{"2":"3B","8":"J D E F A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","8":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B","8":"oB I p J D E F A B C K L G M N O q r s t u v 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K","8":"L G M N O q"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B uB","8":"I p 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B HC IC JC KC","8":"C lB 1B LC mB"},G:{"1":"E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB","8":"MC 2B NC"},H:{"2":"gC"},I:{"1":"H lC mC","8":"oB I hC iC jC kC 2B"},J:{"1":"A","8":"D"},K:{"1":"c","2":"A B","8":"C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"8":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"srcdoc attribute for iframes"};

var imagecapture={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","194":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB","322":"OB PB QB RB SB TB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB HC IC JC KC lB 1B LC mB","322":"BB CB DB EB FB GB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"16":"0C"},R:{"1":"1C"},S:{"194":"2C"}},B:5,C:"ImageCapture API"};

var ime={A:{A:{"2":"J D E F A 3B","161":"B"},B:{"2":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","161":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A","161":"B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"Input Method Editor API"};

var imgNaturalwidthNaturalheight={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"naturalWidth & naturalHeight image properties"};

var importMaps={A:{A:{"2":"J D E F A B 3B"},B:{"1":"Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O","194":"P Q R S T U V W X"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m 5B 6B","322":"n o b H sB tB"},D:{"1":"Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB","194":"gB hB iB jB kB P Q R S T U V W X"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB HC IC JC KC lB 1B LC mB","194":"VB WB c XB YB ZB aB bB cB dB eB fB gB hB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"xC nB yC zC","2":"I oC pC qC rC sC vB tC uC vC wC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:"Import maps"};

var imports={A:{A:{"2":"J D E F 3B","8":"A B"},B:{"1":"P","2":"Q R S T U V W X Y Z a d e f g h i j k l m n o b H","8":"C K L G M N O"},C:{"2":"0 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","8":"1 2 RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","72":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB"},D:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P","2":"0 I p J D E F A B C K L G M N O q r s t u v w x y z Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","66":"1 2 3 4 5","72":"6"},E:{"2":"I p 8B uB 9B","8":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB","2":"F B C G M ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","66":"N O q r s","72":"t"},G:{"2":"uB MC 2B NC OC","8":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"8":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC","2":"vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"2":"1C"},S:{"1":"2C"}},B:5,C:"HTML Imports"};

var indeterminateCheckbox={A:{A:{"1":"J D E F A B","16":"3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B","2":"4B oB","16":"5B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t u v w x y"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC mB","2":"F B HC IC JC KC lB 1B"},G:{"1":"YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"indeterminate checkbox"};

var indexeddb={A:{A:{"2":"J D E F 3B","132":"A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","132":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","33":"A B C K L G","36":"I p J D E F"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"A","8":"I p J D E F","33":"u","36":"B C K L G M N O q r s t"},E:{"1":"A B C K L G vB lB mB DC FC wB xB yB zB nB 0B GC","8":"I p J D 8B uB 9B AC","260":"E F BC CC","516":"EC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F HC IC","8":"B C JC KC lB 1B LC mB"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC fC wB xB yB zB nB 0B","8":"uB MC 2B NC OC PC","260":"E QC RC SC","516":"eC"},H:{"2":"gC"},I:{"1":"H lC mC","8":"oB I hC iC jC kC 2B"},J:{"1":"A","8":"D"},K:{"1":"c","2":"A","8":"B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"132":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"IndexedDB"};

var indexeddb2={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB 5B 6B","132":"FB GB HB","260":"IB JB KB LB"},D:{"1":"TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB","132":"JB KB LB MB","260":"NB OB PB QB RB SB"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC"},F:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","132":"6 7 8 9","260":"AB BB CB DB EB FB"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC","16":"TC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"qC rC sC vB tC uC vC wC xC nB yC zC","2":"I","260":"oC pC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"260":"2C"}},B:2,C:"IndexedDB 2.0"};

var inlineBlock={A:{A:{"1":"E F A B","4":"3B","132":"J D"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","36":"4B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS inline-block"};

var innertext={A:{A:{"1":"J D E F A B","16":"3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"8B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","16":"F"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB"},H:{"1":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"HTMLElement.innerText"};

var inputAutocompleteOnoff={A:{A:{"1":"J D E F A 3B","132":"B"},B:{"132":"C K L G M N O","260":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","516":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"N O q r s t u v w x","2":"I p J D E F A B C K L G M","132":"0 1 2 3 4 5 6 7 8 9 y z AB BB","260":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"J 9B AC","2":"I p 8B uB","2052":"D E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"uB MC 2B","1025":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1025":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2052":"A B"},O:{"1025":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"260":"0C"},R:{"1":"1C"},S:{"516":"2C"}},B:1,C:"autocomplete attribute: on & off values"};

var inputColor={A:{A:{"2":"J D E F A B 3B"},B:{"1":"L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q"},E:{"1":"K L G mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C 8B uB 9B AC BC CC vB lB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 1B LC mB","2":"F G M HC IC JC KC"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC","129":"YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:1,C:"Color input type"};

var inputDatetime={A:{A:{"2":"J D E F A B 3B"},B:{"1":"K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","132":"C"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB 5B 6B","1090":"OB PB QB RB","2052":"SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d","4100":"e f g h i j k l m n o b H sB tB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q","2052":"r s t u v"},E:{"2":"I p J D E F A B C K L 8B uB 9B AC BC CC vB lB mB DC","4100":"G EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"uB MC 2B","260":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB hC iC jC","514":"I kC 2B"},J:{"1":"A","2":"D"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"4100":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2052":"2C"}},B:1,C:"Date and time input types"};

var inputEmailTelUrl={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","2":"F"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"oB I H kC 2B lC mC","132":"hC iC jC"},J:{"1":"A","132":"D"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Email, telephone & URL input types"};

var inputEvent={A:{A:{"2":"J D E 3B","2561":"A B","2692":"F"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2561":"C K L G M N O"},C:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","16":"4B","1537":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB 6B","1796":"oB 5B"},D:{"1":"YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L","1025":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB","1537":"0 1 2 3 4 5 G M N O q r s t u v w x y z"},E:{"1":"L G DC EC FC wB xB yB zB nB 0B GC","16":"I p J 8B uB","1025":"D E F A B C AC BC CC vB lB","1537":"9B","4097":"K mB"},F:{"1":"NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","16":"F B C HC IC JC KC lB 1B","260":"LC","1025":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB","1537":"G M N O q r s"},G:{"1":"aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B","1025":"E QC RC SC TC UC VC WC XC","1537":"NC OC PC","4097":"YC ZC"},H:{"2":"gC"},I:{"16":"hC iC","1025":"H mC","1537":"oB I jC kC 2B lC"},J:{"1025":"A","1537":"D"},K:{"1":"A B C lB 1B mB","1025":"c"},L:{"1":"H"},M:{"1":"b"},N:{"2561":"A B"},O:{"1":"nC"},P:{"1025":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1025":"0C"},R:{"1":"1C"},S:{"1537":"2C"}},B:1,C:"input event"};

var inputFileAccept={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","132":"0 1 2 3 4 5 6 7 I p J D E F A B C K L G M N O q r s t u v w x y z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I","16":"p J D E s t u v w","132":"F A B C K L G M N O q r"},E:{"1":"C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B","132":"J D E F A B AC BC CC vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"2":"OC PC","132":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","514":"uB MC 2B NC"},H:{"2":"gC"},I:{"2":"hC iC jC","260":"oB I kC 2B","514":"H lC mC"},J:{"132":"A","260":"D"},K:{"2":"A B C lB 1B mB","514":"c"},L:{"260":"H"},M:{"2":"b"},N:{"514":"A","1028":"B"},O:{"2":"nC"},P:{"260":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"260":"0C"},R:{"260":"1C"},S:{"1":"2C"}},B:1,C:"accept attribute for file input"};

var inputFileDirectory={A:{A:{"2":"J D E F A B 3B"},B:{"1":"L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K"},C:{"1":"LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB 5B 6B"},D:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B 8B uB 9B AC BC CC vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"Directory selection from file input"};

var inputFileMultiple={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B","2":"4B oB 5B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC lB 1B LC mB","2":"F HC IC JC"},G:{"1":"E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC"},H:{"130":"gC"},I:{"130":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"130":"A B C c lB 1B mB"},L:{"132":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"130":"nC"},P:{"130":"I","132":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"132":"0C"},R:{"132":"1C"},S:{"2":"2C"}},B:1,C:"Multiple file selection"};

var inputInputmode={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M 5B 6B","4":"N O q r","194":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f"},D:{"1":"YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB","66":"RB SB TB pB UB qB VB WB c XB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB HC IC JC KC lB 1B LC mB","66":"EB FB GB HB IB JB KB LB MB NB"},G:{"1":"YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"sC vB tC uC vC wC xC nB yC zC","2":"I oC pC qC rC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"194":"2C"}},B:1,C:"inputmode attribute"};

var inputMinlength={A:{A:{"2":"J D E F A B 3B"},B:{"1":"N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M"},C:{"1":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB 5B 6B"},D:{"1":"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v w x HC IC JC KC lB 1B LC mB"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:1,C:"Minimum length attribute for input fields"};

var inputNumber={A:{A:{"2":"J D E F 3B","129":"A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","129":"C K","1025":"L G M N O"},C:{"2":"4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","513":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"388":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB hC iC jC","388":"I H kC 2B lC mC"},J:{"2":"D","388":"A"},K:{"1":"A B C lB 1B mB","388":"c"},L:{"388":"H"},M:{"641":"b"},N:{"388":"A B"},O:{"388":"nC"},P:{"388":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"388":"0C"},R:{"388":"1C"},S:{"513":"2C"}},B:1,C:"Number input type"};

var inputPattern={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB","16":"p","388":"J D E F A 9B AC BC CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","2":"F"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B","388":"E NC OC PC QC RC SC TC"},H:{"2":"gC"},I:{"1":"H mC","2":"oB I hC iC jC kC 2B lC"},J:{"1":"A","2":"D"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"132":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Pattern attribute for input fields"};

var inputPlaceholder={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","132":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a 1B LC mB","2":"F HC IC JC KC","132":"B lB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB H hC iC jC 2B lC mC","4":"I kC"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"input placeholder attribute"};

var inputRange={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B"},H:{"2":"gC"},I:{"1":"H 2B lC mC","4":"oB I hC iC jC kC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Range input type"};

var inputSearch={A:{A:{"2":"J D E F 3B","129":"A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","129":"C K L G M N O"},C:{"2":"4B oB 5B 6B","129":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L s t u v w","129":"G M N O q r"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"I p 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC mB","2":"F HC IC JC KC","16":"B lB 1B"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B"},H:{"129":"gC"},I:{"1":"H lC mC","16":"hC iC","129":"oB I jC kC 2B"},J:{"1":"D","129":"A"},K:{"1":"C c","2":"A","16":"B lB 1B","129":"mB"},L:{"1":"H"},M:{"129":"b"},N:{"129":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"129":"2C"}},B:1,C:"Search input type"};

var inputSelection={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC lB 1B LC mB","16":"F HC IC JC"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB"},H:{"2":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Selection controls for input & textarea"};

var insertAdjacent={A:{A:{"1":"J D E F A B","16":"3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","16":"F"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Element.insertAdjacentElement() & Element.insertAdjacentText()"};

var insertadjacenthtml={A:{A:{"1":"A B","16":"3B","132":"J D E F"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC lB 1B LC mB","16":"F HC"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB"},H:{"1":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"Element.insertAdjacentHTML()"};

var internationalization={A:{A:{"1":"B","2":"J D E F A 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t u"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","2":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:6,C:"Internationalization API"};

var intersectionobserverV2={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"tC uC vC wC xC nB yC zC","2":"I oC pC qC rC sC vB"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:"IntersectionObserver V2"};

var intersectionobserver={A:{A:{"2":"J D E F A B 3B"},B:{"1":"M N O","2":"C K L","516":"G","1025":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB 5B 6B","194":"NB OB PB"},D:{"1":"TB pB UB qB VB WB c","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB","516":"MB NB OB PB QB RB SB","1025":"XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"K L G mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C 8B uB 9B AC BC CC vB lB"},F:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB","2":"0 1 2 3 4 5 6 7 8 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","516":"9 AB BB CB DB EB FB","1025":"c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B lC mC","1025":"H"},J:{"2":"D A"},K:{"2":"A B C lB 1B mB","1025":"c"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"qC rC sC vB tC uC vC wC xC nB yC zC","2":"I","516":"oC pC"},Q:{"1025":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"IntersectionObserver"};

var intlPluralrules={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N","130":"O"},C:{"1":"TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB 5B 6B"},D:{"1":"WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB"},E:{"1":"K L G DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C 8B uB 9B AC BC CC vB lB mB"},F:{"1":"LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB HC IC JC KC lB 1B LC mB"},G:{"1":"ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC qC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:6,C:"Intl.PluralRules API"};

var intrinsicWidth={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","1537":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"4B","932":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB 5B 6B","2308":"YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"2":"I p J D E F A B C K L G M N O q r s","545":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB","1537":"HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J 8B uB 9B","516":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","548":"F A CC vB","676":"D E AC BC"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","513":"5","545":"0 1 2 3 G M N O q r s t u v w x y z","1537":"4 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"uB MC 2B NC OC","516":"dC eC fC wB xB yB zB nB 0B","548":"RC SC TC UC VC WC XC YC ZC aC bC cC","676":"E PC QC"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B","545":"lC mC","1537":"H"},J:{"2":"D","545":"A"},K:{"2":"A B C lB 1B mB","1537":"c"},L:{"1537":"H"},M:{"2308":"b"},N:{"2":"A B"},O:{"1537":"nC"},P:{"545":"I","1537":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"545":"0C"},R:{"1537":"1C"},S:{"932":"2C"}},B:5,C:"Intrinsic & Extrinsic Sizing"};

var jpeg2000={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB","129":"p 9B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:6,C:"JPEG 2000 image format"};

var jpegxl={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z","578":"a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y 5B 6B","322":"Z a d e f g h i j k l m n o b H sB tB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z","194":"a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB HC IC JC KC lB 1B LC mB","194":"jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:6,C:"JPEG XL image format"};

var jpegxr={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O","2":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"1":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:6,C:"JPEG XR image format"};

var jsRegexpLookbehind={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB 5B 6B"},D:{"1":"VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC qC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:6,C:"Lookbehind in JS regular expressions"};

var json={A:{A:{"1":"F A B","2":"J D 3B","129":"E"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B oB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC lB 1B LC mB","2":"F HC IC"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"JSON parsing"};

var justifyContentSpaceEvenly={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G","132":"M N O"},C:{"1":"NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB 5B 6B"},D:{"1":"UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB","132":"SB TB pB"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC","132":"vB"},F:{"1":"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB HC IC JC KC lB 1B LC mB","132":"FB GB HB"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC","132":"UC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC","132":"qC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"132":"2C"}},B:5,C:"CSS justify-content: space-evenly"};

var kerningPairsLigatures={A:{A:{"2":"J D E F A B 3B"},B:{"1":"O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N"},C:{"1":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"hC iC jC","132":"oB I kC 2B"},J:{"1":"A","2":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:7,C:"High-quality kerning pairs & ligatures"};

var keyboardeventCharcode={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","16":"4B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F B HC IC JC KC lB 1B LC","16":"C"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B"},H:{"2":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"D A"},K:{"1":"c mB","2":"A B lB 1B","16":"C"},L:{"1":"H"},M:{"130":"b"},N:{"130":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:7,C:"KeyboardEvent.charCode"};

var keyboardeventCode={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB","194":"DB EB FB GB HB IB"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC"},F:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","194":"0 1 2 3 4 5"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"194":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I","194":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"194":"1C"},S:{"1":"2C"}},B:5,C:"KeyboardEvent.code"};

var keyboardeventGetmodifierstate={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L 5B 6B"},D:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F B G M HC IC JC KC lB 1B LC","16":"C"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"2":"D A"},K:{"1":"c mB","2":"A B lB 1B","16":"C"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"KeyboardEvent.getModifierState()"};

var keyboardeventKey={A:{A:{"2":"J D E 3B","260":"F A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","260":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t 5B 6B","132":"u v w x y z"},D:{"1":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC"},F:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"0 1 2 3 4 5 6 7 8 F B G M N O q r s t u v w x y z HC IC JC KC lB 1B LC","16":"C"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC"},H:{"1":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c mB","2":"A B lB 1B","16":"C"},L:{"1":"H"},M:{"1":"b"},N:{"260":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"2":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"KeyboardEvent.key"};

var keyboardeventLocation={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L 5B 6B"},D:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","132":"0 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"J 8B uB","132":"I p 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F B HC IC JC KC lB 1B LC","16":"C","132":"G M"},G:{"1":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B","132":"NC OC PC"},H:{"2":"gC"},I:{"1":"H lC mC","16":"hC iC","132":"oB I jC kC 2B"},J:{"132":"D A"},K:{"1":"c mB","2":"A B lB 1B","16":"C"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"KeyboardEvent.location"};

var keyboardeventWhich={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB","16":"p"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC lB 1B LC mB","16":"F HC"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B"},H:{"2":"gC"},I:{"1":"oB I H jC kC 2B","16":"hC iC","132":"lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"132":"H"},M:{"132":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"2":"I","132":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"132":"1C"},S:{"1":"2C"}},B:7,C:"KeyboardEvent.which"};

var lazyload={A:{A:{"1":"B","2":"J D E F A 3B"},B:{"1":"C K L G M N O","2":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"1":"B","2":"A"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"Resource Hints: Lazyload"};

var _let={A:{A:{"2":"J D E F A 3B","2052":"B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","194":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB 5B 6B"},D:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O","322":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB","516":"CB DB EB FB GB HB IB JB"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC","1028":"A vB"},F:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","322":"G M N O q r s t u v w x y","516":"0 1 2 3 4 5 6 z"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC","1028":"TC UC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","2":"A"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","516":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"let"};

var linkIconPng={A:{A:{"1":"B","2":"J D E F A 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","130":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC"},H:{"130":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D","130":"A"},K:{"1":"c","130":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"130":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"PNG favicons"};

var linkIconSvg={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P","1537":"Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"4B oB 5B 6B","260":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB","513":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P","1537":"Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"FB GB HB IB JB KB LB MB NB OB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB PB QB RB SB TB UB VB WB c XB YB HC IC JC KC lB 1B LC mB","1537":"ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","130":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC"},H:{"130":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D","130":"A"},K:{"2":"c","130":"A B C lB 1B mB"},L:{"1537":"H"},M:{"2":"b"},N:{"130":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC","1537":"vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"1537":"1C"},S:{"513":"2C"}},B:1,C:"SVG favicons"};

var linkRelDnsPrefetch={A:{A:{"1":"A B","2":"J D E 3B","132":"F"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"4B oB","260":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"16":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"16":"oB I H hC iC jC kC 2B lC mC"},J:{"16":"D A"},K:{"16":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","2":"A"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","16":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"Resource Hints: dns-prefetch"};

var linkRelModulepreload={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"sC vB tC uC vC wC xC nB yC zC","2":"I oC pC qC rC"},Q:{"16":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:1,C:"Resource Hints: modulepreload"};

var linkRelPreconnect={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L","260":"G M N O"},C:{"1":"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","129":"AB"},D:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB"},E:{"1":"C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B 8B uB 9B AC BC CC vB"},F:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"16":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"Resource Hints: preconnect"};

var linkRelPrefetch={A:{A:{"1":"B","2":"J D E F A 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D"},E:{"2":"I p J D E F A B C K 8B uB 9B AC BC CC vB lB mB","194":"L G DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC","194":"cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"I H lC mC","2":"oB hC iC jC kC 2B"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","2":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"Resource Hints: prefetch"};

var linkRelPreload={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M","1028":"N O"},C:{"1":"U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB 5B 6B","132":"RB","578":"SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T"},D:{"1":"LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB"},E:{"1":"C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC vB","322":"B"},F:{"1":"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC","322":"VC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:4,C:"Resource Hints: preload"};

var linkRelPrerender={A:{A:{"1":"B","2":"J D E F A 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"1":"B","2":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"Resource Hints: prerender"};

var loadingLazyAttr={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB 5B 6B","132":"hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB","66":"hB iB"},E:{"1":"GC","2":"I p J D E F A B C K 8B uB 9B AC BC CC vB lB mB","322":"L G DC EC FC wB","580":"xB yB zB nB 0B"},F:{"1":"c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB HC IC JC KC lB 1B LC mB","66":"VB WB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC","322":"cC dC eC fC wB","580":"xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"132":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"uC vC wC xC nB yC zC","2":"I oC pC qC rC sC vB tC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:1,C:"Lazy loading via attribute for images & iframes"};

var localecompare={A:{A:{"1":"B","16":"3B","132":"J D E F A"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","132":"4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","132":"I p J D E F A B C K L G M N O q r s t u"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","132":"I p J D E F 8B uB 9B AC BC CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","16":"F B C HC IC JC KC lB 1B LC","132":"mB"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","132":"E uB MC 2B NC OC PC QC RC SC"},H:{"132":"gC"},I:{"1":"H lC mC","132":"oB I hC iC jC kC 2B"},J:{"132":"D A"},K:{"1":"c","16":"A B C lB 1B","132":"mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","132":"A"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","132":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"4":"2C"}},B:6,C:"localeCompare()"};

var magnetometer={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB","194":"TB pB UB qB VB WB c XB YB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"194":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:4,C:"Magnetometer"};

var matchesselector={A:{A:{"2":"J D E 3B","36":"F A B"},B:{"1":"G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","36":"C K L"},C:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B","36":"0 1 2 3 4 I p J D E F A B C K L G M N O q r s t u v w x y z 6B"},D:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","36":"0 1 2 3 4 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB","36":"p J D 9B AC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B HC IC JC KC lB","36":"C G M N O q r 1B LC mB"},G:{"1":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB","36":"MC 2B NC OC PC"},H:{"2":"gC"},I:{"1":"H","2":"hC","36":"oB I iC jC kC 2B lC mC"},J:{"36":"D A"},K:{"1":"c","2":"A B","36":"C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"36":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","36":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"matches() DOM method"};

var matchmedia={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F B C HC IC JC KC lB 1B LC"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B"},H:{"1":"gC"},I:{"1":"oB I H kC 2B lC mC","2":"hC iC jC"},J:{"1":"A","2":"D"},K:{"1":"c mB","2":"A B C lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"matchMedia"};

var mathml={A:{A:{"2":"F A B 3B","8":"J D E"},B:{"2":"C K L G M N O","8":"P Q R S T U V W X Y Z a d e f g h","584":"i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","129":"4B oB 5B 6B"},D:{"1":"v","8":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h","584":"i j k l m n o b H sB tB 7B"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","260":"I p J D E F 8B uB 9B AC BC CC"},F:{"2":"F","8":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB","584":"S T U V W X Y Z a","2052":"B C HC IC JC KC lB 1B LC mB"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","8":"uB MC 2B"},H:{"8":"gC"},I:{"8":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"A","8":"D"},K:{"8":"A B C c lB 1B mB"},L:{"8":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"8":"nC"},P:{"8":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"8":"0C"},R:{"8":"1C"},S:{"1":"2C"}},B:2,C:"MathML"};

var maxlength={A:{A:{"1":"A B","16":"3B","900":"J D E F"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","1025":"C K L G M N O"},C:{"1":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","900":"4B oB 5B 6B","1025":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"p 8B","900":"I uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","16":"F","132":"B C HC IC JC KC lB 1B LC mB"},G:{"1":"MC 2B NC OC PC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB","2052":"E QC"},H:{"132":"gC"},I:{"1":"oB I jC kC 2B lC mC","16":"hC iC","4097":"H"},J:{"1":"D A"},K:{"132":"A B C lB 1B mB","4097":"c"},L:{"4097":"H"},M:{"4097":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"4097":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1025":"2C"}},B:1,C:"maxlength attribute for input and textarea elements"};

var mdnCssUnicodeBidiIsolateOverride={A:{D:{"1":"JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB"},L:{"1":"H"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M 5B 6B","33":"0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB"},M:{"1":"b"},A:{"2":"J D E F A B 3B"},F:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},K:{"1":"c","2":"A B C lB 1B mB"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B","2":"I p J 8B uB 9B AC GC","33":"D E F A BC CC vB"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC","33":"E PC QC RC SC TC UC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"}},B:6,C:"isolate-override from unicode-bidi"};

var mdnCssUnicodeBidiIsolate={A:{D:{"1":"JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G","33":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB"},L:{"1":"H"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F 5B 6B","33":"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB"},M:{"1":"b"},A:{"2":"J D E F A B 3B"},F:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 G M N O q r s t u v w x y z"},K:{"1":"c","2":"A B C lB 1B mB"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B","2":"I p 8B uB 9B GC","33":"J D E F A AC BC CC vB"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC","33":"E OC PC QC RC SC TC UC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"}},B:6,C:"isolate from unicode-bidi"};

var mdnCssUnicodeBidiPlaintext={A:{D:{"1":"JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB"},L:{"1":"H"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F 5B 6B","33":"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB"},M:{"1":"b"},A:{"2":"J D E F A B 3B"},F:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},K:{"1":"c","2":"A B C lB 1B mB"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B","2":"I p 8B uB 9B GC","33":"J D E F A AC BC CC vB"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC","33":"E OC PC QC RC SC TC UC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"}},B:6,C:"plaintext from unicode-bidi"};

var mdnTextDecorationColor={A:{D:{"1":"SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB"},L:{"1":"H"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p 5B 6B","33":"0 1 2 3 4 5 6 J D E F A B C K L G M N O q r s t u v w x y z"},M:{"1":"b"},A:{"2":"J D E F A B 3B"},F:{"1":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB HC IC JC KC lB 1B LC mB"},K:{"1":"c","2":"A B C lB 1B mB"},E:{"1":"K L G mB DC EC FC wB xB yB zB nB 0B","2":"I p J D 8B uB 9B AC BC GC","33":"E F A B C CC vB lB"},G:{"1":"YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC","33":"E QC RC SC TC UC VC WC XC"},P:{"1":"qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"}},B:6,C:"text-decoration-color property"};

var mdnTextDecorationLine={A:{D:{"1":"SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB"},L:{"1":"H"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p 5B 6B","33":"0 1 2 3 4 5 6 J D E F A B C K L G M N O q r s t u v w x y z"},M:{"1":"b"},A:{"2":"J D E F A B 3B"},F:{"1":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB HC IC JC KC lB 1B LC mB"},K:{"1":"c","2":"A B C lB 1B mB"},E:{"1":"K L G mB DC EC FC wB xB yB zB nB 0B","2":"I p J D 8B uB 9B AC BC GC","33":"E F A B C CC vB lB"},G:{"1":"YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC","33":"E QC RC SC TC UC VC WC XC"},P:{"1":"qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"}},B:6,C:"text-decoration-line property"};

var mdnTextDecorationShorthand={A:{D:{"1":"SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB"},L:{"1":"H"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p 5B 6B"},M:{"1":"b"},A:{"2":"J D E F A B 3B"},F:{"1":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB HC IC JC KC lB 1B LC mB"},K:{"1":"c","2":"A B C lB 1B mB"},E:{"2":"I p J D 8B uB 9B AC BC GC","33":"E F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B"},G:{"2":"uB MC 2B NC OC PC","33":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},P:{"1":"qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"}},B:6,C:"text-decoration shorthand property"};

var mdnTextDecorationStyle={A:{D:{"1":"SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB"},L:{"1":"H"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p 5B 6B","33":"0 1 2 3 4 5 6 J D E F A B C K L G M N O q r s t u v w x y z"},M:{"1":"b"},A:{"2":"J D E F A B 3B"},F:{"1":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB HC IC JC KC lB 1B LC mB"},K:{"1":"c","2":"A B C lB 1B mB"},E:{"1":"K L G mB DC EC FC wB xB yB zB nB 0B","2":"I p J D 8B uB 9B AC BC GC","33":"E F A B C CC vB lB"},G:{"1":"YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC","33":"E QC RC SC TC UC VC WC XC"},P:{"1":"qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"}},B:6,C:"text-decoration-style property"};

var mediaFragments={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","132":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","132":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"2":"I p J D E F A B C K L G M N","132":"0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p 8B uB 9B","132":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","132":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"uB MC 2B NC OC PC","132":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B","132":"H lC mC"},J:{"2":"D A"},K:{"2":"A B C lB 1B mB","132":"c"},L:{"132":"H"},M:{"132":"b"},N:{"132":"A B"},O:{"132":"nC"},P:{"2":"I oC","132":"pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"132":"1C"},S:{"132":"2C"}},B:2,C:"Media Fragments"};

var mediacaptureFromelement={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB 5B 6B","260":"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB","324":"MB NB OB PB QB RB SB TB pB UB qB"},E:{"2":"I p J D E F A 8B uB 9B AC BC CC vB","132":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","324":"7 8 9 AB BB CB DB EB FB GB HB IB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"260":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"rC sC vB tC uC vC wC xC nB yC zC","2":"I","132":"oC pC qC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"260":"2C"}},B:5,C:"Media Capture from DOM Elements API"};

var mediarecorder={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB","194":"IB JB"},E:{"1":"G EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C 8B uB 9B AC BC CC vB lB","322":"K L mB DC"},F:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","194":"5 6"},G:{"1":"eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC","578":"XC YC ZC aC bC cC dC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"MediaRecorder API"};

var mediasource={A:{A:{"2":"J D E F A 3B","132":"B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v 5B 6B","66":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB"},D:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M","33":"0 1 u v w x y z","66":"N O q r s t"},E:{"1":"E F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D 8B uB 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC","260":"ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H mC","2":"oB I hC iC jC kC 2B lC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","2":"A"},O:{"1":"nC"},P:{"1":"sC vB tC uC vC wC xC nB yC zC","2":"I oC pC qC rC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"Media Source Extensions"};

var menu={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"4B oB I p J D 5B 6B","132":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T","450":"U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","66":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 F B C G M N O q r s t u v w x y z IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","66":"6 7 8 9 AB BB CB DB EB FB GB HB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"450":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"Context menu item (menuitem element)"};

var metaThemeColor={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z","132":"fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","258":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB"},E:{"1":"G FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C K L 8B uB 9B AC BC CC vB lB mB DC EC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"513":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I","16":"oC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:1,C:"theme-color Meta Tag"};

var meter={A:{A:{"2":"J D E F A B 3B"},B:{"1":"K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 1B LC mB","2":"F HC IC JC KC"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC"},H:{"1":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"meter element"};

var midi={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"Web MIDI API"};

var minmaxwh={A:{A:{"1":"F A B","8":"J 3B","129":"D","257":"E"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS min/max-width/height"};

var mp3={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB","132":"I p J D E F A B C K L G M N O q r s 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB"},H:{"2":"gC"},I:{"1":"oB I H jC kC 2B lC mC","2":"hC iC"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"MP3 audio format"};

var mpegDash={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O","2":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","386":"s t"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:6,C:"Dynamic Adaptive Streaming over HTTP (MPEG-DASH)"};

var mpeg4={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r 5B 6B","4":"0 1 2 3 4 5 s t u v w x y z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H lC mC","4":"oB I hC iC kC 2B","132":"jC"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"260":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"MPEG-4/H.264 video format"};

var multibackgrounds={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B","2":"4B oB 5B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC lB 1B LC mB","2":"F HC IC"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS3 Multiple backgrounds"};

var multicolumn={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O","516":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"132":"NB OB PB QB RB SB TB pB UB qB VB WB c","164":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB 5B 6B","516":"XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","1028":"d e f g h i j k l m n o b H sB tB"},D:{"420":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB","516":"LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","132":"F CC","164":"D E BC","420":"I p J 8B uB 9B AC"},F:{"1":"C lB 1B LC mB","2":"F B HC IC JC KC","420":"0 1 2 3 4 5 6 7 G M N O q r s t u v w x y z","516":"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","132":"RC SC","164":"E PC QC","420":"uB MC 2B NC OC"},H:{"1":"gC"},I:{"420":"oB I hC iC jC kC 2B lC mC","516":"H"},J:{"420":"D A"},K:{"1":"C lB 1B mB","2":"A B","516":"c"},L:{"516":"H"},M:{"516":"b"},N:{"1":"A B"},O:{"516":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","420":"I"},Q:{"132":"0C"},R:{"516":"1C"},S:{"164":"2C"}},B:4,C:"CSS3 Multiple column layout"};

var mutationEvents={A:{A:{"2":"J D E 3B","260":"F A B"},B:{"132":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","260":"C K L G M N O"},C:{"2":"4B oB I p 5B 6B","260":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"16":"I p J D E F A B C K L","132":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"16":"8B uB","132":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"C LC mB","2":"F HC IC JC KC","16":"B lB 1B","132":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"16":"uB MC","132":"E 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"16":"hC iC","132":"oB I H jC kC 2B lC mC"},J:{"132":"D A"},K:{"1":"C mB","2":"A","16":"B lB 1B","132":"c"},L:{"132":"H"},M:{"260":"b"},N:{"260":"A B"},O:{"132":"nC"},P:{"132":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"132":"0C"},R:{"132":"1C"},S:{"260":"2C"}},B:5,C:"Mutation events"};

var mutationobserver={A:{A:{"1":"B","2":"J D E 3B","8":"F A"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N","33":"O q r s t u v w x"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B","33":"J"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC","33":"OC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB hC iC jC","8":"I kC 2B"},J:{"1":"A","2":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","8":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Mutation Observer"};

var namevalueStorage={A:{A:{"1":"E F A B","2":"3B","8":"J D"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","4":"4B oB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC lB 1B LC mB","2":"F HC IC"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Web Storage - name/value pairs"};

var nativeFilesystemApi={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","194":"P Q R S T U","260":"V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB","194":"gB hB iB jB kB P Q R S T U","260":"V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC","516":"wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB HC IC JC KC lB 1B LC mB","194":"VB WB c XB YB ZB aB bB cB dB","260":"eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC","516":"wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"File System Access API"};

var navTiming={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p","33":"J D E F A B C"},E:{"1":"E F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D 8B uB 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC QC"},H:{"2":"gC"},I:{"1":"I H kC 2B lC mC","2":"oB hC iC jC"},J:{"1":"A","2":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"Navigation Timing API"};

var netinfo={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","1028":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB","1028":"qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB HC IC JC KC lB 1B LC mB","1028":"JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"hC lC mC","132":"oB I iC jC kC 2B"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"rC sC vB tC uC vC wC xC nB yC zC","132":"I","516":"oC pC qC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"260":"2C"}},B:7,C:"Network Information API"};

var notifications={A:{A:{"2":"J D E F A B 3B"},B:{"1":"L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I","36":"p J D E F A B C K L G M N O q r s"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B","36":"H lC mC"},J:{"1":"A","2":"D"},K:{"2":"A B C lB 1B mB","36":"c"},L:{"513":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"36":"I","258":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"258":"1C"},S:{"1":"2C"}},B:1,C:"Web Notifications"};

var objectEntries={A:{A:{"2":"J D E F A B 3B"},B:{"1":"L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K"},C:{"1":"IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB 5B 6B"},D:{"1":"PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC"},F:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB HC IC JC KC lB 1B LC mB"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D","16":"A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"Object.entries"};

var objectFit={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G","260":"M N O"},C:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D 8B uB 9B AC","132":"E F BC CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F G M N O HC IC JC","33":"B C KC lB 1B LC mB"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC","132":"E QC RC SC"},H:{"33":"gC"},I:{"1":"H mC","2":"oB I hC iC jC kC 2B lC"},J:{"2":"D A"},K:{"1":"c","2":"A","33":"B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS3 object-fit/object-position"};

var objectObserve={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB","2":"0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 u v w x y z","2":"8 9 F B C G M N O q r s t AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"I","2":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"Object.observe data binding"};

var objectValues={A:{A:{"8":"J D E F A B 3B"},B:{"1":"L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K"},C:{"1":"IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","8":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB 5B 6B"},D:{"1":"PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","8":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","8":"I p J D E F A 8B uB 9B AC BC CC"},F:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","8":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB HC IC JC KC lB 1B LC mB"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","8":"E uB MC 2B NC OC PC QC RC SC TC"},H:{"8":"gC"},I:{"1":"H","8":"oB I hC iC jC kC 2B lC mC"},J:{"8":"D A"},K:{"1":"c","8":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"8":"A B"},O:{"1":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","8":"I oC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"Object.values method"};

var objectrtc={A:{A:{"2":"J D E F A B 3B"},B:{"1":"K L G M N O","2":"C P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D","130":"A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:6,C:"Object RTC (ORTC) API for WebRTC"};

var offlineApps={A:{A:{"1":"A B","2":"F 3B","8":"J D E"},B:{"1":"C K L G M N O P Q R S T","2":"U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S 5B 6B","2":"T U V W X Y Z a d e f g h i j k l m n o b H sB tB","4":"oB","8":"4B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T","2":"U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","8":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB KC lB 1B LC mB","2":"F fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC","8":"IC JC"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"oB I hC iC jC kC 2B lC mC","2":"H"},J:{"1":"D A"},K:{"1":"B C lB 1B mB","2":"A c"},L:{"2":"H"},M:{"2":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"2":"1C"},S:{"1":"2C"}},B:7,C:"Offline web applications"};

var offscreencanvas={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB 5B 6B","194":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b"},D:{"1":"bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB","322":"TB pB UB qB VB WB c XB YB ZB aB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB HC IC JC KC lB 1B LC mB","322":"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"194":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"vB tC uC vC wC xC nB yC zC","2":"I oC pC qC rC sC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"194":"2C"}},B:1,C:"OffscreenCanvas"};

var oggVorbis={A:{A:{"2":"J D E F A B 3B"},B:{"1":"N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B oB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L 8B uB 9B AC BC CC vB lB mB DC","132":"G EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC lB 1B LC mB","2":"F HC IC"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"A","2":"D"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"Ogg Vorbis audio format"};

var ogv={A:{A:{"2":"J D E 3B","8":"F A B"},B:{"1":"N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","8":"C K L G M"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B oB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC lB 1B LC mB","2":"F HC IC"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"1":"b"},N:{"8":"A B"},O:{"1":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"2":"1C"},S:{"1":"2C"}},B:6,C:"Ogg/Theora video format"};

var olReversed={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G","16":"M N O q"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B","16":"J"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F B HC IC JC KC lB 1B LC","16":"C"},G:{"1":"E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC"},H:{"1":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"A","2":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Reversed attribute of ordered lists"};

var onceEventListener={A:{A:{"2":"J D E F A B 3B"},B:{"1":"M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G"},C:{"1":"LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB 5B 6B"},D:{"1":"QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC"},F:{"1":"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB HC IC JC KC lB 1B LC mB"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:1,C:"\"once\" event listener option"};

var onlineStatus={A:{A:{"1":"F A B","2":"J D 3B","260":"E"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B oB","516":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC","4":"mB"},G:{"1":"E 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC"},H:{"2":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"A","132":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Online/offline status"};

var opus={A:{A:{"2":"J D E F A B 3B"},B:{"1":"L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L 5B 6B"},D:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"2":"I p J D E F A 8B uB 9B AC BC CC vB","132":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC","132":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"Opus"};

var orientationSensor={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB","194":"TB pB UB qB VB WB c XB YB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:4,C:"Orientation Sensor"};

var outline={A:{A:{"2":"J D 3B","260":"E","388":"F A B"},B:{"1":"G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","388":"C K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC","129":"mB","260":"F B HC IC JC KC lB 1B"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"C c mB","260":"A B lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"388":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS outline properties"};

var padStartEnd={A:{A:{"2":"J D E F A B 3B"},B:{"1":"G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L"},C:{"1":"JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB 5B 6B"},D:{"1":"SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC"},F:{"1":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB HC IC JC KC lB 1B LC mB"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"String.prototype.padStart(), String.prototype.padEnd()"};

var pageTransitionEvents={A:{A:{"1":"B","2":"J D E F A 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B"},H:{"2":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","2":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"PageTransitionEvent"};

var pagevisibility={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F 5B 6B","33":"A B C K L G M N"},D:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K","33":"0 1 2 3 L G M N O q r s t u v w x y z"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F B C HC IC JC KC lB 1B LC","33":"G M N O q"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B","33":"lC mC"},J:{"1":"A","2":"D"},K:{"1":"c mB","2":"A B C lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","33":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"Page Visibility"};

var passiveEventListener={A:{A:{"2":"J D E F A B 3B"},B:{"1":"M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G"},C:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB 5B 6B"},D:{"1":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC"},F:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:1,C:"Passive event listeners"};

var passwordrules={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","16":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H 5B 6B","16":"sB tB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","16":"sB tB 7B"},E:{"1":"C K mB","2":"I p J D E F A B 8B uB 9B AC BC CC vB lB","16":"L G DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB HC IC JC KC lB 1B LC mB","16":"OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"16":"gC"},I:{"2":"oB I hC iC jC kC 2B lC mC","16":"H"},J:{"2":"D","16":"A"},K:{"2":"A B C lB 1B mB","16":"c"},L:{"16":"H"},M:{"16":"b"},N:{"2":"A","16":"B"},O:{"16":"nC"},P:{"2":"I oC pC","16":"qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"16":"0C"},R:{"16":"1C"},S:{"2":"2C"}},B:1,C:"Password Rules"};

var path2d={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K","132":"L G M N O"},C:{"1":"JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","132":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB"},D:{"1":"aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z","132":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB"},E:{"1":"A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D 8B uB 9B AC","132":"E F BC"},F:{"1":"QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t HC IC JC KC lB 1B LC mB","132":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC","16":"E","132":"QC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"1":"A","2":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"vB tC uC vC wC xC nB yC zC","132":"I oC pC qC rC sC"},Q:{"132":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Path2D"};

var paymentRequest={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K","322":"L","8196":"G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB 5B 6B","4162":"QB RB SB TB pB UB qB VB WB c XB","16452":"YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB","194":"OB PB QB RB SB TB","1090":"pB UB","8196":"qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB"},E:{"1":"K L G mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC","514":"A B vB","8196":"C lB"},F:{"1":"YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB HC IC JC KC lB 1B LC mB","194":"BB CB DB EB FB GB HB IB","8196":"JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB"},G:{"1":"YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC","514":"TC UC VC","8196":"WC XC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"2049":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"uC vC wC xC nB yC zC","2":"I","8196":"oC pC qC rC sC vB tC"},Q:{"8196":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:2,C:"Payment Request API"};

var pdfViewer={A:{A:{"2":"J D E F A 3B","132":"B"},B:{"1":"G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","16":"C K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F B HC IC JC KC lB 1B LC"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"16":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"16":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:6,C:"Built-in PDF viewer"};

var permissionsApi={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB 5B 6B"},D:{"1":"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB"},E:{"1":"nB 0B GC","2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB"},F:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"Permissions API"};

var permissionsPolicy={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","258":"P Q R S T U","322":"V W","388":"X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB 5B 6B","258":"gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB","258":"UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U","322":"V W","388":"X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B 8B uB 9B AC BC CC vB","258":"C K L G lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB HC IC JC KC lB 1B LC mB","258":"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB","322":"eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC","258":"WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B lC mC","258":"H"},J:{"2":"D A"},K:{"2":"A B C lB 1B mB","258":"c"},L:{"388":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC","258":"rC sC vB tC uC vC wC xC nB yC zC"},Q:{"258":"0C"},R:{"388":"1C"},S:{"2":"2C"}},B:5,C:"Permissions Policy"};

var pictureInPicture={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB 5B 6B","132":"eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","1090":"ZB","1412":"dB","1668":"aB bB cB"},D:{"1":"cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB","2114":"bB"},E:{"1":"L G DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC","4100":"A B C K vB lB mB"},F:{"1":"fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","8196":"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB"},G:{"1":"dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC","4100":"RC SC TC UC VC WC XC YC ZC aC bC cC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"16388":"H"},M:{"16388":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:5,C:"Picture-in-Picture"};

var picture={A:{A:{"2":"J D E F A B 3B"},B:{"1":"K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C"},C:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","578":"5 6 7 8"},D:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 I p J D E F A B C K L G M N O q r s t u v w x y z","194":"8"},E:{"1":"A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u HC IC JC KC lB 1B LC mB","322":"v"},G:{"1":"SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Picture element"};

var ping={A:{A:{"2":"J D E F A B 3B"},B:{"1":"N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M"},C:{"2":"4B","194":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"194":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"194":"2C"}},B:1,C:"Ping attribute"};

var pngAlpha={A:{A:{"1":"D E F A B","2":"3B","8":"J"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"PNG alpha transparency"};

var pointerEvents={A:{A:{"1":"B","2":"J D E F A 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B","2":"4B oB 5B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","2":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:7,C:"CSS pointer-events (for HTML)"};

var pointer={A:{A:{"1":"B","2":"J D E F 3B","164":"A"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p 5B 6B","8":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB","328":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB"},D:{"1":"QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s","8":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB","584":"NB OB PB"},E:{"1":"K L G DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B","8":"D E F A B C AC BC CC vB lB","1096":"mB"},F:{"1":"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","8":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z","584":"AB BB CB"},G:{"1":"aC bC cC dC eC fC wB xB yB zB nB 0B","8":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC","6148":"ZC"},H:{"2":"gC"},I:{"1":"H","8":"oB I hC iC jC kC 2B lC mC"},J:{"8":"D A"},K:{"1":"c","2":"A","8":"B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","36":"A"},O:{"1":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"oC","8":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"328":"2C"}},B:2,C:"Pointer events"};

var pointerlock={A:{A:{"2":"J D E F A B 3B"},B:{"1":"K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C"},C:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K 5B 6B","33":"0 1 2 3 4 5 6 7 8 9 L G M N O q r s t u v w x y z AB BB"},D:{"1":"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G","33":"0 1 2 3 4 5 6 7 t u v w x y z","66":"M N O q r s"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","33":"G M N O q r s t u"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"Pointer Lock API"};

var portals={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T","322":"Z a d e f g h i j k l m n o b H","450":"U V W X Y"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB","194":"hB iB jB kB P Q R S T","322":"V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","450":"U"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB HC IC JC KC lB 1B LC mB","194":"VB WB c XB YB ZB aB bB cB dB eB","322":"fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"450":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"Portals"};

var prefersColorScheme={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB 5B 6B"},D:{"1":"iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB"},E:{"1":"K L G mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C 8B uB 9B AC BC CC vB lB"},F:{"1":"VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB HC IC JC KC lB 1B LC mB"},G:{"1":"ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"uC vC wC xC nB yC zC","2":"I oC pC qC rC sC vB tC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"prefers-color-scheme media query"};

var prefersReducedMotion={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB 5B 6B"},D:{"1":"gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC"},F:{"1":"c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB HC IC JC KC lB 1B LC mB"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"tC uC vC wC xC nB yC zC","2":"I oC pC qC rC sC vB"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"prefers-reduced-motion media query"};

var progress={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 1B LC mB","2":"F HC IC JC KC"},G:{"1":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC","132":"PC"},H:{"1":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"progress element"};

var promiseFinally={A:{A:{"2":"J D E F A B 3B"},B:{"1":"O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N"},C:{"1":"TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB 5B 6B"},D:{"1":"WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB"},E:{"1":"C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B 8B uB 9B AC BC CC vB"},F:{"1":"LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB HC IC JC KC lB 1B LC mB"},G:{"1":"WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC qC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:6,C:"Promise.prototype.finally"};

var promises={A:{A:{"8":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","4":"y z","8":"4B oB I p J D E F A B C K L G M N O q r s t u v w x 5B 6B"},D:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","4":"3","8":"0 1 2 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","8":"I p J D 8B uB 9B AC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","4":"q","8":"F B C G M N O HC IC JC KC lB 1B LC mB"},G:{"1":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","8":"uB MC 2B NC OC PC"},H:{"8":"gC"},I:{"1":"H mC","8":"oB I hC iC jC kC 2B lC"},J:{"8":"D A"},K:{"1":"c","8":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"8":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"Promises"};

var proximity={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"1":"2C"}},B:4,C:"Proximity API"};

var proxy={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N 5B 6B"},D:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"9 I p J D E F A B C K L G M N O AB BB CB DB EB FB GB HB IB JB","66":"0 1 2 3 4 5 6 7 8 q r s t u v w x y z"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC"},F:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 F B C w x y z HC IC JC KC lB 1B LC mB","66":"G M N O q r s t u v"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"Proxy object"};

var publickeypinning={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB","2":"0 1 2 3 4 5 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB","2":"0 1 2 3 4 5 6 7 8 I p J D E F A B C K L G M N O q r s t u v w x y z eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB","2":"F B C G M N O q YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","4":"u","16":"r s t v"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"I oC pC qC rC sC vB","2":"tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"2":"1C"},S:{"1":"2C"}},B:6,C:"HTTP Public Key Pinning"};

var pushApi={A:{A:{"2":"J D E F A B 3B"},B:{"1":"N O","2":"C K L G M","257":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB 5B 6B","257":"FB HB IB JB KB LB MB OB PB QB RB SB TB pB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","1281":"GB NB UB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB","257":"LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","388":"FB GB HB IB JB KB"},E:{"2":"I p J D E F 8B uB 9B AC BC","514":"A B C K L G CC vB lB mB DC EC FC wB xB yB zB","4100":"nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","16":"8 9 AB BB CB","257":"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"2":"1C"},S:{"257":"2C"}},B:5,C:"Push API"};

var queryselector={A:{A:{"1":"F A B","2":"3B","8":"J D","132":"E"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","8":"4B oB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC lB 1B LC mB","8":"F HC"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"querySelector/querySelectorAll"};

var readonlyAttr={A:{A:{"1":"J D E F A B","16":"3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","16":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L G M N O q r s t u v w"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"I p 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","16":"F HC","132":"B C IC JC KC lB 1B LC mB"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B NC OC"},H:{"1":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"D A"},K:{"1":"c","132":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"257":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"readonly attribute of input and textarea elements"};

var referrerPolicy={A:{A:{"2":"J D E F A 3B","132":"B"},B:{"1":"P Q R S","132":"C K L G M N O","513":"T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V","2":"0 1 2 3 4 5 6 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","513":"W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T","2":"I p J D E F A B C K L G M N O q r","260":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB","513":"U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"C lB mB","2":"I p J D 8B uB 9B AC","132":"E F A B BC CC vB","1025":"K L G DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB","2":"F B C HC IC JC KC lB 1B LC mB","513":"fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"XC YC ZC aC","2":"uB MC 2B NC OC PC","132":"E QC RC SC TC UC VC WC","1025":"bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"513":"H"},M:{"513":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"513":"1C"},S:{"1":"2C"}},B:4,C:"Referrer Policy"};

var registerprotocolhandler={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","129":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B"},D:{"2":"I p J D E F A B C","129":"0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"F B HC IC JC KC lB 1B","129":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D","129":"A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:1,C:"Custom protocol handling"};

var relNoopener={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB 5B 6B"},D:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC"},F:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:1,C:"rel=noopener"};

var relNoreferrer={A:{A:{"2":"J D E F A 3B","132":"B"},B:{"1":"K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","16":"C"},C:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L G"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB"},H:{"2":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Link type \"noreferrer\""};

var rellist={A:{A:{"2":"J D E F A B 3B"},B:{"1":"O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M","132":"N"},C:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB","132":"LB MB NB OB PB QB RB SB TB pB UB qB VB WB c"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E 8B uB 9B AC BC"},F:{"1":"NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","132":"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"sC vB tC uC vC wC xC nB yC zC","2":"I","132":"oC pC qC rC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"relList (DOMTokenList)"};

var rem={A:{A:{"1":"B","2":"J D E 3B","132":"F A"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B","2":"4B oB 5B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC mB","2":"F B HC IC JC KC lB 1B"},G:{"1":"E MC 2B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB","260":"NC"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"C c mB","2":"A B lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"rem (root em) units"};

var requestanimationframe={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","33":"B C K L G M N O q r s t","164":"I p J D E F A"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F","33":"t u","164":"O q r s","420":"A B C K L G M N"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B","33":"J"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC","33":"OC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"A","2":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"requestAnimationFrame"};

var requestidlecallback={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB 5B 6B","194":"OB PB"},D:{"1":"IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB"},E:{"2":"I p J D E F A B C K 8B uB 9B AC BC CC vB lB mB","322":"L G DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC","322":"cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"requestIdleCallback"};

var resizeobserver={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB 5B 6B"},D:{"1":"c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB","194":"PB QB RB SB TB pB UB qB VB WB"},E:{"1":"L G DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C 8B uB 9B AC BC CC vB lB mB","66":"K"},F:{"1":"NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB HC IC JC KC lB 1B LC mB","194":"CB DB EB FB GB HB IB JB KB LB MB"},G:{"1":"cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"sC vB tC uC vC wC xC nB yC zC","2":"I oC pC qC rC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"Resize Observer"};

var resourceTiming={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","194":"2 3 4 5"},D:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t u v"},E:{"1":"C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC vB","260":"B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"Resource Timing"};

var restParameters={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L 5B 6B"},D:{"1":"IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB","194":"FB GB HB"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC"},F:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","194":"2 3 4"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"Rest parameters"};

var rtcpeerconnection={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L","516":"G M N O"},C:{"1":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s 5B 6B","33":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB"},D:{"1":"RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t","33":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC vB"},F:{"1":"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D","130":"A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"33":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"33":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"WebRTC Peer-to-peer connections"};

var ruby={A:{A:{"4":"J D E F A B 3B"},B:{"4":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","8":"0 1 2 3 4 5 6 7 8 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"4":"0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","8":"I"},E:{"4":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","8":"I 8B uB"},F:{"4":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","8":"F B C HC IC JC KC lB 1B LC mB"},G:{"4":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","8":"uB MC 2B"},H:{"8":"gC"},I:{"4":"oB I H kC 2B lC mC","8":"hC iC jC"},J:{"4":"A","8":"D"},K:{"4":"c","8":"A B C lB 1B mB"},L:{"4":"H"},M:{"1":"b"},N:{"4":"A B"},O:{"4":"nC"},P:{"4":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"4":"0C"},R:{"4":"1C"},S:{"1":"2C"}},B:1,C:"Ruby annotation"};

var runIn={A:{A:{"1":"E F A B","2":"J D 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 I p J D E F A B C K L G M N O q r s t u v w x y z","2":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"p J 9B","2":"D E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"AC","129":"I 8B uB"},F:{"1":"F B C G M N O HC IC JC KC lB 1B LC mB","2":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"MC 2B NC OC PC","2":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","129":"uB"},H:{"1":"gC"},I:{"1":"oB I hC iC jC kC 2B lC","2":"H mC"},J:{"1":"D A"},K:{"1":"A B C lB 1B mB","2":"c"},L:{"2":"H"},M:{"2":"b"},N:{"1":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:4,C:"display: run-in"};

var sameSiteCookieAttribute={A:{A:{"2":"J D E F A 3B","388":"B"},B:{"1":"O P Q R S T U","2":"C K L G","129":"M N","513":"V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB 5B 6B"},D:{"1":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB","513":"Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"G EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B 8B uB 9B AC BC CC vB lB","2052":"L","3076":"C K mB DC"},F:{"1":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","513":"dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC","2052":"XC YC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"513":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"16":"0C"},R:{"513":"1C"},S:{"2":"2C"}},B:6,C:"'SameSite' cookie attribute"};

var screenOrientation={A:{A:{"2":"J D E F A 3B","164":"B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","36":"C K L G M N O"},C:{"1":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N 5B 6B","36":"0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB"},D:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A","36":"B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","16":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"Screen Orientation"};

var scriptAsync={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B","2":"4B oB 5B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB","132":"p"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B"},H:{"2":"gC"},I:{"1":"oB I H kC 2B lC mC","2":"hC iC jC"},J:{"1":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"async attribute for external scripts"};

var scriptDefer={A:{A:{"1":"A B","132":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB","257":"0 1 I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B"},H:{"2":"gC"},I:{"1":"oB I H kC 2B lC mC","2":"hC iC jC"},J:{"1":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"defer attribute for external scripts"};

var scrollintoview={A:{A:{"2":"J D 3B","132":"E F A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","132":"C K L G M N O"},C:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","132":"0 1 2 3 4 5 6 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","132":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB"},E:{"1":"nB 0B GC","2":"I p 8B uB","132":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB"},F:{"1":"JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F HC IC JC KC","16":"B lB 1B","132":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB LC mB"},G:{"1":"nB 0B","16":"uB MC 2B","132":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB"},H:{"2":"gC"},I:{"1":"H","16":"hC iC","132":"oB I jC kC 2B lC mC"},J:{"132":"D A"},K:{"1":"c","132":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"132":"A B"},O:{"1":"nC"},P:{"132":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"scrollIntoView"};

var scrollintoviewifneeded={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"I p 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B"},H:{"2":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:"Element.scrollIntoViewIfNeeded()"};

var sdch={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB","2":"pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB","2":"F B C fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:6,C:"SDCH Accept-Encoding/Content-Encoding"};

var selectionApi={A:{A:{"1":"F A B","16":"3B","260":"J D E"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","132":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB 5B 6B","2180":"EB FB GB HB IB JB KB LB MB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"I p 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","132":"F B C HC IC JC KC lB 1B LC mB"},G:{"16":"2B","132":"uB MC","516":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H lC mC","16":"oB I hC iC jC kC","1025":"2B"},J:{"1":"A","16":"D"},K:{"1":"c","16":"A B C lB 1B","132":"mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","16":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2180":"2C"}},B:5,C:"Selection API"};

var serverTiming={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB 5B 6B"},D:{"1":"XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB","196":"UB qB VB WB","324":"c"},E:{"2":"I p J D E F A B C 8B uB 9B AC BC CC vB lB","516":"K L G mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"Server Timing"};

var serviceworkers={A:{A:{"2":"J D E F A B 3B"},B:{"1":"N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L","322":"G M"},C:{"1":"FB HB IB JB KB LB MB OB PB QB RB SB TB pB qB VB WB c XB YB ZB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","194":"4 5 6 7 8 9 AB BB CB DB EB","513":"GB NB UB aB"},D:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB","4":"BB CB DB EB FB"},E:{"1":"C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B 8B uB 9B AC BC CC vB"},F:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v w x HC IC JC KC lB 1B LC mB","4":"0 1 2 y z"},G:{"1":"WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B lC mC","4":"H"},J:{"2":"D A"},K:{"2":"A B C lB 1B mB","4":"c"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:4,C:"Service Workers"};

var setimmediate={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O","2":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"1":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"Efficient Script Yielding: setImmediate()"};

var shadowdom={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P","2":"C K L G M N O Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"4B oB I p J D E F A B C K L G M N O q r s t u v w x y z qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","66":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB"},D:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P","2":"I p J D E F A B C K L G M N O q r s t u v Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","33":"0 1 2 3 4 5 w x y z"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB","2":"F B C ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","33":"G M N O q r s"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B","33":"lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC","2":"vC wC xC nB yC zC","33":"I"},Q:{"1":"0C"},R:{"2":"1C"},S:{"1":"2C"}},B:7,C:"Shadow DOM (deprecated V0 spec)"};

var shadowdomv1={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB 5B 6B","322":"TB","578":"pB UB qB VB"},D:{"1":"OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB"},E:{"1":"A B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC"},F:{"1":"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB HC IC JC KC lB 1B LC mB"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC","132":"TC UC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I","4":"oC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"Shadow DOM (V1)"};

var sharedarraybuffer={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z","2":"C K L G","194":"M N O","513":"a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB 5B 6B","194":"SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB","450":"gB hB iB jB kB","513":"P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB","194":"UB qB VB WB c XB YB ZB","513":"a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A 8B uB 9B AC BC CC","194":"B C K L G vB lB mB DC EC FC","513":"wB xB yB zB nB 0B GC"},F:{"1":"c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB HC IC JC KC lB 1B LC mB","194":"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC","194":"UC VC WC XC YC ZC aC bC cC dC eC fC","513":"wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"513":"H"},M:{"513":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"513":"1C"},S:{"2":"2C"}},B:6,C:"Shared Array Buffer"};

var sharedworkers={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"p J 9B nB 0B GC","2":"I D E F A B C K L G 8B uB AC BC CC vB lB mB DC EC FC wB xB yB zB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC lB 1B LC mB","2":"F HC IC JC"},G:{"1":"NC OC nB 0B","2":"E uB MC 2B PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"B C lB 1B mB","2":"c","16":"A"},L:{"2":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"I","2":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"1":"2C"}},B:1,C:"Shared Web Workers"};

var sni={A:{A:{"1":"F A B","2":"J 3B","132":"D E"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB"},H:{"1":"gC"},I:{"1":"oB I H kC 2B lC mC","2":"hC iC jC"},J:{"1":"A","2":"D"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"Server Name Indication"};

var spdy={A:{A:{"1":"B","2":"J D E F A 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB","2":"4B oB I p J D E F A B C MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB","2":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"E F A B C CC vB lB","2":"I p J D 8B uB 9B AC BC","129":"K L G mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB DB FB mB","2":"F B C BB CB EB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC"},G:{"1":"E QC RC SC TC UC VC WC XC","2":"uB MC 2B NC OC PC","257":"YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"oB I kC 2B lC mC","2":"H hC iC jC"},J:{"2":"D A"},K:{"1":"mB","2":"A B C c lB 1B"},L:{"2":"H"},M:{"2":"b"},N:{"1":"B","2":"A"},O:{"2":"nC"},P:{"1":"I","2":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"1":"2C"}},B:7,C:"SPDY protocol"};

var speechRecognition={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","1026":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"4B oB I p J D E F A B C K L G M N O q r s 5B 6B","322":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"2":"I p J D E F A B C K L G M N O q r s t u v","164":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L 8B uB 9B AC BC CC vB lB mB DC","2084":"G EC FC wB xB yB zB nB 0B GC"},F:{"2":"F B C G M N O q r s t u v w x HC IC JC KC lB 1B LC mB","1026":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC","2084":"eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"164":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"164":"nC"},P:{"164":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"164":"0C"},R:{"164":"1C"},S:{"322":"2C"}},B:7,C:"Speech Recognition API"};

var speechSynthesis={A:{A:{"2":"J D E F A B 3B"},B:{"1":"L G M N O","2":"C K","257":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","194":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB"},D:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB","2":"0 1 2 3 I p J D E F A B C K L G M N O q r s t u v w x y z","257":"QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"D E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B AC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB","2":"F B C G M N O q r s t u v w x HC IC JC KC lB 1B LC mB","257":"c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"2":"1C"},S:{"1":"2C"}},B:7,C:"Speech Synthesis API"};

var spellcheckAttribute={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC lB 1B LC mB","2":"F HC IC"},G:{"4":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"4":"gC"},I:{"4":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"A","4":"D"},K:{"4":"A B C c lB 1B mB"},L:{"4":"H"},M:{"4":"b"},N:{"4":"A B"},O:{"4":"nC"},P:{"4":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"4":"1C"},S:{"2":"2C"}},B:1,C:"Spellcheck attribute"};

var sqlStorage={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b","2":"C K L G M N O","129":"H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b","129":"H sB tB 7B"},E:{"1":"I p J D E F A B C 8B uB 9B AC BC CC vB lB mB","2":"K L G DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z JC KC lB 1B LC mB","2":"F HC IC","129":"a"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC","2":"ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"oB I hC iC jC kC 2B lC mC","129":"H"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"129":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:"Web SQL Database"};

var srcset={A:{A:{"2":"J D E F A B 3B"},B:{"1":"M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","260":"C","514":"K L G"},C:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","194":"3 4 5 6 7 8"},D:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 I p J D E F A B C K L G M N O q r s t u v w x y z","260":"5 6 7 8"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D 8B uB 9B AC","260":"E BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r HC IC JC KC lB 1B LC mB","260":"s t u v"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC","260":"E QC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Srcset and sizes attributes"};

var stream={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M 5B 6B","129":"7 8 9 AB BB CB","420":"0 1 2 3 4 5 6 N O q r s t u v w x y z"},D:{"1":"OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r","420":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC vB"},F:{"1":"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B G M N HC IC JC KC lB 1B LC","420":"0 1 2 3 4 5 6 7 8 9 C O q r s t u v w x y z AB mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC","513":"cC dC eC fC wB xB yB zB nB 0B","1537":"VC WC XC YC ZC aC bC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D","420":"A"},K:{"1":"c","2":"A B lB 1B","420":"C mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","420":"I oC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:4,C:"getUserMedia/Stream API"};

var streams={A:{A:{"2":"J D E F A 3B","130":"B"},B:{"1":"Y Z a d e f g h i j k l m n o b H","16":"C K","260":"L G","1028":"P Q R S T U V W X","5124":"M N O"},C:{"1":"n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB 5B 6B","5124":"l m","7172":"XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k","7746":"SB TB pB UB qB VB WB c"},D:{"1":"Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB","260":"NB OB PB QB RB SB TB","1028":"pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X"},E:{"2":"I p J D E F 8B uB 9B AC BC CC","1028":"G EC FC wB xB yB zB nB 0B GC","3076":"A B C K L vB lB mB DC"},F:{"1":"iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","260":"AB BB CB DB EB FB GB","1028":"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC","16":"TC","1028":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1028":"nC"},P:{"1":"xC nB yC zC","2":"I oC pC","1028":"qC rC sC vB tC uC vC wC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:1,C:"Streams"};

var stricttransportsecurity={A:{A:{"2":"J D E F A 3B","129":"B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"D E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B AC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F B HC IC JC KC lB 1B LC"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"Strict Transport Security"};

var styleScoped={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB","2":"4B oB I p J D E F A B C K L G M N O q r qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","322":"QB RB SB TB pB UB"},D:{"2":"8 9 I p J D E F A B C K L G M N O q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","194":"0 1 2 3 4 5 6 7 r s t u v w x y z"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"1":"2C"}},B:7,C:"Scoped CSS"};

var subresourceBundling={A:{A:{"2":"J D E F A B 3B"},B:{"1":"b H","2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"Subresource Loading with Web Bundles"};

var subresourceIntegrity={A:{A:{"2":"J D E F A B 3B"},B:{"1":"N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M"},C:{"1":"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB 5B 6B"},D:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC vB"},F:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC","194":"VC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"Subresource Integrity"};

var svgCss={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","516":"C K L G"},C:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","260":"I p J D E F A B C K L G M N O q r s t u"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","4":"I"},E:{"1":"p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B","132":"I uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","2":"F"},G:{"1":"E 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","132":"uB MC"},H:{"260":"gC"},I:{"1":"oB I H kC 2B lC mC","2":"hC iC jC"},J:{"1":"D A"},K:{"1":"c","260":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"SVG in CSS backgrounds"};

var svgFilters={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I","4":"p J D"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC"},H:{"1":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"A","2":"D"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"SVG filters"};

var svgFonts={A:{A:{"2":"F A B 3B","8":"J D E"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 I p J D E F A B C K L G M N O q r s t u v w x y z","2":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","130":"9 AB BB CB DB EB FB GB HB IB JB KB LB"},E:{"1":"I p J D E F A B C K L G uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B"},F:{"1":"F B C G M N O q r s t u v HC IC JC KC lB 1B LC mB","2":"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","130":"0 1 2 3 4 5 6 7 w x y z"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"258":"gC"},I:{"1":"oB I kC 2B lC mC","2":"H hC iC jC"},J:{"1":"D A"},K:{"1":"A B C lB 1B mB","2":"c"},L:{"130":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"I","130":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"130":"1C"},S:{"2":"2C"}},B:2,C:"SVG fonts"};

var svgFragment={A:{A:{"2":"J D E 3B","260":"F A B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L 5B 6B"},D:{"1":"LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z","132":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB"},E:{"1":"C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D F A B 8B uB 9B AC CC vB","132":"E BC"},F:{"1":"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"G M N O q r s t","4":"B C IC JC KC lB 1B LC","16":"F HC","132":"0 1 2 3 4 5 6 7 u v w x y z"},G:{"1":"WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC RC SC TC UC VC","132":"E QC"},H:{"1":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D","132":"A"},K:{"1":"c mB","4":"A B C lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","132":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"SVG fragment identifiers"};

var svgHtml={A:{A:{"2":"J D E 3B","388":"F A B"},B:{"4":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","260":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B","4":"oB"},D:{"4":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"8B uB","4":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"4":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"4":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B","4":"H lC mC"},J:{"1":"A","2":"D"},K:{"4":"A B C c lB 1B mB"},L:{"4":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"4":"nC"},P:{"4":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"4":"0C"},R:{"4":"1C"},S:{"1":"2C"}},B:2,C:"SVG effects for HTML"};

var svgHtml5={A:{A:{"2":"3B","8":"J D E","129":"F A B"},B:{"1":"N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","129":"C K L G M"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","8":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","8":"I p J"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","8":"I p 8B uB","129":"J D E 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC mB","2":"B KC lB 1B","8":"F HC IC JC"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","8":"uB MC 2B","129":"E NC OC PC QC"},H:{"1":"gC"},I:{"1":"H lC mC","2":"hC iC jC","129":"oB I kC 2B"},J:{"1":"A","129":"D"},K:{"1":"C c mB","8":"A B lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"129":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Inline SVG in HTML5"};

var svgImg={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","132":"I p J D E F A B C K L G M N O q r s t u v w x y"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B","4":"uB","132":"I p J D E 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","132":"E uB MC 2B NC OC PC QC"},H:{"1":"gC"},I:{"1":"H lC mC","2":"hC iC jC","132":"oB I kC 2B"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"SVG in HTML img element"};

var svgSmil={A:{A:{"2":"3B","8":"J D E F A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","8":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","8":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","4":"I"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","8":"8B uB","132":"I p 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","132":"uB MC 2B NC"},H:{"2":"gC"},I:{"1":"oB I H kC 2B lC mC","2":"hC iC jC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"8":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"SVG SMIL animation"};

var svg={A:{A:{"2":"3B","8":"J D E","772":"F A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","513":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","4":"4B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","4":"8B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"H lC mC","2":"hC iC jC","132":"oB I kC 2B"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"257":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"SVG (basic support)"};

var sxg={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB","132":"dB eB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"tC uC vC wC xC nB yC zC","2":"I oC pC qC rC sC vB"},Q:{"16":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:6,C:"Signed HTTP Exchanges (SXG)"};

var tabindexAttr={A:{A:{"1":"D E F A B","16":"J 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"16":"4B oB 5B 6B","129":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L"},E:{"16":"I p 8B uB","257":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","16":"F"},G:{"769":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"16":"gC"},I:{"16":"oB I H hC iC jC kC 2B lC mC"},J:{"16":"D A"},K:{"16":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"16":"A B"},O:{"1":"nC"},P:{"16":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"129":"2C"}},B:1,C:"tabindex global attribute"};

var templateLiterals={A:{A:{"2":"J D E F A B 3B"},B:{"1":"K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","16":"C"},C:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB"},E:{"1":"A B K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC","129":"C"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"RC SC TC UC VC WC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC","129":"XC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"ES6 Template Literals (Template Strings)"};

var template={A:{A:{"2":"J D E F A B 3B"},B:{"1":"G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C","388":"K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s 5B 6B"},D:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t u v w","132":"0 1 2 3 4 5 x y z"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D 8B uB 9B","388":"E BC","514":"AC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","132":"G M N O q r s"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC","388":"E QC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"HTML templates"};

var temporal={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:6,C:"Temporal"};

var testfeat={A:{A:{"2":"J D E A B 3B","16":"F"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","16":"I p"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"B C"},E:{"2":"I J 8B uB 9B","16":"p D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC 1B LC mB","16":"lB"},G:{"2":"uB MC 2B NC OC","16":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC kC 2B lC mC","16":"jC"},J:{"2":"A","16":"D"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"Test feature - updated"};

var textDecoration$1={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","2052":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"4B oB I p 5B 6B","1028":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","1060":"0 1 2 3 4 5 6 J D E F A B C K L G M N O q r s t u v w x y z"},D:{"2":"I p J D E F A B C K L G M N O q r s t u v w","226":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB","2052":"SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D 8B uB 9B AC","772":"K L G mB DC EC FC wB xB yB zB nB 0B GC","804":"E F A B C CC vB lB","1316":"BC"},F:{"2":"0 1 2 3 4 5 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","226":"6 7 8 9 AB BB CB DB EB","2052":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"uB MC 2B NC OC PC","292":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"2052":"H"},M:{"1028":"b"},N:{"2":"A B"},O:{"2052":"nC"},P:{"2":"I oC pC","2052":"qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2052":"1C"},S:{"1028":"2C"}},B:4,C:"text-decoration styling"};

var textEmphasis={A:{A:{"2":"J D E F A B 3B"},B:{"1":"k l m n o b H","2":"C K L G M N O","164":"P Q R S T U V W X Y Z a d e f g h i j"},C:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB 5B 6B","322":"GB"},D:{"1":"k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t u v","164":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j"},E:{"1":"E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B","164":"D AC"},F:{"1":"V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","164":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B","164":"lC mC"},J:{"2":"D","164":"A"},K:{"2":"A B C lB 1B mB","164":"c"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"164":"nC"},P:{"1":"zC","164":"I oC pC qC rC sC vB tC uC vC wC xC nB yC"},Q:{"164":"0C"},R:{"164":"1C"},S:{"1":"2C"}},B:4,C:"text-emphasis styling"};

var textOverflow={A:{A:{"1":"J D E F A B","2":"3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","8":"4B oB I p J 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 1B LC mB","33":"F HC IC JC KC"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"c mB","33":"A B C lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"CSS3 Text-overflow"};

var textSizeAdjust={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","33":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB","258":"x"},E:{"2":"I p J D E F A B C K L G 8B uB AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","258":"9B"},F:{"1":"EB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB FB HC IC JC KC lB 1B LC mB"},G:{"2":"uB MC 2B","33":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"33":"b"},N:{"161":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:"CSS text-size-adjust"};

var textStroke={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L","33":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","161":"G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB 5B 6B","161":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","450":"JB"},D:{"33":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"33":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"33":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","36":"uB"},H:{"2":"gC"},I:{"2":"oB","33":"I H hC iC jC kC 2B lC mC"},J:{"33":"D A"},K:{"2":"A B C lB 1B mB","33":"c"},L:{"33":"H"},M:{"161":"b"},N:{"2":"A B"},O:{"33":"nC"},P:{"33":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"33":"0C"},R:{"33":"1C"},S:{"161":"2C"}},B:7,C:"CSS text-stroke and text-fill"};

var textcontent={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"8B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","16":"F"},G:{"1":"E MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB"},H:{"1":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Node.textContent"};

var textencoder={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O 5B 6B","132":"q"},D:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u v HC IC JC KC lB 1B LC mB"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"TextEncoder & TextDecoder"};

var tls11={A:{A:{"1":"B","2":"J D 3B","66":"E F A"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB","2":"4B oB I p J D E F A B C K L G M N O q r s t 5B 6B","66":"u","129":"aB bB cB dB eB fB gB hB iB jB","388":"kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T","2":"I p J D E F A B C K L G M N O q r s","1540":"U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"D E F A B C K BC CC vB lB mB","2":"I p J 8B uB 9B AC","513":"L G DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB mB","2":"F B C HC IC JC KC lB 1B LC","1540":"fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B"},H:{"1":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"1":"A","2":"D"},K:{"1":"c mB","2":"A B C lB 1B"},L:{"1":"H"},M:{"129":"b"},N:{"1":"B","66":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"TLS 1.1"};

var tls12={A:{A:{"1":"B","2":"J D 3B","66":"E F A"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u 5B 6B","66":"v w x"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"D E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B AC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F G HC","66":"B C IC JC KC lB 1B LC mB"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B"},H:{"1":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"1":"A","2":"D"},K:{"1":"c mB","2":"A B C lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","66":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"TLS 1.2"};

var tls13={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB 5B 6B","132":"UB qB VB","450":"MB NB OB PB QB RB SB TB pB"},D:{"1":"cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB","706":"PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB"},E:{"1":"L G EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C 8B uB 9B AC BC CC vB lB","1028":"K mB DC"},F:{"1":"SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB HC IC JC KC lB 1B LC mB","706":"PB QB RB"},G:{"1":"YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"vB tC uC vC wC xC nB yC zC","2":"I oC pC qC rC sC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:6,C:"TLS 1.3"};

var touch={A:{A:{"2":"J D E F 3B","8":"A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","578":"C K L G M N O"},C:{"1":"O q r s t u v NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","4":"I p J D E F A B C K L G M N","194":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"1":"b"},N:{"8":"A","260":"B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:2,C:"Touch events"};

var transforms2d={A:{A:{"2":"3B","8":"J D E","129":"A B","161":"F"},B:{"1":"N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","129":"C K L G M"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB","33":"I p J D E F A B C K L G 5B 6B"},D:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","33":"0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","33":"I p J D E 8B uB 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F HC IC","33":"B C G M N O q r s t JC KC lB 1B LC"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","33":"E uB MC 2B NC OC PC QC"},H:{"2":"gC"},I:{"1":"H","33":"oB I hC iC jC kC 2B lC mC"},J:{"33":"D A"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS3 2D Transforms"};

var transforms3d={A:{A:{"2":"J D E F 3B","132":"A B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F 5B 6B","33":"A B C K L G"},D:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B","33":"0 1 2 3 4 5 6 C K L G M N O q r s t u v w x y z"},E:{"1":"xB yB zB nB 0B GC","2":"8B uB","33":"I p J D E 9B AC BC","257":"F A B C K L G CC vB lB mB DC EC FC wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","33":"G M N O q r s t"},G:{"1":"xB yB zB nB 0B","33":"E uB MC 2B NC OC PC QC","257":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB"},H:{"2":"gC"},I:{"1":"H","2":"hC iC jC","33":"oB I kC 2B lC mC"},J:{"33":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"132":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:5,C:"CSS3 3D Transforms"};

var trustedTypes={A:{A:{"2":"J D E F A B 3B"},B:{"1":"S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O P Q R"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"vC wC xC nB yC zC","2":"I oC pC qC rC sC vB tC uC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:"Trusted Types for DOM manipulation"};

var ttf={A:{A:{"2":"J D E 3B","132":"F A B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B oB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC lB 1B LC mB","2":"F HC"},G:{"1":"E 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC"},H:{"2":"gC"},I:{"1":"oB I H iC jC kC 2B lC mC","2":"hC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"132":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"TTF/OTF - TrueType and OpenType font support"};

var typedarrays={A:{A:{"1":"B","2":"J D E F 3B","132":"A"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB","260":"9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC mB","2":"F B HC IC JC KC lB 1B"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC","260":"2B"},H:{"1":"gC"},I:{"1":"I H kC 2B lC mC","2":"oB hC iC jC"},J:{"1":"A","2":"D"},K:{"1":"C c mB","2":"A B lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"132":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"Typed Arrays"};

var u2f={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","513":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB 5B 6B","322":"IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB"},D:{"2":"0 1 2 3 4 5 6 7 8 I p J D E F A B C K L G M N O q r s t u v w x y z sB tB 7B","130":"9 AB BB","513":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i","578":"j k l m n o b H"},E:{"1":"K L G DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C 8B uB 9B AC BC CC vB lB mB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB CB HC IC JC KC lB 1B LC mB","513":"BB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"322":"2C"}},B:7,C:"FIDO U2F API"};

var unhandledrejection={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB 5B 6B"},D:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC vB"},F:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC","16":"VC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:1,C:"unhandledrejection/rejectionhandled events"};

var upgradeinsecurerequests={A:{A:{"2":"J D E F A B 3B"},B:{"1":"N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M"},C:{"1":"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB 5B 6B"},D:{"1":"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC"},F:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"Upgrade Insecure Requests"};

var urlScrollToTextFragment={A:{A:{"2":"J D E F A B 3B"},B:{"1":"S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O","66":"P Q R"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB","66":"gB hB iB jB kB P Q"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB HC IC JC KC lB 1B LC mB","66":"YB ZB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"vC wC xC nB yC zC","2":"I oC pC qC rC sC vB tC uC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:"URL Scroll-To-Text Fragment"};

var url={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v w 5B 6B"},D:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t","130":"0 1 2 u v w x y z"},E:{"1":"E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B AC","130":"D"},F:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","130":"G M N O"},G:{"1":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC","130":"PC"},H:{"2":"gC"},I:{"1":"H mC","2":"oB I hC iC jC kC 2B","130":"lC"},J:{"2":"D","130":"A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"URL API"};

var urlsearchparams={A:{A:{"2":"J D E F A B 3B"},B:{"1":"N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M"},C:{"1":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","132":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB"},D:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB"},E:{"1":"B C K L G vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC"},F:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB"},G:{"1":"UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"URLSearchParams"};

var useStrict={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB","132":"p 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC mB","2":"F B HC IC JC KC lB 1B"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B"},H:{"1":"gC"},I:{"1":"oB I H kC 2B lC mC","2":"hC iC jC"},J:{"1":"D A"},K:{"1":"C c 1B mB","2":"A B lB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"ECMAScript 5 Strict Mode"};

var userSelectNone={A:{A:{"2":"J D E F 3B","33":"A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","33":"C K L G M N O"},C:{"1":"bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","33":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB 5B 6B"},D:{"1":"PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","33":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB"},E:{"1":"GC","33":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B"},F:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","33":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB"},G:{"33":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","33":"oB I hC iC jC kC 2B lC mC"},J:{"33":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"33":"A B"},O:{"1":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","33":"I oC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"33":"2C"}},B:5,C:"CSS user-select: none"};

var userTiming={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q r s t u v"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"User Timing API"};

var variableFonts={A:{A:{"2":"J D E F A B 3B"},B:{"1":"N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB 5B 6B","4609":"VB WB c XB YB ZB aB bB cB","4674":"qB","5698":"UB","7490":"OB PB QB RB SB","7746":"TB pB","8705":"dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB","4097":"YB","4290":"pB UB qB","6148":"VB WB c XB"},E:{"1":"G FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC vB","4609":"B C lB mB","8193":"K L DC EC"},F:{"1":"PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB HC IC JC KC lB 1B LC mB","4097":"OB","6148":"KB LB MB NB"},G:{"1":"ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC","4097":"VC WC XC YC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"4097":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"2":"I oC pC qC","4097":"rC sC vB tC uC vC wC xC nB yC zC"},Q:{"4097":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"Variable fonts"};

var vectorEffect={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC mB","2":"F B HC IC JC KC lB 1B"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B"},H:{"1":"gC"},I:{"1":"H lC mC","16":"oB I hC iC jC kC 2B"},J:{"16":"D A"},K:{"1":"C c mB","2":"A B lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"SVG vector-effect: non-scaling-stroke"};

var vibration={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A 5B 6B","33":"B C K L G"},D:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"A","2":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"Vibration API"};

var video={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB","260":"I p J D E F A B C K L G M N O q 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A 9B AC BC CC vB","2":"8B uB","513":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC lB 1B LC mB","2":"F HC IC"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC","513":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"oB I H jC kC 2B lC mC","132":"hC iC"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Video element"};

var videotracks={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O","322":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","194":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB","322":"GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J 8B uB 9B"},F:{"2":"0 1 2 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","322":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"322":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"322":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"322":"1C"},S:{"194":"2C"}},B:1,C:"Video Tracks"};

var viewportUnitVariants={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b","194":"H"},C:{"1":"m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k","194":"l m n o b H sB tB 7B"},E:{"1":"xB yB zB nB 0B GC","2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z HC IC JC KC lB 1B LC mB","194":"a"},G:{"1":"xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:5,C:"Large, Small, and Dynamic viewport units"};

var viewportUnits={A:{A:{"2":"J D E 3B","132":"F","260":"A B"},B:{"1":"M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","260":"C K L G"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N O q","260":"r s t u v w"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B","260":"J"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC","516":"PC","772":"OC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"A","2":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"260":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"Viewport units: vw, vh, vmin, vmax"};

var waiAria={A:{A:{"2":"J D 3B","4":"E F A B"},B:{"4":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"4":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"4":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"8B uB","4":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"F","4":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"4":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"4":"gC"},I:{"2":"oB I hC iC jC kC 2B","4":"H lC mC"},J:{"2":"D A"},K:{"4":"A B C c lB 1B mB"},L:{"4":"H"},M:{"4":"b"},N:{"4":"A B"},O:{"4":"nC"},P:{"4":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"4":"0C"},R:{"4":"1C"},S:{"4":"2C"}},B:2,C:"WAI-ARIA Accessibility features"};

var wakeLock={A:{A:{"2":"J D E F A B 3B"},B:{"1":"Z a d e f g h i j k l m n o b H","2":"C K L G M N O","194":"P Q R S T U V W X Y"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB","194":"dB eB fB gB hB iB jB kB P Q R S T"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB HC IC JC KC lB 1B LC mB","194":"TB UB VB WB c XB YB ZB aB bB cB dB eB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"wC xC nB yC zC","2":"I oC pC qC rC sC vB tC uC vC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:4,C:"Screen Wake Lock API"};

var wasm={A:{A:{"2":"J D E F A B 3B"},B:{"1":"M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L","578":"G"},C:{"1":"OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB 5B 6B","194":"IB JB KB LB MB","1025":"NB"},D:{"1":"SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB","322":"MB NB OB PB QB RB"},E:{"1":"B C K L G lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC vB"},F:{"1":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","322":"9 AB BB CB DB EB"},G:{"1":"VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"194":"2C"}},B:6,C:"WebAssembly"};

var wav={A:{A:{"2":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B oB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC lB 1B LC mB","2":"F HC IC"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","16":"A"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"Wav audio format"};

var wbrElement={A:{A:{"1":"J D 3B","2":"E F A B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"8B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","16":"F"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B"},H:{"1":"gC"},I:{"1":"oB I H jC kC 2B lC mC","16":"hC iC"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"wbr (word break opportunity) element"};

var webAnimation={A:{A:{"2":"J D E F A B 3B"},B:{"1":"T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O","260":"P Q R S"},C:{"1":"R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","260":"pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB","516":"IB JB KB LB MB NB OB PB QB RB SB TB","580":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB","2049":"hB iB jB kB P Q"},D:{"1":"T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z","132":"7 8 9","260":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S"},E:{"1":"G FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC vB","1090":"B C K lB mB","2049":"L DC EC"},F:{"1":"dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t HC IC JC KC lB 1B LC mB","132":"u v w","260":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC","1090":"VC WC XC YC ZC aC bC","2049":"cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"260":"nC"},P:{"260":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"260":"0C"},R:{"1":"1C"},S:{"516":"2C"}},B:5,C:"Web Animations API"};

var webAppManifest={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M","130":"N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","578":"iB jB kB P Q R rB S T U"},D:{"1":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC","260":"WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"Add to home screen (A2HS)"};

var webBluetooth={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","1025":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB","194":"GB HB IB JB KB LB MB NB","706":"OB PB QB","1025":"RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 F B C G M N O q r s t u v w x y z HC IC JC KC lB 1B LC mB","450":"7 8 9 AB","706":"BB CB DB","1025":"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B lC mC","1025":"H"},J:{"2":"D A"},K:{"2":"A B C lB 1B mB","1025":"c"},L:{"1025":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1025":"nC"},P:{"1":"pC qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC"},Q:{"2":"0C"},R:{"1025":"1C"},S:{"2":"2C"}},B:7,C:"Web Bluetooth"};

var webSerial={A:{A:{"2":"J D E F A B 3B"},B:{"1":"Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O","66":"P Q R S T U V W X"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB","66":"kB P Q R S T U V W X"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c HC IC JC KC lB 1B LC mB","66":"XB YB ZB aB bB cB dB eB fB gB hB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"Web Serial API"};

var webShare={A:{A:{"2":"J D E F A B 3B"},B:{"1":"g h i j k l m n o b H","2":"C K L G M N O P Q","516":"R S T U V W X Y Z a d e f"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X","130":"O q r s t u v","1028":"Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"L G EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C 8B uB 9B AC BC CC vB lB","2049":"K mB DC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC","2049":"YC ZC aC bC cC"},H:{"2":"gC"},I:{"2":"oB I hC iC jC kC 2B lC","258":"H mC"},J:{"2":"D A"},K:{"2":"A B C lB 1B mB","258":"c"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"rC sC vB tC uC vC wC xC nB yC zC","2":"I","258":"oC pC qC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:4,C:"Web Share API"};

var webauthn={A:{A:{"2":"J D E F A B 3B"},B:{"1":"O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C","226":"K L G M N"},C:{"1":"UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB 5B 6B"},D:{"1":"ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB"},E:{"1":"K L G DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F A B C 8B uB 9B AC BC CC vB lB","322":"mB"},F:{"1":"PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB HC IC JC KC lB 1B LC mB"},G:{"1":"eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC","578":"aC","2052":"dC","3076":"bC cC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"yC zC","2":"I oC pC qC rC sC vB tC uC vC wC xC nB"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:2,C:"Web Authentication API"};

var webcodecs={A:{A:{"2":"J D E F A B 3B"},B:{"1":"f g h i j k l m n o b H","2":"C K L G M N O P Q R S T U V W X Y Z a d e"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"yC zC","2":"I oC pC qC rC sC vB tC uC vC wC xC nB"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"WebCodecs API"};

var webgl={A:{A:{"2":"3B","8":"J D E F A","129":"B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","129":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","129":"I p J D E F A B C K L G M N O q r s t u"},D:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D","129":"0 1 2 3 E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"E F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB","129":"J D 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B HC IC JC KC lB 1B LC","129":"C G M N O mB"},G:{"1":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC PC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"1":"A","2":"D"},K:{"1":"C c mB","2":"A B lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"8":"A","129":"B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"129":"2C"}},B:6,C:"WebGL - 3D Canvas graphics"};

var webgl2={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v 5B 6B","194":"DB EB FB","450":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB","2242":"GB HB IB JB KB LB"},D:{"1":"RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB","578":"EB FB GB HB IB JB KB LB MB NB OB PB QB"},E:{"1":"G FC wB xB yB zB nB 0B GC","2":"I p J D E F A 8B uB 9B AC BC CC","1090":"B C K L vB lB mB DC EC"},F:{"1":"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB HC IC JC KC lB 1B LC mB"},G:{"1":"fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC","1090":"XC YC ZC aC bC cC dC eC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"qC rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC"},Q:{"578":"0C"},R:{"1":"1C"},S:{"2242":"2C"}},B:6,C:"WebGL 2.0"};

var webgpu={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P","578":"Q R S T U V W X Y Z a d e","1602":"f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB 5B 6B","194":"WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P","578":"Q R S T U V W X Y Z a d e","1602":"f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B 8B uB 9B AC BC CC vB","322":"C K L G lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB HC IC JC KC lB 1B LC mB","578":"fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"194":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:5,C:"WebGPU"};

var webhid={A:{A:{"2":"J D E F A B 3B"},B:{"1":"Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O","66":"P Q R S T U V W X"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB","66":"kB P Q R S T U V W X"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB HC IC JC KC lB 1B LC mB","66":"YB ZB aB bB cB dB eB fB gB hB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"WebHID API"};

var webkitUserDrag={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","132":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"16":"I p J D E F A B C K L G","132":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"F B C HC IC JC KC lB 1B LC mB","132":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"CSS -webkit-user-drag property"};

var webm={A:{A:{"2":"J D E 3B","520":"F A B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","8":"C K","388":"L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","132":"I p J D E F A B C K L G M N O q r s t u v w x y"},D:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p","132":"J D E F A B C K L G M N O q r s t u v"},E:{"1":"nB 0B GC","2":"8B","8":"I p uB 9B","520":"J D E F A B C AC BC CC vB lB","1028":"K mB DC","7172":"L","8196":"G EC FC wB xB yB zB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F HC IC JC","132":"B C G KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC","1028":"YC ZC aC bC cC","3076":"dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"hC iC","132":"oB I jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"8":"A B"},O:{"1":"nC"},P:{"1":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC","132":"I"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:6,C:"WebM video format"};

var webnfc={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O P Y Z a d e f g h i j k l m n o b H","450":"Q R S T U V W X"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Y Z a d e f g h i j k l m n o b H sB tB 7B","450":"Q R S T U V W X"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB HC IC JC KC lB 1B LC mB","450":"ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"257":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:"Web NFC"};

var webp={A:{A:{"2":"J D E F A B 3B"},B:{"1":"O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N"},C:{"1":"XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","8":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c"},D:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p","8":"J D E","132":"F A B C K L G M N O q r s t","260":"0 1 2 u v w x y z"},E:{"1":"nB 0B GC","2":"I p J D E F A B C K 8B uB 9B AC BC CC vB lB mB DC","516":"L G EC FC wB xB yB zB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F HC IC JC","8":"B KC","132":"lB 1B LC","260":"C G M N O mB"},G:{"1":"dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC"},H:{"1":"gC"},I:{"1":"H 2B lC mC","2":"oB hC iC jC","132":"I kC"},J:{"2":"D A"},K:{"1":"C c lB 1B mB","2":"A","132":"B"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"8":"2C"}},B:6,C:"WebP image format"};

var websockets={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB 5B 6B","132":"I p","292":"J D E F A"},D:{"1":"0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","132":"I p J D E F A B C K L","260":"G"},E:{"1":"D E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB","132":"p 9B","260":"J AC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F HC IC JC KC","132":"B C lB 1B LC"},G:{"1":"E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC","132":"2B NC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"A","129":"D"},K:{"1":"c mB","2":"A","132":"B C lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Web Sockets"};

var webtransport={A:{A:{"2":"J D E F A B 3B"},B:{"1":"j k l m n o b H","2":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z g h","66":"a d e f"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB HC IC JC KC lB 1B LC mB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"1":"zC","2":"I oC pC qC rC sC vB tC uC vC wC xC nB yC"},Q:{"16":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:5,C:"WebTransport"};

var webusb={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB","66":"PB QB RB SB TB pB UB"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB HC IC JC KC lB 1B LC mB","66":"CB DB EB FB GB HB IB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"1":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"rC sC vB tC uC vC wC xC nB yC zC","2":"I oC pC qC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"2":"2C"}},B:7,C:"WebUSB"};

var webvr={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L Q R S T U V W X Y Z a d e f g h i j k l m n o b H","66":"P","257":"G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB 5B 6B","129":"QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","194":"PB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","66":"SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P"},E:{"2":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","66":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C c lB 1B mB"},L:{"2":"H"},M:{"2":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"513":"I","516":"oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:7,C:"WebVR API"};

var webvtt={A:{A:{"1":"A B","2":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"4B oB I p J D E F A B C K L G M N O q r s t u 5B 6B","66":"0 1 v w x y z","129":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB","257":"QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I p J D E F A B C K L G M N"},E:{"1":"J D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B NC OC"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB I hC iC jC kC 2B"},J:{"1":"A","2":"D"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"B","2":"A"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"129":"2C"}},B:4,C:"WebVTT - Web Video Text Tracks"};

var webworkers={A:{A:{"1":"A B","2":"3B","8":"J D E F"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","8":"4B oB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","8":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC lB 1B LC mB","2":"F HC","8":"IC JC"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B"},H:{"2":"gC"},I:{"1":"H hC lC mC","2":"oB I iC jC kC 2B"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","8":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Web Workers"};

var webxr={A:{A:{"2":"J D E F A B 3B"},B:{"2":"C K L G M N O","132":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB 5B 6B","322":"jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c","66":"XB YB ZB aB bB cB dB eB fB gB hB iB jB kB","132":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"2":"I p J D E F A B C 8B uB 9B AC BC CC vB lB mB","578":"K L G DC EC FC wB xB yB zB nB 0B GC"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB HC IC JC KC lB 1B LC mB","66":"NB OB PB QB RB SB TB UB VB WB c XB","132":"YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a"},G:{"2":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"2":"gC"},I:{"2":"oB I H hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"2":"A B C lB 1B mB","132":"c"},L:{"132":"H"},M:{"322":"b"},N:{"2":"A B"},O:{"2":"nC"},P:{"2":"I oC pC qC rC sC vB tC","132":"uC vC wC xC nB yC zC"},Q:{"2":"0C"},R:{"2":"1C"},S:{"2":"2C"}},B:4,C:"WebXR Device API"};

var willChange={A:{A:{"2":"J D E F A B 3B"},B:{"1":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K L G M N O"},C:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B","194":"0 1 2 3 4 5 6"},D:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t u HC IC JC KC lB 1B LC mB"},G:{"1":"SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS will-change property"};

var woff={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B","2":"4B oB 5B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"I"},E:{"1":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I p 8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 1B LC mB","2":"F B HC IC JC KC"},G:{"1":"E NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B"},H:{"2":"gC"},I:{"1":"H lC mC","2":"oB hC iC jC kC 2B","130":"I"},J:{"1":"D A"},K:{"1":"B C c lB 1B mB","2":"A"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"WOFF - Web Open Font Format"};

var woff2={A:{A:{"2":"J D E F A B 3B"},B:{"1":"L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","2":"C K"},C:{"1":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z 5B 6B"},D:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","2":"0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"C K L G mB DC EC FC wB xB yB zB nB 0B GC","2":"I p J D E F 8B uB 9B AC BC CC","132":"A B vB lB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C G M N O q r s t HC IC JC KC lB 1B LC mB"},G:{"1":"TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"E uB MC 2B NC OC PC QC RC SC"},H:{"2":"gC"},I:{"1":"H","2":"oB I hC iC jC kC 2B lC mC"},J:{"2":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"2":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:2,C:"WOFF 2.0 - Web Open Font Format"};

var wordBreak={A:{A:{"1":"J D E F A B 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB I p J D E F A B C K L 5B 6B"},D:{"1":"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","4":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB"},E:{"1":"F A B C K L G CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","4":"I p J D E 8B uB 9B AC BC"},F:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","2":"F B C HC IC JC KC lB 1B LC mB","4":"0 1 G M N O q r s t u v w x y z"},G:{"1":"RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","4":"E uB MC 2B NC OC PC QC"},H:{"2":"gC"},I:{"1":"H","4":"oB I hC iC jC kC 2B lC mC"},J:{"4":"D A"},K:{"1":"c","2":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"4":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"CSS3 word-break"};

var wordwrap={A:{A:{"4":"J D E F A B 3B"},B:{"1":"O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H","4":"C K L G M N"},C:{"1":"KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB","4":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","4":"I p J D E F A B C K L G M N O q r s t"},E:{"1":"D E F A B C K L G AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","4":"I p J 8B uB 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F HC IC","4":"B C JC KC lB 1B LC"},G:{"1":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","4":"uB MC 2B NC OC"},H:{"4":"gC"},I:{"1":"H lC mC","4":"oB I hC iC jC kC 2B"},J:{"1":"A","4":"D"},K:{"1":"c","4":"A B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"4":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"4":"2C"}},B:4,C:"CSS3 Overflow-wrap"};

var xDocMessaging={A:{A:{"2":"J D 3B","132":"E F","260":"A B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B","2":"4B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"8B uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB","2":"F"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"4":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"Cross-document messaging"};

var xFrameOptions={A:{A:{"1":"E F A B","2":"J D 3B"},B:{"1":"C K L G M N O","4":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB","4":"I p J D E F A B C K L G M N cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","16":"4B oB 5B 6B"},D:{"4":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J D E F A B C K L G M N O q r s t u v w"},E:{"4":"J D E F A B C K L G 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","16":"I p 8B uB"},F:{"4":"0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC mB","16":"F B HC IC JC KC lB 1B"},G:{"4":"E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","16":"uB MC 2B NC OC"},H:{"2":"gC"},I:{"4":"I H kC 2B lC mC","16":"oB hC iC jC"},J:{"4":"D A"},K:{"4":"c mB","16":"A B C lB 1B"},L:{"4":"H"},M:{"4":"b"},N:{"1":"A B"},O:{"4":"nC"},P:{"4":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"4":"0C"},R:{"4":"1C"},S:{"1":"2C"}},B:6,C:"X-Frame-Options HTTP header"};

var xhr2={A:{A:{"2":"J D E F 3B","132":"A B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","2":"4B oB","260":"A B","388":"J D E F","900":"I p 5B 6B"},D:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","16":"I p J","132":"0 1","388":"D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","2":"I 8B uB","132":"D AC","388":"p J 9B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB","2":"F B HC IC JC KC lB 1B LC","132":"G M N"},G:{"1":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","2":"uB MC 2B","132":"PC","388":"NC OC"},H:{"2":"gC"},I:{"1":"H mC","2":"hC iC jC","388":"lC","900":"oB I kC 2B"},J:{"132":"A","388":"D"},K:{"1":"C c mB","2":"A B lB 1B"},L:{"1":"H"},M:{"1":"b"},N:{"132":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"XMLHttpRequest advanced features"};

var xhtml={A:{A:{"1":"F A B","2":"J D E 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"1":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"1":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"1":"gC"},I:{"1":"oB I H hC iC jC kC 2B lC mC"},J:{"1":"D A"},K:{"1":"A B C c lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:1,C:"XHTML served as application/xhtml+xml"};

var xhtmlsmil={A:{A:{"2":"F A B 3B","4":"J D E"},B:{"2":"C K L G M N O","8":"P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"8":"0 1 2 3 4 5 6 7 8 9 4B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 5B 6B"},D:{"8":"0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B"},E:{"8":"I p J D E F A B C K L G 8B uB 9B AC BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC"},F:{"8":"0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a HC IC JC KC lB 1B LC mB"},G:{"8":"E uB MC 2B NC OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B"},H:{"8":"gC"},I:{"8":"oB I H hC iC jC kC 2B lC mC"},J:{"8":"D A"},K:{"8":"A B C c lB 1B mB"},L:{"8":"H"},M:{"8":"b"},N:{"2":"A B"},O:{"8":"nC"},P:{"8":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"8":"0C"},R:{"8":"1C"},S:{"8":"2C"}},B:7,C:"XHTML+SMIL animation"};

var xmlSerializer={A:{A:{"1":"A B","260":"J D E F 3B"},B:{"1":"C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB","132":"B","260":"4B oB I p J D 5B 6B","516":"E F A"},D:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B","132":"0 1 I p J D E F A B C K L G M N O q r s t u v w x y z"},E:{"1":"E F A B C K L G BC CC vB lB mB DC EC FC wB xB yB zB nB 0B GC","132":"I p J D 8B uB 9B AC"},F:{"1":"0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a","16":"F HC","132":"B C G M N IC JC KC lB 1B LC mB"},G:{"1":"E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC wB xB yB zB nB 0B","132":"uB MC 2B NC OC PC"},H:{"132":"gC"},I:{"1":"H lC mC","132":"oB I hC iC jC kC 2B"},J:{"132":"D A"},K:{"1":"c","16":"A","132":"B C lB 1B mB"},L:{"1":"H"},M:{"1":"b"},N:{"1":"A B"},O:{"1":"nC"},P:{"1":"I oC pC qC rC sC vB tC uC vC wC xC nB yC zC"},Q:{"1":"0C"},R:{"1":"1C"},S:{"1":"2C"}},B:4,C:"DOM Parsing and Serialization"};

var features={"aac":aac,"abortcontroller":abortcontroller,"ac3-ec3":ac3Ec3,"accelerometer":accelerometer,"addeventlistener":addeventlistener,"alternate-stylesheet":alternateStylesheet,"ambient-light":ambientLight,"apng":apng,"array-find-index":arrayFindIndex,"array-find":arrayFind,"array-flat":arrayFlat,"array-includes":arrayIncludes,"arrow-functions":arrowFunctions,"asmjs":asmjs,"async-clipboard":asyncClipboard,"async-functions":asyncFunctions,"atob-btoa":atobBtoa,"audio-api":audioApi,"audio":audio,"audiotracks":audiotracks,"autofocus":autofocus,"auxclick":auxclick,"av1":av1,"avif":avif,"background-attachment":backgroundAttachment,"background-clip-text":backgroundClipText,"background-img-opts":backgroundImgOpts,"background-position-x-y":backgroundPositionXY,"background-repeat-round-space":backgroundRepeatRoundSpace,"background-sync":backgroundSync,"battery-status":batteryStatus,"beacon":beacon,"beforeafterprint":beforeafterprint,"bigint":bigint,"blobbuilder":blobbuilder,"bloburls":bloburls,"border-image":borderImage$1,"border-radius":borderRadius$1,"broadcastchannel":broadcastchannel,"brotli":brotli,"calc":calc,"canvas-blending":canvasBlending,"canvas-text":canvasText,"canvas":canvas,"ch-unit":chUnit,"chacha20-poly1305":chacha20Poly1305,"channel-messaging":channelMessaging,"childnode-remove":childnodeRemove,"classlist":classlist,"client-hints-dpr-width-viewport":clientHintsDprWidthViewport,"clipboard":clipboard,"colr-v1":colrV1,"colr":colr,"comparedocumentposition":comparedocumentposition,"console-basic":consoleBasic,"console-time":consoleTime,"const":_const,"constraint-validation":constraintValidation,"contenteditable":contenteditable,"contentsecuritypolicy":contentsecuritypolicy,"contentsecuritypolicy2":contentsecuritypolicy2,"cookie-store-api":cookieStoreApi,"cors":cors,"createimagebitmap":createimagebitmap,"credential-management":credentialManagement,"cryptography":cryptography,"css-all":cssAll,"css-animation":cssAnimation,"css-any-link":cssAnyLink,"css-appearance":cssAppearance,"css-at-counter-style":cssAtCounterStyle,"css-autofill":cssAutofill,"css-backdrop-filter":cssBackdropFilter,"css-background-offsets":cssBackgroundOffsets,"css-backgroundblendmode":cssBackgroundblendmode,"css-boxdecorationbreak":cssBoxdecorationbreak,"css-boxshadow":cssBoxshadow,"css-canvas":cssCanvas,"css-caret-color":cssCaretColor,"css-cascade-layers":cssCascadeLayers,"css-case-insensitive":cssCaseInsensitive,"css-clip-path":cssClipPath,"css-color-adjust":cssColorAdjust,"css-color-function":cssColorFunction,"css-conic-gradients":cssConicGradients,"css-container-queries":cssContainerQueries,"css-container-query-units":cssContainerQueryUnits,"css-containment":cssContainment,"css-content-visibility":cssContentVisibility,"css-counters":cssCounters,"css-crisp-edges":cssCrispEdges,"css-cross-fade":cssCrossFade,"css-default-pseudo":cssDefaultPseudo,"css-descendant-gtgt":cssDescendantGtgt,"css-deviceadaptation":cssDeviceadaptation,"css-dir-pseudo":cssDirPseudo,"css-display-contents":cssDisplayContents,"css-element-function":cssElementFunction,"css-env-function":cssEnvFunction,"css-exclusions":cssExclusions,"css-featurequeries":cssFeaturequeries,"css-file-selector-button":cssFileSelectorButton,"css-filter-function":cssFilterFunction,"css-filters":cssFilters,"css-first-letter":cssFirstLetter,"css-first-line":cssFirstLine,"css-fixed":cssFixed,"css-focus-visible":cssFocusVisible,"css-focus-within":cssFocusWithin,"css-font-palette":cssFontPalette,"css-font-rendering-controls":cssFontRenderingControls,"css-font-stretch":cssFontStretch,"css-gencontent":cssGencontent,"css-gradients":cssGradients,"css-grid-animation":cssGridAnimation,"css-grid":cssGrid,"css-hanging-punctuation":cssHangingPunctuation,"css-has":cssHas,"css-hyphens":cssHyphens,"css-image-orientation":cssImageOrientation,"css-image-set":cssImageSet,"css-in-out-of-range":cssInOutOfRange,"css-indeterminate-pseudo":cssIndeterminatePseudo,"css-initial-letter":cssInitialLetter,"css-initial-value":cssInitialValue,"css-lch-lab":cssLchLab,"css-letter-spacing":cssLetterSpacing,"css-line-clamp":cssLineClamp,"css-logical-props":cssLogicalProps,"css-marker-pseudo":cssMarkerPseudo,"css-masks":cssMasks,"css-matches-pseudo":cssMatchesPseudo,"css-math-functions":cssMathFunctions,"css-media-interaction":cssMediaInteraction,"css-media-range-syntax":cssMediaRangeSyntax,"css-media-resolution":cssMediaResolution,"css-media-scripting":cssMediaScripting,"css-mediaqueries":cssMediaqueries,"css-mixblendmode":cssMixblendmode,"css-motion-paths":cssMotionPaths,"css-namespaces":cssNamespaces,"css-nesting":cssNesting,"css-not-sel-list":cssNotSelList,"css-nth-child-of":cssNthChildOf,"css-opacity":cssOpacity,"css-optional-pseudo":cssOptionalPseudo,"css-overflow-anchor":cssOverflowAnchor,"css-overflow-overlay":cssOverflowOverlay,"css-overflow":cssOverflow,"css-overscroll-behavior":cssOverscrollBehavior,"css-page-break":cssPageBreak,"css-paged-media":cssPagedMedia,"css-paint-api":cssPaintApi,"css-placeholder-shown":cssPlaceholderShown,"css-placeholder":cssPlaceholder,"css-print-color-adjust":cssPrintColorAdjust,"css-read-only-write":cssReadOnlyWrite,"css-rebeccapurple":cssRebeccapurple,"css-reflections":cssReflections,"css-regions":cssRegions,"css-repeating-gradients":cssRepeatingGradients,"css-resize":cssResize,"css-revert-value":cssRevertValue,"css-rrggbbaa":cssRrggbbaa,"css-scroll-behavior":cssScrollBehavior,"css-scroll-timeline":cssScrollTimeline,"css-scrollbar":cssScrollbar,"css-sel2":cssSel2,"css-sel3":cssSel3,"css-selection":cssSelection,"css-shapes":cssShapes,"css-snappoints":cssSnappoints,"css-sticky":cssSticky,"css-subgrid":cssSubgrid,"css-supports-api":cssSupportsApi,"css-table":cssTable,"css-text-align-last":cssTextAlignLast,"css-text-indent":cssTextIndent,"css-text-justify":cssTextJustify,"css-text-orientation":cssTextOrientation,"css-text-spacing":cssTextSpacing,"css-textshadow":cssTextshadow,"css-touch-action":cssTouchAction,"css-transitions":cssTransitions,"css-unicode-bidi":cssUnicodeBidi,"css-unset-value":cssUnsetValue,"css-variables":cssVariables,"css-when-else":cssWhenElse,"css-widows-orphans":cssWidowsOrphans,"css-width-stretch":cssWidthStretch,"css-writing-mode":cssWritingMode,"css-zoom":cssZoom,"css3-attr":css3Attr,"css3-boxsizing":css3Boxsizing,"css3-colors":css3Colors,"css3-cursors-grab":css3CursorsGrab,"css3-cursors-newer":css3CursorsNewer,"css3-cursors":css3Cursors,"css3-tabsize":css3Tabsize,"currentcolor":currentcolor,"custom-elements":customElements,"custom-elementsv1":customElementsv1,"customevent":customevent,"datalist":datalist,"dataset":dataset,"datauri":datauri,"date-tolocaledatestring":dateTolocaledatestring,"declarative-shadow-dom":declarativeShadowDom,"decorators":decorators,"details":details,"deviceorientation":deviceorientation,"devicepixelratio":devicepixelratio,"dialog":dialog,"dispatchevent":dispatchevent,"dnssec":dnssec,"do-not-track":doNotTrack,"document-currentscript":documentCurrentscript,"document-evaluate-xpath":documentEvaluateXpath,"document-execcommand":documentExeccommand,"document-policy":documentPolicy,"document-scrollingelement":documentScrollingelement,"documenthead":documenthead,"dom-manip-convenience":domManipConvenience,"dom-range":domRange,"domcontentloaded":domcontentloaded,"dommatrix":dommatrix,"download":download,"dragndrop":dragndrop,"element-closest":elementClosest,"element-from-point":elementFromPoint,"element-scroll-methods":elementScrollMethods,"eme":eme,"eot":eot,"es5":es5,"es6-class":es6Class,"es6-generators":es6Generators,"es6-module-dynamic-import":es6ModuleDynamicImport,"es6-module":es6Module,"es6-number":es6Number,"es6-string-includes":es6StringIncludes,"es6":es6,"eventsource":eventsource,"extended-system-fonts":extendedSystemFonts,"feature-policy":featurePolicy,"fetch":fetch,"fieldset-disabled":fieldsetDisabled,"fileapi":fileapi,"filereader":filereader,"filereadersync":filereadersync,"filesystem":filesystem,"flac":flac,"flexbox-gap":flexboxGap,"flexbox":flexbox,"flow-root":flowRoot,"focusin-focusout-events":focusinFocusoutEvents,"font-family-system-ui":fontFamilySystemUi,"font-feature":fontFeature,"font-kerning":fontKerning,"font-loading":fontLoading,"font-size-adjust":fontSizeAdjust,"font-smooth":fontSmooth,"font-unicode-range":fontUnicodeRange,"font-variant-alternates":fontVariantAlternates,"font-variant-numeric":fontVariantNumeric,"fontface":fontface,"form-attribute":formAttribute,"form-submit-attributes":formSubmitAttributes,"form-validation":formValidation,"forms":forms,"fullscreen":fullscreen$1,"gamepad":gamepad,"geolocation":geolocation,"getboundingclientrect":getboundingclientrect,"getcomputedstyle":getcomputedstyle,"getelementsbyclassname":getelementsbyclassname,"getrandomvalues":getrandomvalues,"gyroscope":gyroscope,"hardwareconcurrency":hardwareconcurrency,"hashchange":hashchange,"heif":heif,"hevc":hevc,"hidden":hidden,"high-resolution-time":highResolutionTime,"history":history,"html-media-capture":htmlMediaCapture,"html5semantic":html5semantic,"http-live-streaming":httpLiveStreaming,"http2":http2,"http3":http3,"iframe-sandbox":iframeSandbox,"iframe-seamless":iframeSeamless,"iframe-srcdoc":iframeSrcdoc,"imagecapture":imagecapture,"ime":ime,"img-naturalwidth-naturalheight":imgNaturalwidthNaturalheight,"import-maps":importMaps,"imports":imports,"indeterminate-checkbox":indeterminateCheckbox,"indexeddb":indexeddb,"indexeddb2":indexeddb2,"inline-block":inlineBlock,"innertext":innertext,"input-autocomplete-onoff":inputAutocompleteOnoff,"input-color":inputColor,"input-datetime":inputDatetime,"input-email-tel-url":inputEmailTelUrl,"input-event":inputEvent,"input-file-accept":inputFileAccept,"input-file-directory":inputFileDirectory,"input-file-multiple":inputFileMultiple,"input-inputmode":inputInputmode,"input-minlength":inputMinlength,"input-number":inputNumber,"input-pattern":inputPattern,"input-placeholder":inputPlaceholder,"input-range":inputRange,"input-search":inputSearch,"input-selection":inputSelection,"insert-adjacent":insertAdjacent,"insertadjacenthtml":insertadjacenthtml,"internationalization":internationalization,"intersectionobserver-v2":intersectionobserverV2,"intersectionobserver":intersectionobserver,"intl-pluralrules":intlPluralrules,"intrinsic-width":intrinsicWidth,"jpeg2000":jpeg2000,"jpegxl":jpegxl,"jpegxr":jpegxr,"js-regexp-lookbehind":jsRegexpLookbehind,"json":json,"justify-content-space-evenly":justifyContentSpaceEvenly,"kerning-pairs-ligatures":kerningPairsLigatures,"keyboardevent-charcode":keyboardeventCharcode,"keyboardevent-code":keyboardeventCode,"keyboardevent-getmodifierstate":keyboardeventGetmodifierstate,"keyboardevent-key":keyboardeventKey,"keyboardevent-location":keyboardeventLocation,"keyboardevent-which":keyboardeventWhich,"lazyload":lazyload,"let":_let,"link-icon-png":linkIconPng,"link-icon-svg":linkIconSvg,"link-rel-dns-prefetch":linkRelDnsPrefetch,"link-rel-modulepreload":linkRelModulepreload,"link-rel-preconnect":linkRelPreconnect,"link-rel-prefetch":linkRelPrefetch,"link-rel-preload":linkRelPreload,"link-rel-prerender":linkRelPrerender,"loading-lazy-attr":loadingLazyAttr,"localecompare":localecompare,"magnetometer":magnetometer,"matchesselector":matchesselector,"matchmedia":matchmedia,"mathml":mathml,"maxlength":maxlength,"mdn-css-unicode-bidi-isolate-override":mdnCssUnicodeBidiIsolateOverride,"mdn-css-unicode-bidi-isolate":mdnCssUnicodeBidiIsolate,"mdn-css-unicode-bidi-plaintext":mdnCssUnicodeBidiPlaintext,"mdn-text-decoration-color":mdnTextDecorationColor,"mdn-text-decoration-line":mdnTextDecorationLine,"mdn-text-decoration-shorthand":mdnTextDecorationShorthand,"mdn-text-decoration-style":mdnTextDecorationStyle,"media-fragments":mediaFragments,"mediacapture-fromelement":mediacaptureFromelement,"mediarecorder":mediarecorder,"mediasource":mediasource,"menu":menu,"meta-theme-color":metaThemeColor,"meter":meter,"midi":midi,"minmaxwh":minmaxwh,"mp3":mp3,"mpeg-dash":mpegDash,"mpeg4":mpeg4,"multibackgrounds":multibackgrounds,"multicolumn":multicolumn,"mutation-events":mutationEvents,"mutationobserver":mutationobserver,"namevalue-storage":namevalueStorage,"native-filesystem-api":nativeFilesystemApi,"nav-timing":navTiming,"netinfo":netinfo,"notifications":notifications,"object-entries":objectEntries,"object-fit":objectFit,"object-observe":objectObserve,"object-values":objectValues,"objectrtc":objectrtc,"offline-apps":offlineApps,"offscreencanvas":offscreencanvas,"ogg-vorbis":oggVorbis,"ogv":ogv,"ol-reversed":olReversed,"once-event-listener":onceEventListener,"online-status":onlineStatus,"opus":opus,"orientation-sensor":orientationSensor,"outline":outline,"pad-start-end":padStartEnd,"page-transition-events":pageTransitionEvents,"pagevisibility":pagevisibility,"passive-event-listener":passiveEventListener,"passwordrules":passwordrules,"path2d":path2d,"payment-request":paymentRequest,"pdf-viewer":pdfViewer,"permissions-api":permissionsApi,"permissions-policy":permissionsPolicy,"picture-in-picture":pictureInPicture,"picture":picture,"ping":ping,"png-alpha":pngAlpha,"pointer-events":pointerEvents,"pointer":pointer,"pointerlock":pointerlock,"portals":portals,"prefers-color-scheme":prefersColorScheme,"prefers-reduced-motion":prefersReducedMotion,"progress":progress,"promise-finally":promiseFinally,"promises":promises,"proximity":proximity,"proxy":proxy,"publickeypinning":publickeypinning,"push-api":pushApi,"queryselector":queryselector,"readonly-attr":readonlyAttr,"referrer-policy":referrerPolicy,"registerprotocolhandler":registerprotocolhandler,"rel-noopener":relNoopener,"rel-noreferrer":relNoreferrer,"rellist":rellist,"rem":rem,"requestanimationframe":requestanimationframe,"requestidlecallback":requestidlecallback,"resizeobserver":resizeobserver,"resource-timing":resourceTiming,"rest-parameters":restParameters,"rtcpeerconnection":rtcpeerconnection,"ruby":ruby,"run-in":runIn,"same-site-cookie-attribute":sameSiteCookieAttribute,"screen-orientation":screenOrientation,"script-async":scriptAsync,"script-defer":scriptDefer,"scrollintoview":scrollintoview,"scrollintoviewifneeded":scrollintoviewifneeded,"sdch":sdch,"selection-api":selectionApi,"server-timing":serverTiming,"serviceworkers":serviceworkers,"setimmediate":setimmediate,"shadowdom":shadowdom,"shadowdomv1":shadowdomv1,"sharedarraybuffer":sharedarraybuffer,"sharedworkers":sharedworkers,"sni":sni,"spdy":spdy,"speech-recognition":speechRecognition,"speech-synthesis":speechSynthesis,"spellcheck-attribute":spellcheckAttribute,"sql-storage":sqlStorage,"srcset":srcset,"stream":stream,"streams":streams,"stricttransportsecurity":stricttransportsecurity,"style-scoped":styleScoped,"subresource-bundling":subresourceBundling,"subresource-integrity":subresourceIntegrity,"svg-css":svgCss,"svg-filters":svgFilters,"svg-fonts":svgFonts,"svg-fragment":svgFragment,"svg-html":svgHtml,"svg-html5":svgHtml5,"svg-img":svgImg,"svg-smil":svgSmil,"svg":svg,"sxg":sxg,"tabindex-attr":tabindexAttr,"template-literals":templateLiterals,"template":template,"temporal":temporal,"testfeat":testfeat,"text-decoration":textDecoration$1,"text-emphasis":textEmphasis,"text-overflow":textOverflow,"text-size-adjust":textSizeAdjust,"text-stroke":textStroke,"textcontent":textcontent,"textencoder":textencoder,"tls1-1":tls11,"tls1-2":tls12,"tls1-3":tls13,"touch":touch,"transforms2d":transforms2d,"transforms3d":transforms3d,"trusted-types":trustedTypes,"ttf":ttf,"typedarrays":typedarrays,"u2f":u2f,"unhandledrejection":unhandledrejection,"upgradeinsecurerequests":upgradeinsecurerequests,"url-scroll-to-text-fragment":urlScrollToTextFragment,"url":url,"urlsearchparams":urlsearchparams,"use-strict":useStrict,"user-select-none":userSelectNone,"user-timing":userTiming,"variable-fonts":variableFonts,"vector-effect":vectorEffect,"vibration":vibration,"video":video,"videotracks":videotracks,"viewport-unit-variants":viewportUnitVariants,"viewport-units":viewportUnits,"wai-aria":waiAria,"wake-lock":wakeLock,"wasm":wasm,"wav":wav,"wbr-element":wbrElement,"web-animation":webAnimation,"web-app-manifest":webAppManifest,"web-bluetooth":webBluetooth,"web-serial":webSerial,"web-share":webShare,"webauthn":webauthn,"webcodecs":webcodecs,"webgl":webgl,"webgl2":webgl2,"webgpu":webgpu,"webhid":webhid,"webkit-user-drag":webkitUserDrag,"webm":webm,"webnfc":webnfc,"webp":webp,"websockets":websockets,"webtransport":webtransport,"webusb":webusb,"webvr":webvr,"webvtt":webvtt,"webworkers":webworkers,"webxr":webxr,"will-change":willChange,"woff":woff,"woff2":woff2,"word-break":wordBreak,"wordwrap":wordwrap,"x-doc-messaging":xDocMessaging,"x-frame-options":xFrameOptions,"xhr2":xhr2,"xhtml":xhtml,"xhtmlsmil":xhtmlsmil,"xml-serializer":xmlSerializer};

/*
 * Load this dynamically so that it
 * doesn't appear in the rollup bundle.
 */

features$1.features = features;

var region = {exports: {}};

const browsers$1 = browsers$5.browsers;

function unpackRegion(packed) {
  return Object.keys(packed).reduce((list, browser) => {
    let data = packed[browser];
    list[browsers$1[browser]] = Object.keys(data).reduce((memo, key) => {
      let stats = data[key];
      if (key === '_') {
        stats.split(' ').forEach(version => (memo[version] = null));
      } else {
        memo[key] = stats;
      }
      return memo
    }, {});
    return list
  }, {})
}

region.exports = unpackRegion;
region.exports.default = unpackRegion;

unpacker.agents = agents$3.agents;
unpacker.feature = feature$1.exports;
unpacker.features = features$1.features;
unpacker.region = region.exports;

var picocolors_browser = {exports: {}};

var x=String;
var create=function() {return {isColorSupported:false,reset:x,bold:x,dim:x,italic:x,underline:x,inverse:x,hidden:x,strikethrough:x,black:x,red:x,green:x,yellow:x,blue:x,magenta:x,cyan:x,white:x,gray:x,bgBlack:x,bgRed:x,bgGreen:x,bgYellow:x,bgBlue:x,bgMagenta:x,bgCyan:x,bgWhite:x}};
picocolors_browser.exports=create();
picocolors_browser.exports.createColors = create;

var utils$f = {};

let pico = picocolors_browser.exports;

let terminalHighlight$1 = require$$2;

class CssSyntaxError$3 extends Error {
  constructor(message, line, column, source, file, plugin) {
    super(message);
    this.name = 'CssSyntaxError';
    this.reason = message;

    if (file) {
      this.file = file;
    }
    if (source) {
      this.source = source;
    }
    if (plugin) {
      this.plugin = plugin;
    }
    if (typeof line !== 'undefined' && typeof column !== 'undefined') {
      if (typeof line === 'number') {
        this.line = line;
        this.column = column;
      } else {
        this.line = line.line;
        this.column = line.column;
        this.endLine = column.line;
        this.endColumn = column.column;
      }
    }

    this.setMessage();

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, CssSyntaxError$3);
    }
  }

  setMessage() {
    this.message = this.plugin ? this.plugin + ': ' : '';
    this.message += this.file ? this.file : '<css input>';
    if (typeof this.line !== 'undefined') {
      this.message += ':' + this.line + ':' + this.column;
    }
    this.message += ': ' + this.reason;
  }

  showSourceCode(color) {
    if (!this.source) return ''

    let css = this.source;
    if (color == null) color = pico.isColorSupported;
    if (terminalHighlight$1) {
      if (color) css = terminalHighlight$1(css);
    }

    let lines = css.split(/\r?\n/);
    let start = Math.max(this.line - 3, 0);
    let end = Math.min(this.line + 2, lines.length);

    let maxWidth = String(end).length;

    let mark, aside;
    if (color) {
      let { bold, red, gray } = pico.createColors(true);
      mark = text => bold(red(text));
      aside = text => gray(text);
    } else {
      mark = aside = str => str;
    }

    return lines
      .slice(start, end)
      .map((line, index) => {
        let number = start + 1 + index;
        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | ';
        if (number === this.line) {
          let spacing =
            aside(gutter.replace(/\d/g, ' ')) +
            line.slice(0, this.column - 1).replace(/[^\t]/g, ' ');
          return mark('>') + aside(gutter) + line + '\n ' + spacing + mark('^')
        }
        return ' ' + aside(gutter) + line
      })
      .join('\n')
  }

  toString() {
    let code = this.showSourceCode();
    if (code) {
      code = '\n\n' + code + '\n';
    }
    return this.name + ': ' + this.message + code
  }
}

var cssSyntaxError = CssSyntaxError$3;
CssSyntaxError$3.default = CssSyntaxError$3;

var symbols = {};

symbols.isClean = Symbol('isClean');

symbols.my = Symbol('my');

const DEFAULT_RAW = {
  colon: ': ',
  indent: '    ',
  beforeDecl: '\n',
  beforeRule: '\n',
  beforeOpen: ' ',
  beforeClose: '\n',
  beforeComment: '\n',
  after: '\n',
  emptyBody: '',
  commentLeft: ' ',
  commentRight: ' ',
  semicolon: false
};

function capitalize(str) {
  return str[0].toUpperCase() + str.slice(1)
}

class Stringifier$2 {
  constructor(builder) {
    this.builder = builder;
  }

  stringify(node, semicolon) {
    /* c8 ignore start */
    if (!this[node.type]) {
      throw new Error(
        'Unknown AST node type ' +
          node.type +
          '. ' +
          'Maybe you need to change PostCSS stringifier.'
      )
    }
    /* c8 ignore stop */
    this[node.type](node, semicolon);
  }

  document(node) {
    this.body(node);
  }

  root(node) {
    this.body(node);
    if (node.raws.after) this.builder(node.raws.after);
  }

  comment(node) {
    let left = this.raw(node, 'left', 'commentLeft');
    let right = this.raw(node, 'right', 'commentRight');
    this.builder('/*' + left + node.text + right + '*/', node);
  }

  decl(node, semicolon) {
    let between = this.raw(node, 'between', 'colon');
    let string = node.prop + between + this.rawValue(node, 'value');

    if (node.important) {
      string += node.raws.important || ' !important';
    }

    if (semicolon) string += ';';
    this.builder(string, node);
  }

  rule(node) {
    this.block(node, this.rawValue(node, 'selector'));
    if (node.raws.ownSemicolon) {
      this.builder(node.raws.ownSemicolon, node, 'end');
    }
  }

  atrule(node, semicolon) {
    let name = '@' + node.name;
    let params = node.params ? this.rawValue(node, 'params') : '';

    if (typeof node.raws.afterName !== 'undefined') {
      name += node.raws.afterName;
    } else if (params) {
      name += ' ';
    }

    if (node.nodes) {
      this.block(node, name + params);
    } else {
      let end = (node.raws.between || '') + (semicolon ? ';' : '');
      this.builder(name + params + end, node);
    }
  }

  body(node) {
    let last = node.nodes.length - 1;
    while (last > 0) {
      if (node.nodes[last].type !== 'comment') break
      last -= 1;
    }

    let semicolon = this.raw(node, 'semicolon');
    for (let i = 0; i < node.nodes.length; i++) {
      let child = node.nodes[i];
      let before = this.raw(child, 'before');
      if (before) this.builder(before);
      this.stringify(child, last !== i || semicolon);
    }
  }

  block(node, start) {
    let between = this.raw(node, 'between', 'beforeOpen');
    this.builder(start + between + '{', node, 'start');

    let after;
    if (node.nodes && node.nodes.length) {
      this.body(node);
      after = this.raw(node, 'after');
    } else {
      after = this.raw(node, 'after', 'emptyBody');
    }

    if (after) this.builder(after);
    this.builder('}', node, 'end');
  }

  raw(node, own, detect) {
    let value;
    if (!detect) detect = own;

    // Already had
    if (own) {
      value = node.raws[own];
      if (typeof value !== 'undefined') return value
    }

    let parent = node.parent;

    if (detect === 'before') {
      // Hack for first rule in CSS
      if (!parent || (parent.type === 'root' && parent.first === node)) {
        return ''
      }

      // `root` nodes in `document` should use only their own raws
      if (parent && parent.type === 'document') {
        return ''
      }
    }

    // Floating child without parent
    if (!parent) return DEFAULT_RAW[detect]

    // Detect style by other nodes
    let root = node.root();
    if (!root.rawCache) root.rawCache = {};
    if (typeof root.rawCache[detect] !== 'undefined') {
      return root.rawCache[detect]
    }

    if (detect === 'before' || detect === 'after') {
      return this.beforeAfter(node, detect)
    } else {
      let method = 'raw' + capitalize(detect);
      if (this[method]) {
        value = this[method](root, node);
      } else {
        root.walk(i => {
          value = i.raws[own];
          if (typeof value !== 'undefined') return false
        });
      }
    }

    if (typeof value === 'undefined') value = DEFAULT_RAW[detect];

    root.rawCache[detect] = value;
    return value
  }

  rawSemicolon(root) {
    let value;
    root.walk(i => {
      if (i.nodes && i.nodes.length && i.last.type === 'decl') {
        value = i.raws.semicolon;
        if (typeof value !== 'undefined') return false
      }
    });
    return value
  }

  rawEmptyBody(root) {
    let value;
    root.walk(i => {
      if (i.nodes && i.nodes.length === 0) {
        value = i.raws.after;
        if (typeof value !== 'undefined') return false
      }
    });
    return value
  }

  rawIndent(root) {
    if (root.raws.indent) return root.raws.indent
    let value;
    root.walk(i => {
      let p = i.parent;
      if (p && p !== root && p.parent && p.parent === root) {
        if (typeof i.raws.before !== 'undefined') {
          let parts = i.raws.before.split('\n');
          value = parts[parts.length - 1];
          value = value.replace(/\S/g, '');
          return false
        }
      }
    });
    return value
  }

  rawBeforeComment(root, node) {
    let value;
    root.walkComments(i => {
      if (typeof i.raws.before !== 'undefined') {
        value = i.raws.before;
        if (value.includes('\n')) {
          value = value.replace(/[^\n]+$/, '');
        }
        return false
      }
    });
    if (typeof value === 'undefined') {
      value = this.raw(node, null, 'beforeDecl');
    } else if (value) {
      value = value.replace(/\S/g, '');
    }
    return value
  }

  rawBeforeDecl(root, node) {
    let value;
    root.walkDecls(i => {
      if (typeof i.raws.before !== 'undefined') {
        value = i.raws.before;
        if (value.includes('\n')) {
          value = value.replace(/[^\n]+$/, '');
        }
        return false
      }
    });
    if (typeof value === 'undefined') {
      value = this.raw(node, null, 'beforeRule');
    } else if (value) {
      value = value.replace(/\S/g, '');
    }
    return value
  }

  rawBeforeRule(root) {
    let value;
    root.walk(i => {
      if (i.nodes && (i.parent !== root || root.first !== i)) {
        if (typeof i.raws.before !== 'undefined') {
          value = i.raws.before;
          if (value.includes('\n')) {
            value = value.replace(/[^\n]+$/, '');
          }
          return false
        }
      }
    });
    if (value) value = value.replace(/\S/g, '');
    return value
  }

  rawBeforeClose(root) {
    let value;
    root.walk(i => {
      if (i.nodes && i.nodes.length > 0) {
        if (typeof i.raws.after !== 'undefined') {
          value = i.raws.after;
          if (value.includes('\n')) {
            value = value.replace(/[^\n]+$/, '');
          }
          return false
        }
      }
    });
    if (value) value = value.replace(/\S/g, '');
    return value
  }

  rawBeforeOpen(root) {
    let value;
    root.walk(i => {
      if (i.type !== 'decl') {
        value = i.raws.between;
        if (typeof value !== 'undefined') return false
      }
    });
    return value
  }

  rawColon(root) {
    let value;
    root.walkDecls(i => {
      if (typeof i.raws.between !== 'undefined') {
        value = i.raws.between.replace(/[^\s:]/g, '');
        return false
      }
    });
    return value
  }

  beforeAfter(node, detect) {
    let value;
    if (node.type === 'decl') {
      value = this.raw(node, null, 'beforeDecl');
    } else if (node.type === 'comment') {
      value = this.raw(node, null, 'beforeComment');
    } else if (detect === 'before') {
      value = this.raw(node, null, 'beforeRule');
    } else {
      value = this.raw(node, null, 'beforeClose');
    }

    let buf = node.parent;
    let depth = 0;
    while (buf && buf.type !== 'root') {
      depth += 1;
      buf = buf.parent;
    }

    if (value.includes('\n')) {
      let indent = this.raw(node, null, 'indent');
      if (indent.length) {
        for (let step = 0; step < depth; step++) value += indent;
      }
    }

    return value
  }

  rawValue(node, prop) {
    let value = node[prop];
    let raw = node.raws[prop];
    if (raw && raw.value === value) {
      return raw.raw
    }

    return value
  }
}

var stringifier = Stringifier$2;
Stringifier$2.default = Stringifier$2;

let Stringifier$1 = stringifier;

function stringify$6(node, builder) {
  let str = new Stringifier$1(builder);
  str.stringify(node);
}

var stringify_1$1 = stringify$6;
stringify$6.default = stringify$6;

let { isClean: isClean$2, my: my$2 } = symbols;
let CssSyntaxError$2 = cssSyntaxError;
let Stringifier = stringifier;
let stringify$5 = stringify_1$1;

function cloneNode(obj, parent) {
  let cloned = new obj.constructor();

  for (let i in obj) {
    if (!Object.prototype.hasOwnProperty.call(obj, i)) {
      /* c8 ignore next 2 */
      continue
    }
    if (i === 'proxyCache') continue
    let value = obj[i];
    let type = typeof value;

    if (i === 'parent' && type === 'object') {
      if (parent) cloned[i] = parent;
    } else if (i === 'source') {
      cloned[i] = value;
    } else if (Array.isArray(value)) {
      cloned[i] = value.map(j => cloneNode(j, cloned));
    } else {
      if (type === 'object' && value !== null) value = cloneNode(value);
      cloned[i] = value;
    }
  }

  return cloned
}

class Node$4 {
  constructor(defaults = {}) {
    this.raws = {};
    this[isClean$2] = false;
    this[my$2] = true;

    for (let name in defaults) {
      if (name === 'nodes') {
        this.nodes = [];
        for (let node of defaults[name]) {
          if (typeof node.clone === 'function') {
            this.append(node.clone());
          } else {
            this.append(node);
          }
        }
      } else {
        this[name] = defaults[name];
      }
    }
  }

  error(message, opts = {}) {
    if (this.source) {
      let { start, end } = this.rangeBy(opts);
      return this.source.input.error(
        message,
        { line: start.line, column: start.column },
        { line: end.line, column: end.column },
        opts
      )
    }
    return new CssSyntaxError$2(message)
  }

  warn(result, text, opts) {
    let data = { node: this };
    for (let i in opts) data[i] = opts[i];
    return result.warn(text, data)
  }

  remove() {
    if (this.parent) {
      this.parent.removeChild(this);
    }
    this.parent = undefined;
    return this
  }

  toString(stringifier = stringify$5) {
    if (stringifier.stringify) stringifier = stringifier.stringify;
    let result = '';
    stringifier(this, i => {
      result += i;
    });
    return result
  }

  assign(overrides = {}) {
    for (let name in overrides) {
      this[name] = overrides[name];
    }
    return this
  }

  clone(overrides = {}) {
    let cloned = cloneNode(this);
    for (let name in overrides) {
      cloned[name] = overrides[name];
    }
    return cloned
  }

  cloneBefore(overrides = {}) {
    let cloned = this.clone(overrides);
    this.parent.insertBefore(this, cloned);
    return cloned
  }

  cloneAfter(overrides = {}) {
    let cloned = this.clone(overrides);
    this.parent.insertAfter(this, cloned);
    return cloned
  }

  replaceWith(...nodes) {
    if (this.parent) {
      let bookmark = this;
      let foundSelf = false;
      for (let node of nodes) {
        if (node === this) {
          foundSelf = true;
        } else if (foundSelf) {
          this.parent.insertAfter(bookmark, node);
          bookmark = node;
        } else {
          this.parent.insertBefore(bookmark, node);
        }
      }

      if (!foundSelf) {
        this.remove();
      }
    }

    return this
  }

  next() {
    if (!this.parent) return undefined
    let index = this.parent.index(this);
    return this.parent.nodes[index + 1]
  }

  prev() {
    if (!this.parent) return undefined
    let index = this.parent.index(this);
    return this.parent.nodes[index - 1]
  }

  before(add) {
    this.parent.insertBefore(this, add);
    return this
  }

  after(add) {
    this.parent.insertAfter(this, add);
    return this
  }

  root() {
    let result = this;
    while (result.parent && result.parent.type !== 'document') {
      result = result.parent;
    }
    return result
  }

  raw(prop, defaultType) {
    let str = new Stringifier();
    return str.raw(this, prop, defaultType)
  }

  cleanRaws(keepBetween) {
    delete this.raws.before;
    delete this.raws.after;
    if (!keepBetween) delete this.raws.between;
  }

  toJSON(_, inputs) {
    let fixed = {};
    let emitInputs = inputs == null;
    inputs = inputs || new Map();
    let inputsNextIndex = 0;

    for (let name in this) {
      if (!Object.prototype.hasOwnProperty.call(this, name)) {
        /* c8 ignore next 2 */
        continue
      }
      if (name === 'parent' || name === 'proxyCache') continue
      let value = this[name];

      if (Array.isArray(value)) {
        fixed[name] = value.map(i => {
          if (typeof i === 'object' && i.toJSON) {
            return i.toJSON(null, inputs)
          } else {
            return i
          }
        });
      } else if (typeof value === 'object' && value.toJSON) {
        fixed[name] = value.toJSON(null, inputs);
      } else if (name === 'source') {
        let inputId = inputs.get(value.input);
        if (inputId == null) {
          inputId = inputsNextIndex;
          inputs.set(value.input, inputsNextIndex);
          inputsNextIndex++;
        }
        fixed[name] = {
          inputId,
          start: value.start,
          end: value.end
        };
      } else {
        fixed[name] = value;
      }
    }

    if (emitInputs) {
      fixed.inputs = [...inputs.keys()].map(input => input.toJSON());
    }

    return fixed
  }

  positionInside(index) {
    let string = this.toString();
    let column = this.source.start.column;
    let line = this.source.start.line;

    for (let i = 0; i < index; i++) {
      if (string[i] === '\n') {
        column = 1;
        line += 1;
      } else {
        column += 1;
      }
    }

    return { line, column }
  }

  positionBy(opts) {
    let pos = this.source.start;
    if (opts.index) {
      pos = this.positionInside(opts.index);
    } else if (opts.word) {
      let index = this.toString().indexOf(opts.word);
      if (index !== -1) pos = this.positionInside(index);
    }
    return pos
  }

  rangeBy(opts) {
    let start = {
      line: this.source.start.line,
      column: this.source.start.column
    };
    let end = this.source.end
      ? {
          line: this.source.end.line,
          column: this.source.end.column + 1
        }
      : {
          line: start.line,
          column: start.column + 1
        };

    if (opts.word) {
      let index = this.toString().indexOf(opts.word);
      if (index !== -1) {
        start = this.positionInside(index);
        end = this.positionInside(index + opts.word.length);
      }
    } else {
      if (opts.start) {
        start = {
          line: opts.start.line,
          column: opts.start.column
        };
      } else if (opts.index) {
        start = this.positionInside(opts.index);
      }

      if (opts.end) {
        end = {
          line: opts.end.line,
          column: opts.end.column
        };
      } else if (opts.endIndex) {
        end = this.positionInside(opts.endIndex);
      } else if (opts.index) {
        end = this.positionInside(opts.index + 1);
      }
    }

    if (
      end.line < start.line ||
      (end.line === start.line && end.column <= start.column)
    ) {
      end = { line: start.line, column: start.column + 1 };
    }

    return { start, end }
  }

  getProxyProcessor() {
    return {
      set(node, prop, value) {
        if (node[prop] === value) return true
        node[prop] = value;
        if (
          prop === 'prop' ||
          prop === 'value' ||
          prop === 'name' ||
          prop === 'params' ||
          prop === 'important' ||
          /* c8 ignore next */
          prop === 'text'
        ) {
          node.markDirty();
        }
        return true
      },

      get(node, prop) {
        if (prop === 'proxyOf') {
          return node
        } else if (prop === 'root') {
          return () => node.root().toProxy()
        } else {
          return node[prop]
        }
      }
    }
  }

  toProxy() {
    if (!this.proxyCache) {
      this.proxyCache = new Proxy(this, this.getProxyProcessor());
    }
    return this.proxyCache
  }

  addToError(error) {
    error.postcssNode = this;
    if (error.stack && this.source && /\n\s{4}at /.test(error.stack)) {
      let s = this.source;
      error.stack = error.stack.replace(
        /\n\s{4}at /,
        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`
      );
    }
    return error
  }

  markDirty() {
    if (this[isClean$2]) {
      this[isClean$2] = false;
      let next = this;
      while ((next = next.parent)) {
        next[isClean$2] = false;
      }
    }
  }

  get proxyOf() {
    return this
  }
}

var node_1 = Node$4;
Node$4.default = Node$4;

let Node$3 = node_1;

class Declaration$O extends Node$3 {
  constructor(defaults) {
    if (
      defaults &&
      typeof defaults.value !== 'undefined' &&
      typeof defaults.value !== 'string'
    ) {
      defaults = { ...defaults, value: String(defaults.value) };
    }
    super(defaults);
    this.type = 'decl';
  }

  get variable() {
    return this.prop.startsWith('--') || this.prop[0] === '$'
  }
}

var declaration$1 = Declaration$O;
Declaration$O.default = Declaration$O;

let urlAlphabet =
  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict';
let customAlphabet = (alphabet, defaultSize = 21) => {
  return (size = defaultSize) => {
    let id = '';
    let i = size;
    while (i--) {
      id += alphabet[(Math.random() * alphabet.length) | 0];
    }
    return id
  }
};
let nanoid$1 = (size = 21) => {
  let id = '';
  let i = size;
  while (i--) {
    id += urlAlphabet[(Math.random() * 64) | 0];
  }
  return id
};

var nonSecure = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  nanoid: nanoid$1,
  customAlphabet: customAlphabet
}, Symbol.toStringTag, { value: 'Module' }));

var require$$3 = /*@__PURE__*/getAugmentedNamespace(nonSecure);

let { SourceMapConsumer: SourceMapConsumer$2, SourceMapGenerator: SourceMapGenerator$2 } = require$$2;
let { existsSync, readFileSync } = require$$2;
let { dirname: dirname$1, join } = require$$2;

function fromBase64(str) {
  if (Buffer) {
    return Buffer.from(str, 'base64').toString()
  } else {
    /* c8 ignore next 2 */
    return window.atob(str)
  }
}

class PreviousMap$2 {
  constructor(css, opts) {
    if (opts.map === false) return
    this.loadAnnotation(css);
    this.inline = this.startWith(this.annotation, 'data:');

    let prev = opts.map ? opts.map.prev : undefined;
    let text = this.loadMap(opts.from, prev);
    if (!this.mapFile && opts.from) {
      this.mapFile = opts.from;
    }
    if (this.mapFile) this.root = dirname$1(this.mapFile);
    if (text) this.text = text;
  }

  consumer() {
    if (!this.consumerCache) {
      this.consumerCache = new SourceMapConsumer$2(this.text);
    }
    return this.consumerCache
  }

  withContent() {
    return !!(
      this.consumer().sourcesContent &&
      this.consumer().sourcesContent.length > 0
    )
  }

  startWith(string, start) {
    if (!string) return false
    return string.substr(0, start.length) === start
  }

  getAnnotationURL(sourceMapString) {
    return sourceMapString.replace(/^\/\*\s*# sourceMappingURL=/, '').trim()
  }

  loadAnnotation(css) {
    let comments = css.match(/\/\*\s*# sourceMappingURL=/gm);
    if (!comments) return

    // sourceMappingURLs from comments, strings, etc.
    let start = css.lastIndexOf(comments.pop());
    let end = css.indexOf('*/', start);

    if (start > -1 && end > -1) {
      // Locate the last sourceMappingURL to avoid pickin
      this.annotation = this.getAnnotationURL(css.substring(start, end));
    }
  }

  decodeInline(text) {
    let baseCharsetUri = /^data:application\/json;charset=utf-?8;base64,/;
    let baseUri = /^data:application\/json;base64,/;
    let charsetUri = /^data:application\/json;charset=utf-?8,/;
    let uri = /^data:application\/json,/;

    if (charsetUri.test(text) || uri.test(text)) {
      return decodeURIComponent(text.substr(RegExp.lastMatch.length))
    }

    if (baseCharsetUri.test(text) || baseUri.test(text)) {
      return fromBase64(text.substr(RegExp.lastMatch.length))
    }

    let encoding = text.match(/data:application\/json;([^,]+),/)[1];
    throw new Error('Unsupported source map encoding ' + encoding)
  }

  loadFile(path) {
    this.root = dirname$1(path);
    if (existsSync(path)) {
      this.mapFile = path;
      return readFileSync(path, 'utf-8').toString().trim()
    }
  }

  loadMap(file, prev) {
    if (prev === false) return false

    if (prev) {
      if (typeof prev === 'string') {
        return prev
      } else if (typeof prev === 'function') {
        let prevPath = prev(file);
        if (prevPath) {
          let map = this.loadFile(prevPath);
          if (!map) {
            throw new Error(
              'Unable to load previous source map: ' + prevPath.toString()
            )
          }
          return map
        }
      } else if (prev instanceof SourceMapConsumer$2) {
        return SourceMapGenerator$2.fromSourceMap(prev).toString()
      } else if (prev instanceof SourceMapGenerator$2) {
        return prev.toString()
      } else if (this.isMap(prev)) {
        return JSON.stringify(prev)
      } else {
        throw new Error(
          'Unsupported previous source map format: ' + prev.toString()
        )
      }
    } else if (this.inline) {
      return this.decodeInline(this.annotation)
    } else if (this.annotation) {
      let map = this.annotation;
      if (file) map = join(dirname$1(file), map);
      return this.loadFile(map)
    }
  }

  isMap(map) {
    if (typeof map !== 'object') return false
    return (
      typeof map.mappings === 'string' ||
      typeof map._mappings === 'string' ||
      Array.isArray(map.sections)
    )
  }
}

var previousMap = PreviousMap$2;
PreviousMap$2.default = PreviousMap$2;

let { SourceMapConsumer: SourceMapConsumer$1, SourceMapGenerator: SourceMapGenerator$1 } = require$$2;
let { fileURLToPath, pathToFileURL: pathToFileURL$1 } = require$$2;
let { resolve: resolve$1, isAbsolute } = require$$2;
let { nanoid } = require$$3;

let terminalHighlight = require$$2;
let CssSyntaxError$1 = cssSyntaxError;
let PreviousMap$1 = previousMap;

let fromOffsetCache = Symbol('fromOffsetCache');

let sourceMapAvailable$1 = Boolean(SourceMapConsumer$1 && SourceMapGenerator$1);
let pathAvailable$1 = Boolean(resolve$1 && isAbsolute);

class Input$4 {
  constructor(css, opts = {}) {
    if (
      css === null ||
      typeof css === 'undefined' ||
      (typeof css === 'object' && !css.toString)
    ) {
      throw new Error(`PostCSS received ${css} instead of CSS string`)
    }

    this.css = css.toString();

    if (this.css[0] === '\uFEFF' || this.css[0] === '\uFFFE') {
      this.hasBOM = true;
      this.css = this.css.slice(1);
    } else {
      this.hasBOM = false;
    }

    if (opts.from) {
      if (
        !pathAvailable$1 ||
        /^\w+:\/\//.test(opts.from) ||
        isAbsolute(opts.from)
      ) {
        this.file = opts.from;
      } else {
        this.file = resolve$1(opts.from);
      }
    }

    if (pathAvailable$1 && sourceMapAvailable$1) {
      let map = new PreviousMap$1(this.css, opts);
      if (map.text) {
        this.map = map;
        let file = map.consumer().file;
        if (!this.file && file) this.file = this.mapResolve(file);
      }
    }

    if (!this.file) {
      this.id = '<input css ' + nanoid(6) + '>';
    }
    if (this.map) this.map.file = this.from;
  }

  fromOffset(offset) {
    let lastLine, lineToIndex;
    if (!this[fromOffsetCache]) {
      let lines = this.css.split('\n');
      lineToIndex = new Array(lines.length);
      let prevIndex = 0;

      for (let i = 0, l = lines.length; i < l; i++) {
        lineToIndex[i] = prevIndex;
        prevIndex += lines[i].length + 1;
      }

      this[fromOffsetCache] = lineToIndex;
    } else {
      lineToIndex = this[fromOffsetCache];
    }
    lastLine = lineToIndex[lineToIndex.length - 1];

    let min = 0;
    if (offset >= lastLine) {
      min = lineToIndex.length - 1;
    } else {
      let max = lineToIndex.length - 2;
      let mid;
      while (min < max) {
        mid = min + ((max - min) >> 1);
        if (offset < lineToIndex[mid]) {
          max = mid - 1;
        } else if (offset >= lineToIndex[mid + 1]) {
          min = mid + 1;
        } else {
          min = mid;
          break
        }
      }
    }
    return {
      line: min + 1,
      col: offset - lineToIndex[min] + 1
    }
  }

  error(message, line, column, opts = {}) {
    let result, endLine, endColumn;

    if (line && typeof line === 'object') {
      let start = line;
      let end = column;
      if (typeof line.offset === 'number') {
        let pos = this.fromOffset(start.offset);
        line = pos.line;
        column = pos.col;
      } else {
        line = start.line;
        column = start.column;
      }
      if (typeof end.offset === 'number') {
        let pos = this.fromOffset(end.offset);
        endLine = pos.line;
        endColumn = pos.col;
      } else {
        endLine = end.line;
        endColumn = end.column;
      }
    } else if (!column) {
      let pos = this.fromOffset(line);
      line = pos.line;
      column = pos.col;
    }

    let origin = this.origin(line, column, endLine, endColumn);
    if (origin) {
      result = new CssSyntaxError$1(
        message,
        origin.endLine === undefined
          ? origin.line
          : { line: origin.line, column: origin.column },
        origin.endLine === undefined
          ? origin.column
          : { line: origin.endLine, column: origin.endColumn },
        origin.source,
        origin.file,
        opts.plugin
      );
    } else {
      result = new CssSyntaxError$1(
        message,
        endLine === undefined ? line : { line, column },
        endLine === undefined ? column : { line: endLine, column: endColumn },
        this.css,
        this.file,
        opts.plugin
      );
    }

    result.input = { line, column, endLine, endColumn, source: this.css };
    if (this.file) {
      if (pathToFileURL$1) {
        result.input.url = pathToFileURL$1(this.file).toString();
      }
      result.input.file = this.file;
    }

    return result
  }

  origin(line, column, endLine, endColumn) {
    if (!this.map) return false
    let consumer = this.map.consumer();

    let from = consumer.originalPositionFor({ line, column });
    if (!from.source) return false

    let to;
    if (typeof endLine === 'number') {
      to = consumer.originalPositionFor({ line: endLine, column: endColumn });
    }

    let fromUrl;

    if (isAbsolute(from.source)) {
      fromUrl = pathToFileURL$1(from.source);
    } else {
      fromUrl = new URL(
        from.source,
        this.map.consumer().sourceRoot || pathToFileURL$1(this.map.mapFile)
      );
    }

    let result = {
      url: fromUrl.toString(),
      line: from.line,
      column: from.column,
      endLine: to && to.line,
      endColumn: to && to.column
    };

    if (fromUrl.protocol === 'file:') {
      if (fileURLToPath) {
        result.file = fileURLToPath(fromUrl);
      } else {
        /* c8 ignore next 2 */
        throw new Error(`file: protocol is not available in this PostCSS build`)
      }
    }

    let source = consumer.sourceContentFor(from.source);
    if (source) result.source = source;

    return result
  }

  mapResolve(file) {
    if (/^\w+:\/\//.test(file)) {
      return file
    }
    return resolve$1(this.map.consumer().sourceRoot || this.map.root || '.', file)
  }

  get from() {
    return this.file || this.id
  }

  toJSON() {
    let json = {};
    for (let name of ['hasBOM', 'css', 'file', 'id']) {
      if (this[name] != null) {
        json[name] = this[name];
      }
    }
    if (this.map) {
      json.map = { ...this.map };
      if (json.map.consumerCache) {
        json.map.consumerCache = undefined;
      }
    }
    return json
  }
}

var input = Input$4;
Input$4.default = Input$4;

if (terminalHighlight && terminalHighlight.registerInput) {
  terminalHighlight.registerInput(Input$4);
}

let { SourceMapConsumer, SourceMapGenerator } = require$$2;
let { dirname, resolve, relative, sep } = require$$2;
let { pathToFileURL } = require$$2;

let Input$3 = input;

let sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);
let pathAvailable = Boolean(dirname && resolve && relative && sep);

class MapGenerator$2 {
  constructor(stringify, root, opts, cssString) {
    this.stringify = stringify;
    this.mapOpts = opts.map || {};
    this.root = root;
    this.opts = opts;
    this.css = cssString;
  }

  isMap() {
    if (typeof this.opts.map !== 'undefined') {
      return !!this.opts.map
    }
    return this.previous().length > 0
  }

  previous() {
    if (!this.previousMaps) {
      this.previousMaps = [];
      if (this.root) {
        this.root.walk(node => {
          if (node.source && node.source.input.map) {
            let map = node.source.input.map;
            if (!this.previousMaps.includes(map)) {
              this.previousMaps.push(map);
            }
          }
        });
      } else {
        let input = new Input$3(this.css, this.opts);
        if (input.map) this.previousMaps.push(input.map);
      }
    }

    return this.previousMaps
  }

  isInline() {
    if (typeof this.mapOpts.inline !== 'undefined') {
      return this.mapOpts.inline
    }

    let annotation = this.mapOpts.annotation;
    if (typeof annotation !== 'undefined' && annotation !== true) {
      return false
    }

    if (this.previous().length) {
      return this.previous().some(i => i.inline)
    }
    return true
  }

  isSourcesContent() {
    if (typeof this.mapOpts.sourcesContent !== 'undefined') {
      return this.mapOpts.sourcesContent
    }
    if (this.previous().length) {
      return this.previous().some(i => i.withContent())
    }
    return true
  }

  clearAnnotation() {
    if (this.mapOpts.annotation === false) return

    if (this.root) {
      let node;
      for (let i = this.root.nodes.length - 1; i >= 0; i--) {
        node = this.root.nodes[i];
        if (node.type !== 'comment') continue
        if (node.text.indexOf('# sourceMappingURL=') === 0) {
          this.root.removeChild(i);
        }
      }
    } else if (this.css) {
      this.css = this.css.replace(/(\n)?\/\*#[\S\s]*?\*\/$/gm, '');
    }
  }

  setSourcesContent() {
    let already = {};
    if (this.root) {
      this.root.walk(node => {
        if (node.source) {
          let from = node.source.input.from;
          if (from && !already[from]) {
            already[from] = true;
            this.map.setSourceContent(
              this.toUrl(this.path(from)),
              node.source.input.css
            );
          }
        }
      });
    } else if (this.css) {
      let from = this.opts.from
        ? this.toUrl(this.path(this.opts.from))
        : '<no source>';
      this.map.setSourceContent(from, this.css);
    }
  }

  applyPrevMaps() {
    for (let prev of this.previous()) {
      let from = this.toUrl(this.path(prev.file));
      let root = prev.root || dirname(prev.file);
      let map;

      if (this.mapOpts.sourcesContent === false) {
        map = new SourceMapConsumer(prev.text);
        if (map.sourcesContent) {
          map.sourcesContent = map.sourcesContent.map(() => null);
        }
      } else {
        map = prev.consumer();
      }

      this.map.applySourceMap(map, from, this.toUrl(this.path(root)));
    }
  }

  isAnnotation() {
    if (this.isInline()) {
      return true
    }
    if (typeof this.mapOpts.annotation !== 'undefined') {
      return this.mapOpts.annotation
    }
    if (this.previous().length) {
      return this.previous().some(i => i.annotation)
    }
    return true
  }

  toBase64(str) {
    if (Buffer) {
      return Buffer.from(str).toString('base64')
    } else {
      return window.btoa(unescape(encodeURIComponent(str)))
    }
  }

  addAnnotation() {
    let content;

    if (this.isInline()) {
      content =
        'data:application/json;base64,' + this.toBase64(this.map.toString());
    } else if (typeof this.mapOpts.annotation === 'string') {
      content = this.mapOpts.annotation;
    } else if (typeof this.mapOpts.annotation === 'function') {
      content = this.mapOpts.annotation(this.opts.to, this.root);
    } else {
      content = this.outputFile() + '.map';
    }
    let eol = '\n';
    if (this.css.includes('\r\n')) eol = '\r\n';

    this.css += eol + '/*# sourceMappingURL=' + content + ' */';
  }

  outputFile() {
    if (this.opts.to) {
      return this.path(this.opts.to)
    } else if (this.opts.from) {
      return this.path(this.opts.from)
    } else {
      return 'to.css'
    }
  }

  generateMap() {
    if (this.root) {
      this.generateString();
    } else if (this.previous().length === 1) {
      let prev = this.previous()[0].consumer();
      prev.file = this.outputFile();
      this.map = SourceMapGenerator.fromSourceMap(prev);
    } else {
      this.map = new SourceMapGenerator({ file: this.outputFile() });
      this.map.addMapping({
        source: this.opts.from
          ? this.toUrl(this.path(this.opts.from))
          : '<no source>',
        generated: { line: 1, column: 0 },
        original: { line: 1, column: 0 }
      });
    }

    if (this.isSourcesContent()) this.setSourcesContent();
    if (this.root && this.previous().length > 0) this.applyPrevMaps();
    if (this.isAnnotation()) this.addAnnotation();

    if (this.isInline()) {
      return [this.css]
    } else {
      return [this.css, this.map]
    }
  }

  path(file) {
    if (file.indexOf('<') === 0) return file
    if (/^\w+:\/\//.test(file)) return file
    if (this.mapOpts.absolute) return file

    let from = this.opts.to ? dirname(this.opts.to) : '.';

    if (typeof this.mapOpts.annotation === 'string') {
      from = dirname(resolve(from, this.mapOpts.annotation));
    }

    file = relative(from, file);
    return file
  }

  toUrl(path) {
    if (sep === '\\') {
      path = path.replace(/\\/g, '/');
    }
    return encodeURI(path).replace(/[#?]/g, encodeURIComponent)
  }

  sourcePath(node) {
    if (this.mapOpts.from) {
      return this.toUrl(this.mapOpts.from)
    } else if (this.mapOpts.absolute) {
      if (pathToFileURL) {
        return pathToFileURL(node.source.input.from).toString()
      } else {
        throw new Error(
          '`map.absolute` option is not available in this PostCSS build'
        )
      }
    } else {
      return this.toUrl(this.path(node.source.input.from))
    }
  }

  generateString() {
    this.css = '';
    this.map = new SourceMapGenerator({ file: this.outputFile() });

    let line = 1;
    let column = 1;

    let noSource = '<no source>';
    let mapping = {
      source: '',
      generated: { line: 0, column: 0 },
      original: { line: 0, column: 0 }
    };

    let lines, last;
    this.stringify(this.root, (str, node, type) => {
      this.css += str;

      if (node && type !== 'end') {
        mapping.generated.line = line;
        mapping.generated.column = column - 1;
        if (node.source && node.source.start) {
          mapping.source = this.sourcePath(node);
          mapping.original.line = node.source.start.line;
          mapping.original.column = node.source.start.column - 1;
          this.map.addMapping(mapping);
        } else {
          mapping.source = noSource;
          mapping.original.line = 1;
          mapping.original.column = 0;
          this.map.addMapping(mapping);
        }
      }

      lines = str.match(/\n/g);
      if (lines) {
        line += lines.length;
        last = str.lastIndexOf('\n');
        column = str.length - last;
      } else {
        column += str.length;
      }

      if (node && type !== 'start') {
        let p = node.parent || { raws: {} };
        if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {
          if (node.source && node.source.end) {
            mapping.source = this.sourcePath(node);
            mapping.original.line = node.source.end.line;
            mapping.original.column = node.source.end.column - 1;
            mapping.generated.line = line;
            mapping.generated.column = column - 2;
            this.map.addMapping(mapping);
          } else {
            mapping.source = noSource;
            mapping.original.line = 1;
            mapping.original.column = 0;
            mapping.generated.line = line;
            mapping.generated.column = column - 1;
            this.map.addMapping(mapping);
          }
        }
      }
    });
  }

  generate() {
    this.clearAnnotation();
    if (pathAvailable && sourceMapAvailable && this.isMap()) {
      return this.generateMap()
    } else {
      let result = '';
      this.stringify(this.root, i => {
        result += i;
      });
      return [result]
    }
  }
}

var mapGenerator = MapGenerator$2;

let Node$2 = node_1;

class Comment$4 extends Node$2 {
  constructor(defaults) {
    super(defaults);
    this.type = 'comment';
  }
}

var comment = Comment$4;
Comment$4.default = Comment$4;

let { isClean: isClean$1, my: my$1 } = symbols;
let Declaration$N = declaration$1;
let Comment$3 = comment;
let Node$1 = node_1;

let parse$7, Rule$4, AtRule$4, Root$6;

function cleanSource(nodes) {
  return nodes.map(i => {
    if (i.nodes) i.nodes = cleanSource(i.nodes);
    delete i.source;
    return i
  })
}

function markDirtyUp(node) {
  node[isClean$1] = false;
  if (node.proxyOf.nodes) {
    for (let i of node.proxyOf.nodes) {
      markDirtyUp(i);
    }
  }
}

class Container$7 extends Node$1 {
  push(child) {
    child.parent = this;
    this.proxyOf.nodes.push(child);
    return this
  }

  each(callback) {
    if (!this.proxyOf.nodes) return undefined
    let iterator = this.getIterator();

    let index, result;
    while (this.indexes[iterator] < this.proxyOf.nodes.length) {
      index = this.indexes[iterator];
      result = callback(this.proxyOf.nodes[index], index);
      if (result === false) break

      this.indexes[iterator] += 1;
    }

    delete this.indexes[iterator];
    return result
  }

  walk(callback) {
    return this.each((child, i) => {
      let result;
      try {
        result = callback(child, i);
      } catch (e) {
        throw child.addToError(e)
      }
      if (result !== false && child.walk) {
        result = child.walk(callback);
      }

      return result
    })
  }

  walkDecls(prop, callback) {
    if (!callback) {
      callback = prop;
      return this.walk((child, i) => {
        if (child.type === 'decl') {
          return callback(child, i)
        }
      })
    }
    if (prop instanceof RegExp) {
      return this.walk((child, i) => {
        if (child.type === 'decl' && prop.test(child.prop)) {
          return callback(child, i)
        }
      })
    }
    return this.walk((child, i) => {
      if (child.type === 'decl' && child.prop === prop) {
        return callback(child, i)
      }
    })
  }

  walkRules(selector, callback) {
    if (!callback) {
      callback = selector;

      return this.walk((child, i) => {
        if (child.type === 'rule') {
          return callback(child, i)
        }
      })
    }
    if (selector instanceof RegExp) {
      return this.walk((child, i) => {
        if (child.type === 'rule' && selector.test(child.selector)) {
          return callback(child, i)
        }
      })
    }
    return this.walk((child, i) => {
      if (child.type === 'rule' && child.selector === selector) {
        return callback(child, i)
      }
    })
  }

  walkAtRules(name, callback) {
    if (!callback) {
      callback = name;
      return this.walk((child, i) => {
        if (child.type === 'atrule') {
          return callback(child, i)
        }
      })
    }
    if (name instanceof RegExp) {
      return this.walk((child, i) => {
        if (child.type === 'atrule' && name.test(child.name)) {
          return callback(child, i)
        }
      })
    }
    return this.walk((child, i) => {
      if (child.type === 'atrule' && child.name === name) {
        return callback(child, i)
      }
    })
  }

  walkComments(callback) {
    return this.walk((child, i) => {
      if (child.type === 'comment') {
        return callback(child, i)
      }
    })
  }

  append(...children) {
    for (let child of children) {
      let nodes = this.normalize(child, this.last);
      for (let node of nodes) this.proxyOf.nodes.push(node);
    }

    this.markDirty();

    return this
  }

  prepend(...children) {
    children = children.reverse();
    for (let child of children) {
      let nodes = this.normalize(child, this.first, 'prepend').reverse();
      for (let node of nodes) this.proxyOf.nodes.unshift(node);
      for (let id in this.indexes) {
        this.indexes[id] = this.indexes[id] + nodes.length;
      }
    }

    this.markDirty();

    return this
  }

  cleanRaws(keepBetween) {
    super.cleanRaws(keepBetween);
    if (this.nodes) {
      for (let node of this.nodes) node.cleanRaws(keepBetween);
    }
  }

  insertBefore(exist, add) {
    exist = this.index(exist);

    let type = exist === 0 ? 'prepend' : false;
    let nodes = this.normalize(add, this.proxyOf.nodes[exist], type).reverse();
    for (let node of nodes) this.proxyOf.nodes.splice(exist, 0, node);

    let index;
    for (let id in this.indexes) {
      index = this.indexes[id];
      if (exist <= index) {
        this.indexes[id] = index + nodes.length;
      }
    }

    this.markDirty();

    return this
  }

  insertAfter(exist, add) {
    exist = this.index(exist);

    let nodes = this.normalize(add, this.proxyOf.nodes[exist]).reverse();
    for (let node of nodes) this.proxyOf.nodes.splice(exist + 1, 0, node);

    let index;
    for (let id in this.indexes) {
      index = this.indexes[id];
      if (exist < index) {
        this.indexes[id] = index + nodes.length;
      }
    }

    this.markDirty();

    return this
  }

  removeChild(child) {
    child = this.index(child);
    this.proxyOf.nodes[child].parent = undefined;
    this.proxyOf.nodes.splice(child, 1);

    let index;
    for (let id in this.indexes) {
      index = this.indexes[id];
      if (index >= child) {
        this.indexes[id] = index - 1;
      }
    }

    this.markDirty();

    return this
  }

  removeAll() {
    for (let node of this.proxyOf.nodes) node.parent = undefined;
    this.proxyOf.nodes = [];

    this.markDirty();

    return this
  }

  replaceValues(pattern, opts, callback) {
    if (!callback) {
      callback = opts;
      opts = {};
    }

    this.walkDecls(decl => {
      if (opts.props && !opts.props.includes(decl.prop)) return
      if (opts.fast && !decl.value.includes(opts.fast)) return

      decl.value = decl.value.replace(pattern, callback);
    });

    this.markDirty();

    return this
  }

  every(condition) {
    return this.nodes.every(condition)
  }

  some(condition) {
    return this.nodes.some(condition)
  }

  index(child) {
    if (typeof child === 'number') return child
    if (child.proxyOf) child = child.proxyOf;
    return this.proxyOf.nodes.indexOf(child)
  }

  get first() {
    if (!this.proxyOf.nodes) return undefined
    return this.proxyOf.nodes[0]
  }

  get last() {
    if (!this.proxyOf.nodes) return undefined
    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]
  }

  normalize(nodes, sample) {
    if (typeof nodes === 'string') {
      nodes = cleanSource(parse$7(nodes).nodes);
    } else if (Array.isArray(nodes)) {
      nodes = nodes.slice(0);
      for (let i of nodes) {
        if (i.parent) i.parent.removeChild(i, 'ignore');
      }
    } else if (nodes.type === 'root' && this.type !== 'document') {
      nodes = nodes.nodes.slice(0);
      for (let i of nodes) {
        if (i.parent) i.parent.removeChild(i, 'ignore');
      }
    } else if (nodes.type) {
      nodes = [nodes];
    } else if (nodes.prop) {
      if (typeof nodes.value === 'undefined') {
        throw new Error('Value field is missed in node creation')
      } else if (typeof nodes.value !== 'string') {
        nodes.value = String(nodes.value);
      }
      nodes = [new Declaration$N(nodes)];
    } else if (nodes.selector) {
      nodes = [new Rule$4(nodes)];
    } else if (nodes.name) {
      nodes = [new AtRule$4(nodes)];
    } else if (nodes.text) {
      nodes = [new Comment$3(nodes)];
    } else {
      throw new Error('Unknown node type in node creation')
    }

    let processed = nodes.map(i => {
      /* c8 ignore next */
      if (!i[my$1]) Container$7.rebuild(i);
      i = i.proxyOf;
      if (i.parent) i.parent.removeChild(i);
      if (i[isClean$1]) markDirtyUp(i);
      if (typeof i.raws.before === 'undefined') {
        if (sample && typeof sample.raws.before !== 'undefined') {
          i.raws.before = sample.raws.before.replace(/\S/g, '');
        }
      }
      i.parent = this.proxyOf;
      return i
    });

    return processed
  }

  getProxyProcessor() {
    return {
      set(node, prop, value) {
        if (node[prop] === value) return true
        node[prop] = value;
        if (prop === 'name' || prop === 'params' || prop === 'selector') {
          node.markDirty();
        }
        return true
      },

      get(node, prop) {
        if (prop === 'proxyOf') {
          return node
        } else if (!node[prop]) {
          return node[prop]
        } else if (
          prop === 'each' ||
          (typeof prop === 'string' && prop.startsWith('walk'))
        ) {
          return (...args) => {
            return node[prop](
              ...args.map(i => {
                if (typeof i === 'function') {
                  return (child, index) => i(child.toProxy(), index)
                } else {
                  return i
                }
              })
            )
          }
        } else if (prop === 'every' || prop === 'some') {
          return cb => {
            return node[prop]((child, ...other) =>
              cb(child.toProxy(), ...other)
            )
          }
        } else if (prop === 'root') {
          return () => node.root().toProxy()
        } else if (prop === 'nodes') {
          return node.nodes.map(i => i.toProxy())
        } else if (prop === 'first' || prop === 'last') {
          return node[prop].toProxy()
        } else {
          return node[prop]
        }
      }
    }
  }

  getIterator() {
    if (!this.lastEach) this.lastEach = 0;
    if (!this.indexes) this.indexes = {};

    this.lastEach += 1;
    let iterator = this.lastEach;
    this.indexes[iterator] = 0;

    return iterator
  }
}

Container$7.registerParse = dependant => {
  parse$7 = dependant;
};

Container$7.registerRule = dependant => {
  Rule$4 = dependant;
};

Container$7.registerAtRule = dependant => {
  AtRule$4 = dependant;
};

Container$7.registerRoot = dependant => {
  Root$6 = dependant;
};

var container = Container$7;
Container$7.default = Container$7;

/* c8 ignore start */
Container$7.rebuild = node => {
  if (node.type === 'atrule') {
    Object.setPrototypeOf(node, AtRule$4.prototype);
  } else if (node.type === 'rule') {
    Object.setPrototypeOf(node, Rule$4.prototype);
  } else if (node.type === 'decl') {
    Object.setPrototypeOf(node, Declaration$N.prototype);
  } else if (node.type === 'comment') {
    Object.setPrototypeOf(node, Comment$3.prototype);
  } else if (node.type === 'root') {
    Object.setPrototypeOf(node, Root$6.prototype);
  }

  node[my$1] = true;

  if (node.nodes) {
    node.nodes.forEach(child => {
      Container$7.rebuild(child);
    });
  }
};

let Container$6 = container;

let LazyResult$4, Processor$5;

class Document$3 extends Container$6 {
  constructor(defaults) {
    // type needs to be passed to super, otherwise child roots won't be normalized correctly
    super({ type: 'document', ...defaults });

    if (!this.nodes) {
      this.nodes = [];
    }
  }

  toResult(opts = {}) {
    let lazy = new LazyResult$4(new Processor$5(), this, opts);

    return lazy.stringify()
  }
}

Document$3.registerLazyResult = dependant => {
  LazyResult$4 = dependant;
};

Document$3.registerProcessor = dependant => {
  Processor$5 = dependant;
};

var document = Document$3;
Document$3.default = Document$3;

class Warning$2 {
  constructor(text, opts = {}) {
    this.type = 'warning';
    this.text = text;

    if (opts.node && opts.node.source) {
      let range = opts.node.rangeBy(opts);
      this.line = range.start.line;
      this.column = range.start.column;
      this.endLine = range.end.line;
      this.endColumn = range.end.column;
    }

    for (let opt in opts) this[opt] = opts[opt];
  }

  toString() {
    if (this.node) {
      return this.node.error(this.text, {
        plugin: this.plugin,
        index: this.index,
        word: this.word
      }).message
    }

    if (this.plugin) {
      return this.plugin + ': ' + this.text
    }

    return this.text
  }
}

var warning = Warning$2;
Warning$2.default = Warning$2;

let Warning$1 = warning;

class Result$3 {
  constructor(processor, root, opts) {
    this.processor = processor;
    this.messages = [];
    this.root = root;
    this.opts = opts;
    this.css = undefined;
    this.map = undefined;
  }

  toString() {
    return this.css
  }

  warn(text, opts = {}) {
    if (!opts.plugin) {
      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {
        opts.plugin = this.lastPlugin.postcssPlugin;
      }
    }

    let warning = new Warning$1(text, opts);
    this.messages.push(warning);

    return warning
  }

  warnings() {
    return this.messages.filter(i => i.type === 'warning')
  }

  get content() {
    return this.css
  }
}

var result$1 = Result$3;
Result$3.default = Result$3;

const SINGLE_QUOTE = "'".charCodeAt(0);
const DOUBLE_QUOTE = '"'.charCodeAt(0);
const BACKSLASH = '\\'.charCodeAt(0);
const SLASH = '/'.charCodeAt(0);
const NEWLINE = '\n'.charCodeAt(0);
const SPACE = ' '.charCodeAt(0);
const FEED = '\f'.charCodeAt(0);
const TAB = '\t'.charCodeAt(0);
const CR = '\r'.charCodeAt(0);
const OPEN_SQUARE = '['.charCodeAt(0);
const CLOSE_SQUARE = ']'.charCodeAt(0);
const OPEN_PARENTHESES = '('.charCodeAt(0);
const CLOSE_PARENTHESES = ')'.charCodeAt(0);
const OPEN_CURLY = '{'.charCodeAt(0);
const CLOSE_CURLY = '}'.charCodeAt(0);
const SEMICOLON = ';'.charCodeAt(0);
const ASTERISK = '*'.charCodeAt(0);
const COLON = ':'.charCodeAt(0);
const AT = '@'.charCodeAt(0);

const RE_AT_END = /[\t\n\f\r "#'()/;[\\\]{}]/g;
const RE_WORD_END = /[\t\n\f\r !"#'():;@[\\\]{}]|\/(?=\*)/g;
const RE_BAD_BRACKET = /.[\n"'(/\\]/;
const RE_HEX_ESCAPE = /[\da-f]/i;

var tokenize = function tokenizer(input, options = {}) {
  let css = input.css.valueOf();
  let ignore = options.ignoreErrors;

  let code, next, quote, content, escape;
  let escaped, escapePos, prev, n, currentToken;

  let length = css.length;
  let pos = 0;
  let buffer = [];
  let returned = [];

  function position() {
    return pos
  }

  function unclosed(what) {
    throw input.error('Unclosed ' + what, pos)
  }

  function endOfFile() {
    return returned.length === 0 && pos >= length
  }

  function nextToken(opts) {
    if (returned.length) return returned.pop()
    if (pos >= length) return

    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false;

    code = css.charCodeAt(pos);

    switch (code) {
      case NEWLINE:
      case SPACE:
      case TAB:
      case CR:
      case FEED: {
        next = pos;
        do {
          next += 1;
          code = css.charCodeAt(next);
        } while (
          code === SPACE ||
          code === NEWLINE ||
          code === TAB ||
          code === CR ||
          code === FEED
        )

        currentToken = ['space', css.slice(pos, next)];
        pos = next - 1;
        break
      }

      case OPEN_SQUARE:
      case CLOSE_SQUARE:
      case OPEN_CURLY:
      case CLOSE_CURLY:
      case COLON:
      case SEMICOLON:
      case CLOSE_PARENTHESES: {
        let controlChar = String.fromCharCode(code);
        currentToken = [controlChar, controlChar, pos];
        break
      }

      case OPEN_PARENTHESES: {
        prev = buffer.length ? buffer.pop()[1] : '';
        n = css.charCodeAt(pos + 1);
        if (
          prev === 'url' &&
          n !== SINGLE_QUOTE &&
          n !== DOUBLE_QUOTE &&
          n !== SPACE &&
          n !== NEWLINE &&
          n !== TAB &&
          n !== FEED &&
          n !== CR
        ) {
          next = pos;
          do {
            escaped = false;
            next = css.indexOf(')', next + 1);
            if (next === -1) {
              if (ignore || ignoreUnclosed) {
                next = pos;
                break
              } else {
                unclosed('bracket');
              }
            }
            escapePos = next;
            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {
              escapePos -= 1;
              escaped = !escaped;
            }
          } while (escaped)

          currentToken = ['brackets', css.slice(pos, next + 1), pos, next];

          pos = next;
        } else {
          next = css.indexOf(')', pos + 1);
          content = css.slice(pos, next + 1);

          if (next === -1 || RE_BAD_BRACKET.test(content)) {
            currentToken = ['(', '(', pos];
          } else {
            currentToken = ['brackets', content, pos, next];
            pos = next;
          }
        }

        break
      }

      case SINGLE_QUOTE:
      case DOUBLE_QUOTE: {
        quote = code === SINGLE_QUOTE ? "'" : '"';
        next = pos;
        do {
          escaped = false;
          next = css.indexOf(quote, next + 1);
          if (next === -1) {
            if (ignore || ignoreUnclosed) {
              next = pos + 1;
              break
            } else {
              unclosed('string');
            }
          }
          escapePos = next;
          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {
            escapePos -= 1;
            escaped = !escaped;
          }
        } while (escaped)

        currentToken = ['string', css.slice(pos, next + 1), pos, next];
        pos = next;
        break
      }

      case AT: {
        RE_AT_END.lastIndex = pos + 1;
        RE_AT_END.test(css);
        if (RE_AT_END.lastIndex === 0) {
          next = css.length - 1;
        } else {
          next = RE_AT_END.lastIndex - 2;
        }

        currentToken = ['at-word', css.slice(pos, next + 1), pos, next];

        pos = next;
        break
      }

      case BACKSLASH: {
        next = pos;
        escape = true;
        while (css.charCodeAt(next + 1) === BACKSLASH) {
          next += 1;
          escape = !escape;
        }
        code = css.charCodeAt(next + 1);
        if (
          escape &&
          code !== SLASH &&
          code !== SPACE &&
          code !== NEWLINE &&
          code !== TAB &&
          code !== CR &&
          code !== FEED
        ) {
          next += 1;
          if (RE_HEX_ESCAPE.test(css.charAt(next))) {
            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {
              next += 1;
            }
            if (css.charCodeAt(next + 1) === SPACE) {
              next += 1;
            }
          }
        }

        currentToken = ['word', css.slice(pos, next + 1), pos, next];

        pos = next;
        break
      }

      default: {
        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {
          next = css.indexOf('*/', pos + 2) + 1;
          if (next === 0) {
            if (ignore || ignoreUnclosed) {
              next = css.length;
            } else {
              unclosed('comment');
            }
          }

          currentToken = ['comment', css.slice(pos, next + 1), pos, next];
          pos = next;
        } else {
          RE_WORD_END.lastIndex = pos + 1;
          RE_WORD_END.test(css);
          if (RE_WORD_END.lastIndex === 0) {
            next = css.length - 1;
          } else {
            next = RE_WORD_END.lastIndex - 2;
          }

          currentToken = ['word', css.slice(pos, next + 1), pos, next];
          buffer.push(currentToken);
          pos = next;
        }

        break
      }
    }

    pos++;
    return currentToken
  }

  function back(token) {
    returned.push(token);
  }

  return {
    back,
    nextToken,
    endOfFile,
    position
  }
};

let Container$5 = container;

class AtRule$3 extends Container$5 {
  constructor(defaults) {
    super(defaults);
    this.type = 'atrule';
  }

  append(...children) {
    if (!this.proxyOf.nodes) this.nodes = [];
    return super.append(...children)
  }

  prepend(...children) {
    if (!this.proxyOf.nodes) this.nodes = [];
    return super.prepend(...children)
  }
}

var atRule = AtRule$3;
AtRule$3.default = AtRule$3;

Container$5.registerAtRule(AtRule$3);

let Container$4 = container;

let LazyResult$3, Processor$4;

class Root$5 extends Container$4 {
  constructor(defaults) {
    super(defaults);
    this.type = 'root';
    if (!this.nodes) this.nodes = [];
  }

  removeChild(child, ignore) {
    let index = this.index(child);

    if (!ignore && index === 0 && this.nodes.length > 1) {
      this.nodes[1].raws.before = this.nodes[index].raws.before;
    }

    return super.removeChild(child)
  }

  normalize(child, sample, type) {
    let nodes = super.normalize(child);

    if (sample) {
      if (type === 'prepend') {
        if (this.nodes.length > 1) {
          sample.raws.before = this.nodes[1].raws.before;
        } else {
          delete sample.raws.before;
        }
      } else if (this.first !== sample) {
        for (let node of nodes) {
          node.raws.before = sample.raws.before;
        }
      }
    }

    return nodes
  }

  toResult(opts = {}) {
    let lazy = new LazyResult$3(new Processor$4(), this, opts);
    return lazy.stringify()
  }
}

Root$5.registerLazyResult = dependant => {
  LazyResult$3 = dependant;
};

Root$5.registerProcessor = dependant => {
  Processor$4 = dependant;
};

var root = Root$5;
Root$5.default = Root$5;

Container$4.registerRoot(Root$5);

let list$7 = {
  split(string, separators, last) {
    let array = [];
    let current = '';
    let split = false;

    let func = 0;
    let inQuote = false;
    let prevQuote = '';
    let escape = false;

    for (let letter of string) {
      if (escape) {
        escape = false;
      } else if (letter === '\\') {
        escape = true;
      } else if (inQuote) {
        if (letter === prevQuote) {
          inQuote = false;
        }
      } else if (letter === '"' || letter === "'") {
        inQuote = true;
        prevQuote = letter;
      } else if (letter === '(') {
        func += 1;
      } else if (letter === ')') {
        if (func > 0) func -= 1;
      } else if (func === 0) {
        if (separators.includes(letter)) split = true;
      }

      if (split) {
        if (current !== '') array.push(current.trim());
        current = '';
        split = false;
      } else {
        current += letter;
      }
    }

    if (last || current !== '') array.push(current.trim());
    return array
  },

  space(string) {
    let spaces = [' ', '\n', '\t'];
    return list$7.split(string, spaces)
  },

  comma(string) {
    return list$7.split(string, [','], true)
  }
};

var list_1 = list$7;
list$7.default = list$7;

let Container$3 = container;
let list$6 = list_1;

class Rule$3 extends Container$3 {
  constructor(defaults) {
    super(defaults);
    this.type = 'rule';
    if (!this.nodes) this.nodes = [];
  }

  get selectors() {
    return list$6.comma(this.selector)
  }

  set selectors(values) {
    let match = this.selector ? this.selector.match(/,\s*/) : null;
    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen');
    this.selector = values.join(sep);
  }
}

var rule = Rule$3;
Rule$3.default = Rule$3;

Container$3.registerRule(Rule$3);

let Declaration$M = declaration$1;
let tokenizer = tokenize;
let Comment$2 = comment;
let AtRule$2 = atRule;
let Root$4 = root;
let Rule$2 = rule;

const SAFE_COMMENT_NEIGHBOR = {
  empty: true,
  space: true
};

function findLastWithPosition(tokens) {
  for (let i = tokens.length - 1; i >= 0; i--) {
    let token = tokens[i];
    let pos = token[3] || token[2];
    if (pos) return pos
  }
}

class Parser$1 {
  constructor(input) {
    this.input = input;

    this.root = new Root$4();
    this.current = this.root;
    this.spaces = '';
    this.semicolon = false;
    this.customProperty = false;

    this.createTokenizer();
    this.root.source = { input, start: { offset: 0, line: 1, column: 1 } };
  }

  createTokenizer() {
    this.tokenizer = tokenizer(this.input);
  }

  parse() {
    let token;
    while (!this.tokenizer.endOfFile()) {
      token = this.tokenizer.nextToken();

      switch (token[0]) {
        case 'space':
          this.spaces += token[1];
          break

        case ';':
          this.freeSemicolon(token);
          break

        case '}':
          this.end(token);
          break

        case 'comment':
          this.comment(token);
          break

        case 'at-word':
          this.atrule(token);
          break

        case '{':
          this.emptyRule(token);
          break

        default:
          this.other(token);
          break
      }
    }
    this.endFile();
  }

  comment(token) {
    let node = new Comment$2();
    this.init(node, token[2]);
    node.source.end = this.getPosition(token[3] || token[2]);

    let text = token[1].slice(2, -2);
    if (/^\s*$/.test(text)) {
      node.text = '';
      node.raws.left = text;
      node.raws.right = '';
    } else {
      let match = text.match(/^(\s*)([^]*\S)(\s*)$/);
      node.text = match[2];
      node.raws.left = match[1];
      node.raws.right = match[3];
    }
  }

  emptyRule(token) {
    let node = new Rule$2();
    this.init(node, token[2]);
    node.selector = '';
    node.raws.between = '';
    this.current = node;
  }

  other(start) {
    let end = false;
    let type = null;
    let colon = false;
    let bracket = null;
    let brackets = [];
    let customProperty = start[1].startsWith('--');

    let tokens = [];
    let token = start;
    while (token) {
      type = token[0];
      tokens.push(token);

      if (type === '(' || type === '[') {
        if (!bracket) bracket = token;
        brackets.push(type === '(' ? ')' : ']');
      } else if (customProperty && colon && type === '{') {
        if (!bracket) bracket = token;
        brackets.push('}');
      } else if (brackets.length === 0) {
        if (type === ';') {
          if (colon) {
            this.decl(tokens, customProperty);
            return
          } else {
            break
          }
        } else if (type === '{') {
          this.rule(tokens);
          return
        } else if (type === '}') {
          this.tokenizer.back(tokens.pop());
          end = true;
          break
        } else if (type === ':') {
          colon = true;
        }
      } else if (type === brackets[brackets.length - 1]) {
        brackets.pop();
        if (brackets.length === 0) bracket = null;
      }

      token = this.tokenizer.nextToken();
    }

    if (this.tokenizer.endOfFile()) end = true;
    if (brackets.length > 0) this.unclosedBracket(bracket);

    if (end && colon) {
      if (!customProperty) {
        while (tokens.length) {
          token = tokens[tokens.length - 1][0];
          if (token !== 'space' && token !== 'comment') break
          this.tokenizer.back(tokens.pop());
        }
      }
      this.decl(tokens, customProperty);
    } else {
      this.unknownWord(tokens);
    }
  }

  rule(tokens) {
    tokens.pop();

    let node = new Rule$2();
    this.init(node, tokens[0][2]);

    node.raws.between = this.spacesAndCommentsFromEnd(tokens);
    this.raw(node, 'selector', tokens);
    this.current = node;
  }

  decl(tokens, customProperty) {
    let node = new Declaration$M();
    this.init(node, tokens[0][2]);

    let last = tokens[tokens.length - 1];
    if (last[0] === ';') {
      this.semicolon = true;
      tokens.pop();
    }

    node.source.end = this.getPosition(
      last[3] || last[2] || findLastWithPosition(tokens)
    );

    while (tokens[0][0] !== 'word') {
      if (tokens.length === 1) this.unknownWord(tokens);
      node.raws.before += tokens.shift()[1];
    }
    node.source.start = this.getPosition(tokens[0][2]);

    node.prop = '';
    while (tokens.length) {
      let type = tokens[0][0];
      if (type === ':' || type === 'space' || type === 'comment') {
        break
      }
      node.prop += tokens.shift()[1];
    }

    node.raws.between = '';

    let token;
    while (tokens.length) {
      token = tokens.shift();

      if (token[0] === ':') {
        node.raws.between += token[1];
        break
      } else {
        if (token[0] === 'word' && /\w/.test(token[1])) {
          this.unknownWord([token]);
        }
        node.raws.between += token[1];
      }
    }

    if (node.prop[0] === '_' || node.prop[0] === '*') {
      node.raws.before += node.prop[0];
      node.prop = node.prop.slice(1);
    }

    let firstSpaces = [];
    let next;
    while (tokens.length) {
      next = tokens[0][0];
      if (next !== 'space' && next !== 'comment') break
      firstSpaces.push(tokens.shift());
    }

    this.precheckMissedSemicolon(tokens);

    for (let i = tokens.length - 1; i >= 0; i--) {
      token = tokens[i];
      if (token[1].toLowerCase() === '!important') {
        node.important = true;
        let string = this.stringFrom(tokens, i);
        string = this.spacesFromEnd(tokens) + string;
        if (string !== ' !important') node.raws.important = string;
        break
      } else if (token[1].toLowerCase() === 'important') {
        let cache = tokens.slice(0);
        let str = '';
        for (let j = i; j > 0; j--) {
          let type = cache[j][0];
          if (str.trim().indexOf('!') === 0 && type !== 'space') {
            break
          }
          str = cache.pop()[1] + str;
        }
        if (str.trim().indexOf('!') === 0) {
          node.important = true;
          node.raws.important = str;
          tokens = cache;
        }
      }

      if (token[0] !== 'space' && token[0] !== 'comment') {
        break
      }
    }

    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment');

    if (hasWord) {
      node.raws.between += firstSpaces.map(i => i[1]).join('');
      firstSpaces = [];
    }
    this.raw(node, 'value', firstSpaces.concat(tokens), customProperty);

    if (node.value.includes(':') && !customProperty) {
      this.checkMissedSemicolon(tokens);
    }
  }

  atrule(token) {
    let node = new AtRule$2();
    node.name = token[1].slice(1);
    if (node.name === '') {
      this.unnamedAtrule(node, token);
    }
    this.init(node, token[2]);

    let type;
    let prev;
    let shift;
    let last = false;
    let open = false;
    let params = [];
    let brackets = [];

    while (!this.tokenizer.endOfFile()) {
      token = this.tokenizer.nextToken();
      type = token[0];

      if (type === '(' || type === '[') {
        brackets.push(type === '(' ? ')' : ']');
      } else if (type === '{' && brackets.length > 0) {
        brackets.push('}');
      } else if (type === brackets[brackets.length - 1]) {
        brackets.pop();
      }

      if (brackets.length === 0) {
        if (type === ';') {
          node.source.end = this.getPosition(token[2]);
          this.semicolon = true;
          break
        } else if (type === '{') {
          open = true;
          break
        } else if (type === '}') {
          if (params.length > 0) {
            shift = params.length - 1;
            prev = params[shift];
            while (prev && prev[0] === 'space') {
              prev = params[--shift];
            }
            if (prev) {
              node.source.end = this.getPosition(prev[3] || prev[2]);
            }
          }
          this.end(token);
          break
        } else {
          params.push(token);
        }
      } else {
        params.push(token);
      }

      if (this.tokenizer.endOfFile()) {
        last = true;
        break
      }
    }

    node.raws.between = this.spacesAndCommentsFromEnd(params);
    if (params.length) {
      node.raws.afterName = this.spacesAndCommentsFromStart(params);
      this.raw(node, 'params', params);
      if (last) {
        token = params[params.length - 1];
        node.source.end = this.getPosition(token[3] || token[2]);
        this.spaces = node.raws.between;
        node.raws.between = '';
      }
    } else {
      node.raws.afterName = '';
      node.params = '';
    }

    if (open) {
      node.nodes = [];
      this.current = node;
    }
  }

  end(token) {
    if (this.current.nodes && this.current.nodes.length) {
      this.current.raws.semicolon = this.semicolon;
    }
    this.semicolon = false;

    this.current.raws.after = (this.current.raws.after || '') + this.spaces;
    this.spaces = '';

    if (this.current.parent) {
      this.current.source.end = this.getPosition(token[2]);
      this.current = this.current.parent;
    } else {
      this.unexpectedClose(token);
    }
  }

  endFile() {
    if (this.current.parent) this.unclosedBlock();
    if (this.current.nodes && this.current.nodes.length) {
      this.current.raws.semicolon = this.semicolon;
    }
    this.current.raws.after = (this.current.raws.after || '') + this.spaces;
  }

  freeSemicolon(token) {
    this.spaces += token[1];
    if (this.current.nodes) {
      let prev = this.current.nodes[this.current.nodes.length - 1];
      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {
        prev.raws.ownSemicolon = this.spaces;
        this.spaces = '';
      }
    }
  }

  // Helpers

  getPosition(offset) {
    let pos = this.input.fromOffset(offset);
    return {
      offset,
      line: pos.line,
      column: pos.col
    }
  }

  init(node, offset) {
    this.current.push(node);
    node.source = {
      start: this.getPosition(offset),
      input: this.input
    };
    node.raws.before = this.spaces;
    this.spaces = '';
    if (node.type !== 'comment') this.semicolon = false;
  }

  raw(node, prop, tokens, customProperty) {
    let token, type;
    let length = tokens.length;
    let value = '';
    let clean = true;
    let next, prev;

    for (let i = 0; i < length; i += 1) {
      token = tokens[i];
      type = token[0];
      if (type === 'space' && i === length - 1 && !customProperty) {
        clean = false;
      } else if (type === 'comment') {
        prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty';
        next = tokens[i + 1] ? tokens[i + 1][0] : 'empty';
        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {
          if (value.slice(-1) === ',') {
            clean = false;
          } else {
            value += token[1];
          }
        } else {
          clean = false;
        }
      } else {
        value += token[1];
      }
    }
    if (!clean) {
      let raw = tokens.reduce((all, i) => all + i[1], '');
      node.raws[prop] = { value, raw };
    }
    node[prop] = value;
  }

  spacesAndCommentsFromEnd(tokens) {
    let lastTokenType;
    let spaces = '';
    while (tokens.length) {
      lastTokenType = tokens[tokens.length - 1][0];
      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break
      spaces = tokens.pop()[1] + spaces;
    }
    return spaces
  }

  spacesAndCommentsFromStart(tokens) {
    let next;
    let spaces = '';
    while (tokens.length) {
      next = tokens[0][0];
      if (next !== 'space' && next !== 'comment') break
      spaces += tokens.shift()[1];
    }
    return spaces
  }

  spacesFromEnd(tokens) {
    let lastTokenType;
    let spaces = '';
    while (tokens.length) {
      lastTokenType = tokens[tokens.length - 1][0];
      if (lastTokenType !== 'space') break
      spaces = tokens.pop()[1] + spaces;
    }
    return spaces
  }

  stringFrom(tokens, from) {
    let result = '';
    for (let i = from; i < tokens.length; i++) {
      result += tokens[i][1];
    }
    tokens.splice(from, tokens.length - from);
    return result
  }

  colon(tokens) {
    let brackets = 0;
    let token, type, prev;
    for (let [i, element] of tokens.entries()) {
      token = element;
      type = token[0];

      if (type === '(') {
        brackets += 1;
      }
      if (type === ')') {
        brackets -= 1;
      }
      if (brackets === 0 && type === ':') {
        if (!prev) {
          this.doubleColon(token);
        } else if (prev[0] === 'word' && prev[1] === 'progid') {
          continue
        } else {
          return i
        }
      }

      prev = token;
    }
    return false
  }

  // Errors

  unclosedBracket(bracket) {
    throw this.input.error(
      'Unclosed bracket',
      { offset: bracket[2] },
      { offset: bracket[2] + 1 }
    )
  }

  unknownWord(tokens) {
    throw this.input.error(
      'Unknown word',
      { offset: tokens[0][2] },
      { offset: tokens[0][2] + tokens[0][1].length }
    )
  }

  unexpectedClose(token) {
    throw this.input.error(
      'Unexpected }',
      { offset: token[2] },
      { offset: token[2] + 1 }
    )
  }

  unclosedBlock() {
    let pos = this.current.source.start;
    throw this.input.error('Unclosed block', pos.line, pos.column)
  }

  doubleColon(token) {
    throw this.input.error(
      'Double colon',
      { offset: token[2] },
      { offset: token[2] + token[1].length }
    )
  }

  unnamedAtrule(node, token) {
    throw this.input.error(
      'At-rule without name',
      { offset: token[2] },
      { offset: token[2] + token[1].length }
    )
  }

  precheckMissedSemicolon(/* tokens */) {
    // Hook for Safe Parser
  }

  checkMissedSemicolon(tokens) {
    let colon = this.colon(tokens);
    if (colon === false) return

    let founded = 0;
    let token;
    for (let j = colon - 1; j >= 0; j--) {
      token = tokens[j];
      if (token[0] !== 'space') {
        founded += 1;
        if (founded === 2) break
      }
    }
    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.
    // Then we need to return the colon after that word token. [3] is the "end" colon of that word.
    // And because we need it after that one we do +1 to get the next one.
    throw this.input.error(
      'Missed semicolon',
      token[0] === 'word' ? token[3] + 1 : token[2]
    )
  }
}

var parser$3 = Parser$1;

let Container$2 = container;
let Parser = parser$3;
let Input$2 = input;

function parse$6(css, opts) {
  let input = new Input$2(css, opts);
  let parser = new Parser(input);
  try {
    parser.parse();
  } catch (e) {
    throw e
  }

  return parser.root
}

var parse_1 = parse$6;
parse$6.default = parse$6;

Container$2.registerParse(parse$6);

let { isClean, my } = symbols;
let MapGenerator$1 = mapGenerator;
let stringify$4 = stringify_1$1;
let Container$1 = container;
let Document$2 = document;
let Result$2 = result$1;
let parse$5 = parse_1;
let Root$3 = root;

const TYPE_TO_CLASS_NAME = {
  document: 'Document',
  root: 'Root',
  atrule: 'AtRule',
  rule: 'Rule',
  decl: 'Declaration',
  comment: 'Comment'
};

const PLUGIN_PROPS = {
  postcssPlugin: true,
  prepare: true,
  Once: true,
  Document: true,
  Root: true,
  Declaration: true,
  Rule: true,
  AtRule: true,
  Comment: true,
  DeclarationExit: true,
  RuleExit: true,
  AtRuleExit: true,
  CommentExit: true,
  RootExit: true,
  DocumentExit: true,
  OnceExit: true
};

const NOT_VISITORS = {
  postcssPlugin: true,
  prepare: true,
  Once: true
};

const CHILDREN = 0;

function isPromise(obj) {
  return typeof obj === 'object' && typeof obj.then === 'function'
}

function getEvents(node) {
  let key = false;
  let type = TYPE_TO_CLASS_NAME[node.type];
  if (node.type === 'decl') {
    key = node.prop.toLowerCase();
  } else if (node.type === 'atrule') {
    key = node.name.toLowerCase();
  }

  if (key && node.append) {
    return [
      type,
      type + '-' + key,
      CHILDREN,
      type + 'Exit',
      type + 'Exit-' + key
    ]
  } else if (key) {
    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]
  } else if (node.append) {
    return [type, CHILDREN, type + 'Exit']
  } else {
    return [type, type + 'Exit']
  }
}

function toStack(node) {
  let events;
  if (node.type === 'document') {
    events = ['Document', CHILDREN, 'DocumentExit'];
  } else if (node.type === 'root') {
    events = ['Root', CHILDREN, 'RootExit'];
  } else {
    events = getEvents(node);
  }

  return {
    node,
    events,
    eventIndex: 0,
    visitors: [],
    visitorIndex: 0,
    iterator: 0
  }
}

function cleanMarks(node) {
  node[isClean] = false;
  if (node.nodes) node.nodes.forEach(i => cleanMarks(i));
  return node
}

let postcss$1 = {};

class LazyResult$2 {
  constructor(processor, css, opts) {
    this.stringified = false;
    this.processed = false;

    let root;
    if (
      typeof css === 'object' &&
      css !== null &&
      (css.type === 'root' || css.type === 'document')
    ) {
      root = cleanMarks(css);
    } else if (css instanceof LazyResult$2 || css instanceof Result$2) {
      root = cleanMarks(css.root);
      if (css.map) {
        if (typeof opts.map === 'undefined') opts.map = {};
        if (!opts.map.inline) opts.map.inline = false;
        opts.map.prev = css.map;
      }
    } else {
      let parser = parse$5;
      if (opts.syntax) parser = opts.syntax.parse;
      if (opts.parser) parser = opts.parser;
      if (parser.parse) parser = parser.parse;

      try {
        root = parser(css, opts);
      } catch (error) {
        this.processed = true;
        this.error = error;
      }

      if (root && !root[my]) {
        /* c8 ignore next 2 */
        Container$1.rebuild(root);
      }
    }

    this.result = new Result$2(processor, root, opts);
    this.helpers = { ...postcss$1, result: this.result, postcss: postcss$1 };
    this.plugins = this.processor.plugins.map(plugin => {
      if (typeof plugin === 'object' && plugin.prepare) {
        return { ...plugin, ...plugin.prepare(this.result) }
      } else {
        return plugin
      }
    });
  }

  get [Symbol.toStringTag]() {
    return 'LazyResult'
  }

  get processor() {
    return this.result.processor
  }

  get opts() {
    return this.result.opts
  }

  get css() {
    return this.stringify().css
  }

  get content() {
    return this.stringify().content
  }

  get map() {
    return this.stringify().map
  }

  get root() {
    return this.sync().root
  }

  get messages() {
    return this.sync().messages
  }

  warnings() {
    return this.sync().warnings()
  }

  toString() {
    return this.css
  }

  then(onFulfilled, onRejected) {
    return this.async().then(onFulfilled, onRejected)
  }

  catch(onRejected) {
    return this.async().catch(onRejected)
  }

  finally(onFinally) {
    return this.async().then(onFinally, onFinally)
  }

  async() {
    if (this.error) return Promise.reject(this.error)
    if (this.processed) return Promise.resolve(this.result)
    if (!this.processing) {
      this.processing = this.runAsync();
    }
    return this.processing
  }

  sync() {
    if (this.error) throw this.error
    if (this.processed) return this.result
    this.processed = true;

    if (this.processing) {
      throw this.getAsyncError()
    }

    for (let plugin of this.plugins) {
      let promise = this.runOnRoot(plugin);
      if (isPromise(promise)) {
        throw this.getAsyncError()
      }
    }

    this.prepareVisitors();
    if (this.hasListener) {
      let root = this.result.root;
      while (!root[isClean]) {
        root[isClean] = true;
        this.walkSync(root);
      }
      if (this.listeners.OnceExit) {
        if (root.type === 'document') {
          for (let subRoot of root.nodes) {
            this.visitSync(this.listeners.OnceExit, subRoot);
          }
        } else {
          this.visitSync(this.listeners.OnceExit, root);
        }
      }
    }

    return this.result
  }

  stringify() {
    if (this.error) throw this.error
    if (this.stringified) return this.result
    this.stringified = true;

    this.sync();

    let opts = this.result.opts;
    let str = stringify$4;
    if (opts.syntax) str = opts.syntax.stringify;
    if (opts.stringifier) str = opts.stringifier;
    if (str.stringify) str = str.stringify;

    let map = new MapGenerator$1(str, this.result.root, this.result.opts);
    let data = map.generate();
    this.result.css = data[0];
    this.result.map = data[1];

    return this.result
  }

  walkSync(node) {
    node[isClean] = true;
    let events = getEvents(node);
    for (let event of events) {
      if (event === CHILDREN) {
        if (node.nodes) {
          node.each(child => {
            if (!child[isClean]) this.walkSync(child);
          });
        }
      } else {
        let visitors = this.listeners[event];
        if (visitors) {
          if (this.visitSync(visitors, node.toProxy())) return
        }
      }
    }
  }

  visitSync(visitors, node) {
    for (let [plugin, visitor] of visitors) {
      this.result.lastPlugin = plugin;
      let promise;
      try {
        promise = visitor(node, this.helpers);
      } catch (e) {
        throw this.handleError(e, node.proxyOf)
      }
      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {
        return true
      }
      if (isPromise(promise)) {
        throw this.getAsyncError()
      }
    }
  }

  runOnRoot(plugin) {
    this.result.lastPlugin = plugin;
    try {
      if (typeof plugin === 'object' && plugin.Once) {
        if (this.result.root.type === 'document') {
          let roots = this.result.root.nodes.map(root =>
            plugin.Once(root, this.helpers)
          );

          if (isPromise(roots[0])) {
            return Promise.all(roots)
          }

          return roots
        }

        return plugin.Once(this.result.root, this.helpers)
      } else if (typeof plugin === 'function') {
        return plugin(this.result.root, this.result)
      }
    } catch (error) {
      throw this.handleError(error)
    }
  }

  getAsyncError() {
    throw new Error('Use process(css).then(cb) to work with async plugins')
  }

  handleError(error, node) {
    let plugin = this.result.lastPlugin;
    try {
      if (node) node.addToError(error);
      this.error = error;
      if (error.name === 'CssSyntaxError' && !error.plugin) {
        error.plugin = plugin.postcssPlugin;
        error.setMessage();
      } else if (plugin.postcssVersion) {
        if ("production" !== 'production') ;
      }
    } catch (err) {
      /* c8 ignore next 3 */
      // eslint-disable-next-line no-console
      if (console && console.error) console.error(err);
    }
    return error
  }

  async runAsync() {
    this.plugin = 0;
    for (let i = 0; i < this.plugins.length; i++) {
      let plugin = this.plugins[i];
      let promise = this.runOnRoot(plugin);
      if (isPromise(promise)) {
        try {
          await promise;
        } catch (error) {
          throw this.handleError(error)
        }
      }
    }

    this.prepareVisitors();
    if (this.hasListener) {
      let root = this.result.root;
      while (!root[isClean]) {
        root[isClean] = true;
        let stack = [toStack(root)];
        while (stack.length > 0) {
          let promise = this.visitTick(stack);
          if (isPromise(promise)) {
            try {
              await promise;
            } catch (e) {
              let node = stack[stack.length - 1].node;
              throw this.handleError(e, node)
            }
          }
        }
      }

      if (this.listeners.OnceExit) {
        for (let [plugin, visitor] of this.listeners.OnceExit) {
          this.result.lastPlugin = plugin;
          try {
            if (root.type === 'document') {
              let roots = root.nodes.map(subRoot =>
                visitor(subRoot, this.helpers)
              );

              await Promise.all(roots);
            } else {
              await visitor(root, this.helpers);
            }
          } catch (e) {
            throw this.handleError(e)
          }
        }
      }
    }

    this.processed = true;
    return this.stringify()
  }

  prepareVisitors() {
    this.listeners = {};
    let add = (plugin, type, cb) => {
      if (!this.listeners[type]) this.listeners[type] = [];
      this.listeners[type].push([plugin, cb]);
    };
    for (let plugin of this.plugins) {
      if (typeof plugin === 'object') {
        for (let event in plugin) {
          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {
            throw new Error(
              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +
                `Try to update PostCSS (${this.processor.version} now).`
            )
          }
          if (!NOT_VISITORS[event]) {
            if (typeof plugin[event] === 'object') {
              for (let filter in plugin[event]) {
                if (filter === '*') {
                  add(plugin, event, plugin[event][filter]);
                } else {
                  add(
                    plugin,
                    event + '-' + filter.toLowerCase(),
                    plugin[event][filter]
                  );
                }
              }
            } else if (typeof plugin[event] === 'function') {
              add(plugin, event, plugin[event]);
            }
          }
        }
      }
    }
    this.hasListener = Object.keys(this.listeners).length > 0;
  }

  visitTick(stack) {
    let visit = stack[stack.length - 1];
    let { node, visitors } = visit;

    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {
      stack.pop();
      return
    }

    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {
      let [plugin, visitor] = visitors[visit.visitorIndex];
      visit.visitorIndex += 1;
      if (visit.visitorIndex === visitors.length) {
        visit.visitors = [];
        visit.visitorIndex = 0;
      }
      this.result.lastPlugin = plugin;
      try {
        return visitor(node.toProxy(), this.helpers)
      } catch (e) {
        throw this.handleError(e, node)
      }
    }

    if (visit.iterator !== 0) {
      let iterator = visit.iterator;
      let child;
      while ((child = node.nodes[node.indexes[iterator]])) {
        node.indexes[iterator] += 1;
        if (!child[isClean]) {
          child[isClean] = true;
          stack.push(toStack(child));
          return
        }
      }
      visit.iterator = 0;
      delete node.indexes[iterator];
    }

    let events = visit.events;
    while (visit.eventIndex < events.length) {
      let event = events[visit.eventIndex];
      visit.eventIndex += 1;
      if (event === CHILDREN) {
        if (node.nodes && node.nodes.length) {
          node[isClean] = true;
          visit.iterator = node.getIterator();
        }
        return
      } else if (this.listeners[event]) {
        visit.visitors = this.listeners[event];
        return
      }
    }
    stack.pop();
  }
}

LazyResult$2.registerPostcss = dependant => {
  postcss$1 = dependant;
};

var lazyResult = LazyResult$2;
LazyResult$2.default = LazyResult$2;

Root$3.registerLazyResult(LazyResult$2);
Document$2.registerLazyResult(LazyResult$2);

let MapGenerator = mapGenerator;
let stringify$3 = stringify_1$1;
let parse$4 = parse_1;
const Result$1 = result$1;

class NoWorkResult$1 {
  constructor(processor, css, opts) {
    css = css.toString();
    this.stringified = false;

    this._processor = processor;
    this._css = css;
    this._opts = opts;
    this._map = undefined;
    let root;

    let str = stringify$3;
    this.result = new Result$1(this._processor, root, this._opts);
    this.result.css = css;

    let self = this;
    Object.defineProperty(this.result, 'root', {
      get() {
        return self.root
      }
    });

    let map = new MapGenerator(str, root, this._opts, css);
    if (map.isMap()) {
      let [generatedCSS, generatedMap] = map.generate();
      if (generatedCSS) {
        this.result.css = generatedCSS;
      }
      if (generatedMap) {
        this.result.map = generatedMap;
      }
    }
  }

  get [Symbol.toStringTag]() {
    return 'NoWorkResult'
  }

  get processor() {
    return this.result.processor
  }

  get opts() {
    return this.result.opts
  }

  get css() {
    return this.result.css
  }

  get content() {
    return this.result.css
  }

  get map() {
    return this.result.map
  }

  get root() {
    if (this._root) {
      return this._root
    }

    let root;
    let parser = parse$4;

    try {
      root = parser(this._css, this._opts);
    } catch (error) {
      this.error = error;
    }

    if (this.error) {
      throw this.error
    } else {
      this._root = root;
      return root
    }
  }

  get messages() {
    return []
  }

  warnings() {
    return []
  }

  toString() {
    return this._css
  }

  then(onFulfilled, onRejected) {

    return this.async().then(onFulfilled, onRejected)
  }

  catch(onRejected) {
    return this.async().catch(onRejected)
  }

  finally(onFinally) {
    return this.async().then(onFinally, onFinally)
  }

  async() {
    if (this.error) return Promise.reject(this.error)
    return Promise.resolve(this.result)
  }

  sync() {
    if (this.error) throw this.error
    return this.result
  }
}

var noWorkResult = NoWorkResult$1;
NoWorkResult$1.default = NoWorkResult$1;

let NoWorkResult = noWorkResult;
let LazyResult$1 = lazyResult;
let Document$1 = document;
let Root$2 = root;

class Processor$3 {
  constructor(plugins = []) {
    this.version = '8.4.16';
    this.plugins = this.normalize(plugins);
  }

  use(plugin) {
    this.plugins = this.plugins.concat(this.normalize([plugin]));
    return this
  }

  process(css, opts = {}) {
    if (
      this.plugins.length === 0 &&
      typeof opts.parser === 'undefined' &&
      typeof opts.stringifier === 'undefined' &&
      typeof opts.syntax === 'undefined'
    ) {
      return new NoWorkResult(this, css, opts)
    } else {
      return new LazyResult$1(this, css, opts)
    }
  }

  normalize(plugins) {
    let normalized = [];
    for (let i of plugins) {
      if (i.postcss === true) {
        i = i();
      } else if (i.postcss) {
        i = i.postcss;
      }

      if (typeof i === 'object' && Array.isArray(i.plugins)) {
        normalized = normalized.concat(i.plugins);
      } else if (typeof i === 'object' && i.postcssPlugin) {
        normalized.push(i);
      } else if (typeof i === 'function') {
        normalized.push(i);
      } else if (typeof i === 'object' && (i.parse || i.stringify)) ; else {
        throw new Error(i + ' is not a PostCSS plugin')
      }
    }
    return normalized
  }
}

var processor$1 = Processor$3;
Processor$3.default = Processor$3;

Root$2.registerProcessor(Processor$3);
Document$1.registerProcessor(Processor$3);

let Declaration$L = declaration$1;
let PreviousMap = previousMap;
let Comment$1 = comment;
let AtRule$1 = atRule;
let Input$1 = input;
let Root$1 = root;
let Rule$1 = rule;

function fromJSON$1(json, inputs) {
  if (Array.isArray(json)) return json.map(n => fromJSON$1(n))

  let { inputs: ownInputs, ...defaults } = json;
  if (ownInputs) {
    inputs = [];
    for (let input of ownInputs) {
      let inputHydrated = { ...input, __proto__: Input$1.prototype };
      if (inputHydrated.map) {
        inputHydrated.map = {
          ...inputHydrated.map,
          __proto__: PreviousMap.prototype
        };
      }
      inputs.push(inputHydrated);
    }
  }
  if (defaults.nodes) {
    defaults.nodes = json.nodes.map(n => fromJSON$1(n, inputs));
  }
  if (defaults.source) {
    let { inputId, ...source } = defaults.source;
    defaults.source = source;
    if (inputId != null) {
      defaults.source.input = inputs[inputId];
    }
  }
  if (defaults.type === 'root') {
    return new Root$1(defaults)
  } else if (defaults.type === 'decl') {
    return new Declaration$L(defaults)
  } else if (defaults.type === 'rule') {
    return new Rule$1(defaults)
  } else if (defaults.type === 'comment') {
    return new Comment$1(defaults)
  } else if (defaults.type === 'atrule') {
    return new AtRule$1(defaults)
  } else {
    throw new Error('Unknown node type: ' + json.type)
  }
}

var fromJSON_1 = fromJSON$1;
fromJSON$1.default = fromJSON$1;

let CssSyntaxError = cssSyntaxError;
let Declaration$K = declaration$1;
let LazyResult = lazyResult;
let Container = container;
let Processor$2 = processor$1;
let stringify$2 = stringify_1$1;
let fromJSON = fromJSON_1;
let Document = document;
let Warning = warning;
let Comment = comment;
let AtRule = atRule;
let Result = result$1;
let Input = input;
let parse$3 = parse_1;
let list$5 = list_1;
let Rule = rule;
let Root = root;
let Node = node_1;

function postcss(...plugins) {
  if (plugins.length === 1 && Array.isArray(plugins[0])) {
    plugins = plugins[0];
  }
  return new Processor$2(plugins)
}

postcss.plugin = function plugin(name, initializer) {
  let warningPrinted = false;
  function creator(...args) {
    // eslint-disable-next-line no-console
    if (console && console.warn && !warningPrinted) {
      warningPrinted = true;
      // eslint-disable-next-line no-console
      console.warn(
        name +
          ': postcss.plugin was deprecated. Migration guide:\n' +
          'https://evilmartians.com/chronicles/postcss-8-plugin-migration'
      );
      if (({}).LANG && ({}).LANG.startsWith('cn')) {
        /* c8 ignore next 7 */
        // eslint-disable-next-line no-console
        console.warn(
          name +
            ': 里面 postcss.plugin 被弃用. 迁移指南:\n' +
            'https://www.w3ctech.com/topic/2226'
        );
      }
    }
    let transformer = initializer(...args);
    transformer.postcssPlugin = name;
    transformer.postcssVersion = new Processor$2().version;
    return transformer
  }

  let cache;
  Object.defineProperty(creator, 'postcss', {
    get() {
      if (!cache) cache = creator();
      return cache
    }
  });

  creator.process = function (css, processOpts, pluginOpts) {
    return postcss([creator(pluginOpts)]).process(css, processOpts)
  };

  return creator
};

postcss.stringify = stringify$2;
postcss.parse = parse$3;
postcss.fromJSON = fromJSON;
postcss.list = list$5;

postcss.comment = defaults => new Comment(defaults);
postcss.atRule = defaults => new AtRule(defaults);
postcss.decl = defaults => new Declaration$K(defaults);
postcss.rule = defaults => new Rule(defaults);
postcss.root = defaults => new Root(defaults);
postcss.document = defaults => new Document(defaults);

postcss.CssSyntaxError = CssSyntaxError;
postcss.Declaration = Declaration$K;
postcss.Container = Container;
postcss.Processor = Processor$2;
postcss.Document = Document;
postcss.Comment = Comment;
postcss.Warning = Warning;
postcss.AtRule = AtRule;
postcss.Result = Result;
postcss.Input = Input;
postcss.Rule = Rule;
postcss.Root = Root;
postcss.Node = Node;

LazyResult.registerPostcss(postcss);

var postcss_1 = postcss;
postcss.default = postcss;

let { list: list$4 } = postcss_1;

/**
 * Throw special error, to tell beniary,
 * that this error is from Autoprefixer.
 */
utils$f.error = function (text) {
  let err = new Error(text);
  err.autoprefixer = true;
  throw err
};

/**
 * Return array, that doesn’t contain duplicates.
 */
utils$f.uniq = function (array) {
  return [...new Set(array)]
};

/**
 * Return "-webkit-" on "-webkit- old"
 */
utils$f.removeNote = function (string) {
  if (!string.includes(' ')) {
    return string
  }

  return string.split(' ')[0]
};

/**
 * Escape RegExp symbols
 */
utils$f.escapeRegexp = function (string) {
  return string.replace(/[$()*+-.?[\\\]^{|}]/g, '\\$&')
};

/**
 * Return regexp to check, that CSS string contain word
 */
utils$f.regexp = function (word, escape = true) {
  if (escape) {
    word = this.escapeRegexp(word);
  }
  return new RegExp(`(^|[\\s,(])(${word}($|[\\s(,]))`, 'gi')
};

/**
 * Change comma list
 */
utils$f.editList = function (value, callback) {
  let origin = list$4.comma(value);
  let changed = callback(origin, []);

  if (origin === changed) {
    return value
  }

  let join = value.match(/,\s*/);
  join = join ? join[0] : ', ';
  return changed.join(join)
};

/**
 * Split the selector into parts.
 * It returns 3 level deep array because selectors can be comma
 * separated (1), space separated (2), and combined (3)
 * @param {String} selector selector string
 * @return {Array<Array<Array>>} 3 level deep array of split selector
 * @see utils.test.js for examples
 */
utils$f.splitSelector = function (selector) {
  return list$4.comma(selector).map(i => {
    return list$4.space(i).map(k => {
      return k.split(/(?=\.|#)/g)
    })
  })
};

/**
 * Return true if a given value only contains numbers.
 * @param {*} value
 * @returns {boolean}
 */
utils$f.isPureNumber = function (value) {
  if (typeof value === 'number') {
    return true
  }
  if (typeof value === 'string') {
    return /^[0-9]+$/.test(value)
  }
  return false
};

let browserslist$1 = browserslist_1;
let agents = unpacker.agents;

let utils$e = utils$f;

class Browsers$3 {
  /**
   * Return all prefixes for default browser data
   */
  static prefixes() {
    if (this.prefixesCache) {
      return this.prefixesCache
    }

    this.prefixesCache = [];
    for (let name in agents) {
      this.prefixesCache.push(`-${agents[name].prefix}-`);
    }

    this.prefixesCache = utils$e
      .uniq(this.prefixesCache)
      .sort((a, b) => b.length - a.length);

    return this.prefixesCache
  }

  /**
   * Check is value contain any possible prefix
   */
  static withPrefix(value) {
    if (!this.prefixesRegexp) {
      this.prefixesRegexp = new RegExp(this.prefixes().join('|'));
    }

    return this.prefixesRegexp.test(value)
  }

  constructor(data, requirements, options, browserslistOpts) {
    this.data = data;
    this.options = options || {};
    this.browserslistOpts = browserslistOpts || {};
    this.selected = this.parse(requirements);
  }

  /**
   * Return browsers selected by requirements
   */
  parse(requirements) {
    let opts = {};
    for (let i in this.browserslistOpts) {
      opts[i] = this.browserslistOpts[i];
    }
    opts.path = this.options.from;
    return browserslist$1(requirements, opts)
  }

  /**
   * Return prefix for selected browser
   */
  prefix(browser) {
    let [name, version] = browser.split(' ');
    let data = this.data[name];

    let prefix = data.prefix_exceptions && data.prefix_exceptions[version];
    if (!prefix) {
      prefix = data.prefix;
    }
    return `-${prefix}-`
  }

  /**
   * Is browser is selected by requirements
   */
  isSelected(browser) {
    return this.selected.includes(browser)
  }
}

var browsers = Browsers$3;

var vendor$2 = {
  prefix(prop) {
    let match = prop.match(/^(-\w+-)/);
    if (match) {
      return match[0]
    }

    return ''
  },

  unprefixed(prop) {
    return prop.replace(/^-\w+-/, '')
  }
};

let Browsers$2 = browsers;
let vendor$1 = vendor$2;
let utils$d = utils$f;

/**
 * Recursively clone objects
 */
function clone(obj, parent) {
  let cloned = new obj.constructor();

  for (let i of Object.keys(obj || {})) {
    let value = obj[i];
    if (i === 'parent' && typeof value === 'object') {
      if (parent) {
        cloned[i] = parent;
      }
    } else if (i === 'source' || i === null) {
      cloned[i] = value;
    } else if (Array.isArray(value)) {
      cloned[i] = value.map(x => clone(x, cloned));
    } else if (
      i !== '_autoprefixerPrefix' &&
      i !== '_autoprefixerValues' &&
      i !== 'proxyCache'
    ) {
      if (typeof value === 'object' && value !== null) {
        value = clone(value, cloned);
      }
      cloned[i] = value;
    }
  }

  return cloned
}

class Prefixer$3 {
  /**
   * Add hack to selected names
   */
  static hack(klass) {
    if (!this.hacks) {
      this.hacks = {};
    }
    return klass.names.map(name => {
      this.hacks[name] = klass;
      return this.hacks[name]
    })
  }

  /**
   * Load hacks for some names
   */
  static load(name, prefixes, all) {
    let Klass = this.hacks && this.hacks[name];
    if (Klass) {
      return new Klass(name, prefixes, all)
    } else {
      return new this(name, prefixes, all)
    }
  }

  /**
   * Clone node and clean autprefixer custom caches
   */
  static clone(node, overrides) {
    let cloned = clone(node);
    for (let name in overrides) {
      cloned[name] = overrides[name];
    }
    return cloned
  }

  constructor(name, prefixes, all) {
    this.prefixes = prefixes;
    this.name = name;
    this.all = all;
  }

  /**
   * Find prefix in node parents
   */
  parentPrefix(node) {
    let prefix;

    if (typeof node._autoprefixerPrefix !== 'undefined') {
      prefix = node._autoprefixerPrefix;
    } else if (node.type === 'decl' && node.prop[0] === '-') {
      prefix = vendor$1.prefix(node.prop);
    } else if (node.type === 'root') {
      prefix = false;
    } else if (
      node.type === 'rule' &&
      node.selector.includes(':-') &&
      /:(-\w+-)/.test(node.selector)
    ) {
      prefix = node.selector.match(/:(-\w+-)/)[1];
    } else if (node.type === 'atrule' && node.name[0] === '-') {
      prefix = vendor$1.prefix(node.name);
    } else {
      prefix = this.parentPrefix(node.parent);
    }

    if (!Browsers$2.prefixes().includes(prefix)) {
      prefix = false;
    }

    node._autoprefixerPrefix = prefix;

    return node._autoprefixerPrefix
  }

  /**
   * Clone node with prefixes
   */
  process(node, result) {
    if (!this.check(node)) {
      return undefined
    }

    let parent = this.parentPrefix(node);

    let prefixes = this.prefixes.filter(
      prefix => !parent || parent === utils$d.removeNote(prefix)
    );

    let added = [];
    for (let prefix of prefixes) {
      if (this.add(node, prefix, added.concat([prefix]), result)) {
        added.push(prefix);
      }
    }

    return added
  }

  /**
   * Shortcut for Prefixer.clone
   */
  clone(node, overrides) {
    return Prefixer$3.clone(node, overrides)
  }
}

var prefixer = Prefixer$3;

let Prefixer$2 = prefixer;
let Browsers$1 = browsers;
let utils$c = utils$f;

class Declaration$J extends Prefixer$2 {
  /**
   * Always true, because we already get prefixer by property name
   */
  check(/* decl */) {
    return true
  }

  /**
   * Return prefixed version of property
   */
  prefixed(prop, prefix) {
    return prefix + prop
  }

  /**
   * Return unprefixed version of property
   */
  normalize(prop) {
    return prop
  }

  /**
   * Check `value`, that it contain other prefixes, rather than `prefix`
   */
  otherPrefixes(value, prefix) {
    for (let other of Browsers$1.prefixes()) {
      if (other === prefix) {
        continue
      }
      if (value.includes(other)) {
        return true
      }
    }
    return false
  }

  /**
   * Set prefix to declaration
   */
  set(decl, prefix) {
    decl.prop = this.prefixed(decl.prop, prefix);
    return decl
  }

  /**
   * Should we use visual cascade for prefixes
   */
  needCascade(decl) {
    if (!decl._autoprefixerCascade) {
      decl._autoprefixerCascade =
        this.all.options.cascade !== false && decl.raw('before').includes('\n');
    }
    return decl._autoprefixerCascade
  }

  /**
   * Return maximum length of possible prefixed property
   */
  maxPrefixed(prefixes, decl) {
    if (decl._autoprefixerMax) {
      return decl._autoprefixerMax
    }

    let max = 0;
    for (let prefix of prefixes) {
      prefix = utils$c.removeNote(prefix);
      if (prefix.length > max) {
        max = prefix.length;
      }
    }
    decl._autoprefixerMax = max;

    return decl._autoprefixerMax
  }

  /**
   * Calculate indentation to create visual cascade
   */
  calcBefore(prefixes, decl, prefix = '') {
    let max = this.maxPrefixed(prefixes, decl);
    let diff = max - utils$c.removeNote(prefix).length;

    let before = decl.raw('before');
    if (diff > 0) {
      before += Array(diff).fill(' ').join('');
    }

    return before
  }

  /**
   * Remove visual cascade
   */
  restoreBefore(decl) {
    let lines = decl.raw('before').split('\n');
    let min = lines[lines.length - 1];

    this.all.group(decl).up(prefixed => {
      let array = prefixed.raw('before').split('\n');
      let last = array[array.length - 1];
      if (last.length < min.length) {
        min = last;
      }
    });

    lines[lines.length - 1] = min;
    decl.raws.before = lines.join('\n');
  }

  /**
   * Clone and insert new declaration
   */
  insert(decl, prefix, prefixes) {
    let cloned = this.set(this.clone(decl), prefix);
    if (!cloned) return undefined

    let already = decl.parent.some(
      i => i.prop === cloned.prop && i.value === cloned.value
    );
    if (already) {
      return undefined
    }

    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
    }
    return decl.parent.insertBefore(decl, cloned)
  }

  /**
   * Did this declaration has this prefix above
   */
  isAlready(decl, prefixed) {
    let already = this.all.group(decl).up(i => i.prop === prefixed);
    if (!already) {
      already = this.all.group(decl).down(i => i.prop === prefixed);
    }
    return already
  }

  /**
   * Clone and add prefixes for declaration
   */
  add(decl, prefix, prefixes, result) {
    let prefixed = this.prefixed(decl.prop, prefix);
    if (
      this.isAlready(decl, prefixed) ||
      this.otherPrefixes(decl.value, prefix)
    ) {
      return undefined
    }
    return this.insert(decl, prefix, prefixes, result)
  }

  /**
   * Add spaces for visual cascade
   */
  process(decl, result) {
    if (!this.needCascade(decl)) {
      super.process(decl, result);
      return
    }

    let prefixes = super.process(decl, result);

    if (!prefixes || !prefixes.length) {
      return
    }

    this.restoreBefore(decl);
    decl.raws.before = this.calcBefore(prefixes, decl);
  }

  /**
   * Return list of prefixed properties to clean old prefixes
   */
  old(prop, prefix) {
    return [this.prefixed(prop, prefix)]
  }
}

var declaration = Declaration$J;

var fraction = {exports: {}};

/**
 * @license Fraction.js v4.2.0 05/03/2022
 * https://www.xarg.org/2014/03/rational-numbers-in-javascript/
 *
 * Copyright (c) 2021, Robert Eisele (robert@xarg.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/

(function (module, exports) {
/**
 *
 * This class offers the possibility to calculate fractions.
 * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.
 *
 * Array/Object form
 * [ 0 => <nominator>, 1 => <denominator> ]
 * [ n => <nominator>, d => <denominator> ]
 *
 * Integer form
 * - Single integer value
 *
 * Double form
 * - Single double value
 *
 * String form
 * 123.456 - a simple double
 * 123/456 - a string fraction
 * 123.'456' - a double with repeating decimal places
 * 123.(456) - synonym
 * 123.45'6' - a double with repeating last place
 * 123.45(6) - synonym
 *
 * Example:
 *
 * var f = new Fraction("9.4'31'");
 * f.mul([-4, 3]).div(4.9);
 *
 */

(function(root) {

  // Maximum search depth for cyclic rational numbers. 2000 should be more than enough.
  // Example: 1/7 = 0.(142857) has 6 repeating decimal places.
  // If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits
  var MAX_CYCLE_LEN = 2000;

  // Parsed data to avoid calling "new" all the time
  var P = {
    "s": 1,
    "n": 0,
    "d": 1
  };

  function assign(n, s) {

    if (isNaN(n = parseInt(n, 10))) {
      throw Fraction['InvalidParameter'];
    }
    return n * s;
  }

  // Creates a new Fraction internally without the need of the bulky constructor
  function newFraction(n, d) {

    if (d === 0) {
      throw Fraction['DivisionByZero'];
    }

    var f = Object.create(Fraction.prototype);
    f["s"] = n < 0 ? -1 : 1;

    n = n < 0 ? -n : n;

    var a = gcd(n, d);

    f["n"] = n / a;
    f["d"] = d / a;
    return f;
  }

  function factorize(num) {

    var factors = {};

    var n = num;
    var i = 2;
    var s = 4;

    while (s <= n) {

      while (n % i === 0) {
        n/= i;
        factors[i] = (factors[i] || 0) + 1;
      }
      s+= 1 + 2 * i++;
    }

    if (n !== num) {
      if (n > 1)
        factors[n] = (factors[n] || 0) + 1;
    } else {
      factors[num] = (factors[num] || 0) + 1;
    }
    return factors;
  }

  var parse = function(p1, p2) {

    var n = 0, d = 1, s = 1;
    var v = 0, w = 0, x = 0, y = 1, z = 1;

    var A = 0, B = 1;
    var C = 1, D = 1;

    var N = 10000000;
    var M;

    if (p1 === undefined || p1 === null) ; else if (p2 !== undefined) {
      n = p1;
      d = p2;
      s = n * d;

      if (n % 1 !== 0 || d % 1 !== 0) {
        throw Fraction['NonIntegerParameter'];
      }

    } else
      switch (typeof p1) {

        case "object":
          {
            if ("d" in p1 && "n" in p1) {
              n = p1["n"];
              d = p1["d"];
              if ("s" in p1)
                n*= p1["s"];
            } else if (0 in p1) {
              n = p1[0];
              if (1 in p1)
                d = p1[1];
            } else {
              throw Fraction['InvalidParameter'];
            }
            s = n * d;
            break;
          }
        case "number":
          {
            if (p1 < 0) {
              s = p1;
              p1 = -p1;
            }

            if (p1 % 1 === 0) {
              n = p1;
            } else if (p1 > 0) { // check for != 0, scale would become NaN (log(0)), which converges really slow

              if (p1 >= 1) {
                z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));
                p1/= z;
              }

              // Using Farey Sequences
              // http://www.johndcook.com/blog/2010/10/20/best-rational-approximation/

              while (B <= N && D <= N) {
                M = (A + C) / (B + D);

                if (p1 === M) {
                  if (B + D <= N) {
                    n = A + C;
                    d = B + D;
                  } else if (D > B) {
                    n = C;
                    d = D;
                  } else {
                    n = A;
                    d = B;
                  }
                  break;

                } else {

                  if (p1 > M) {
                    A+= C;
                    B+= D;
                  } else {
                    C+= A;
                    D+= B;
                  }

                  if (B > N) {
                    n = C;
                    d = D;
                  } else {
                    n = A;
                    d = B;
                  }
                }
              }
              n*= z;
            } else if (isNaN(p1) || isNaN(p2)) {
              d = n = NaN;
            }
            break;
          }
        case "string":
          {
            B = p1.match(/\d+|./g);

            if (B === null)
              throw Fraction['InvalidParameter'];

            if (B[A] === '-') {// Check for minus sign at the beginning
              s = -1;
              A++;
            } else if (B[A] === '+') {// Check for plus sign at the beginning
              A++;
            }

            if (B.length === A + 1) { // Check if it's just a simple number "1234"
              w = assign(B[A++], s);
            } else if (B[A + 1] === '.' || B[A] === '.') { // Check if it's a decimal number

              if (B[A] !== '.') { // Handle 0.5 and .5
                v = assign(B[A++], s);
              }
              A++;

              // Check for decimal places
              if (A + 1 === B.length || B[A + 1] === '(' && B[A + 3] === ')' || B[A + 1] === "'" && B[A + 3] === "'") {
                w = assign(B[A], s);
                y = Math.pow(10, B[A].length);
                A++;
              }

              // Check for repeating places
              if (B[A] === '(' && B[A + 2] === ')' || B[A] === "'" && B[A + 2] === "'") {
                x = assign(B[A + 1], s);
                z = Math.pow(10, B[A + 1].length) - 1;
                A+= 3;
              }

            } else if (B[A + 1] === '/' || B[A + 1] === ':') { // Check for a simple fraction "123/456" or "123:456"
              w = assign(B[A], s);
              y = assign(B[A + 2], 1);
              A+= 3;
            } else if (B[A + 3] === '/' && B[A + 1] === ' ') { // Check for a complex fraction "123 1/2"
              v = assign(B[A], s);
              w = assign(B[A + 2], s);
              y = assign(B[A + 4], 1);
              A+= 5;
            }

            if (B.length <= A) { // Check for more tokens on the stack
              d = y * z;
              s = /* void */
              n = x + d * v + z * w;
              break;
            }

            /* Fall through on error */
          }
        default:
          throw Fraction['InvalidParameter'];
      }

    if (d === 0) {
      throw Fraction['DivisionByZero'];
    }

    P["s"] = s < 0 ? -1 : 1;
    P["n"] = Math.abs(n);
    P["d"] = Math.abs(d);
  };

  function modpow(b, e, m) {

    var r = 1;
    for (; e > 0; b = (b * b) % m, e >>= 1) {

      if (e & 1) {
        r = (r * b) % m;
      }
    }
    return r;
  }


  function cycleLen(n, d) {

    for (; d % 2 === 0;
      d/= 2) {
    }

    for (; d % 5 === 0;
      d/= 5) {
    }

    if (d === 1) // Catch non-cyclic numbers
      return 0;

    // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:
    // 10^(d-1) % d == 1
    // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,
    // as we want to translate the numbers to strings.

    var rem = 10 % d;
    var t = 1;

    for (; rem !== 1; t++) {
      rem = rem * 10 % d;

      if (t > MAX_CYCLE_LEN)
        return 0; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`
    }
    return t;
  }


  function cycleStart(n, d, len) {

    var rem1 = 1;
    var rem2 = modpow(10, len, d);

    for (var t = 0; t < 300; t++) { // s < ~log10(Number.MAX_VALUE)
      // Solve 10^s == 10^(s+t) (mod d)

      if (rem1 === rem2)
        return t;

      rem1 = rem1 * 10 % d;
      rem2 = rem2 * 10 % d;
    }
    return 0;
  }

  function gcd(a, b) {

    if (!a)
      return b;
    if (!b)
      return a;

    while (1) {
      a%= b;
      if (!a)
        return b;
      b%= a;
      if (!b)
        return a;
    }
  }
  /**
   * Module constructor
   *
   * @constructor
   * @param {number|Fraction=} a
   * @param {number=} b
   */
  function Fraction(a, b) {

    parse(a, b);

    if (this instanceof Fraction) {
      a = gcd(P["d"], P["n"]); // Abuse variable a
      this["s"] = P["s"];
      this["n"] = P["n"] / a;
      this["d"] = P["d"] / a;
    } else {
      return newFraction(P['s'] * P['n'], P['d']);
    }
  }

  Fraction['DivisionByZero'] = new Error("Division by Zero");
  Fraction['InvalidParameter'] = new Error("Invalid argument");
  Fraction['NonIntegerParameter'] = new Error("Parameters must be integer");

  Fraction.prototype = {

    "s": 1,
    "n": 0,
    "d": 1,

    /**
     * Calculates the absolute value
     *
     * Ex: new Fraction(-4).abs() => 4
     **/
    "abs": function() {

      return newFraction(this["n"], this["d"]);
    },

    /**
     * Inverts the sign of the current fraction
     *
     * Ex: new Fraction(-4).neg() => 4
     **/
    "neg": function() {

      return newFraction(-this["s"] * this["n"], this["d"]);
    },

    /**
     * Adds two rational numbers
     *
     * Ex: new Fraction({n: 2, d: 3}).add("14.9") => 467 / 30
     **/
    "add": function(a, b) {

      parse(a, b);
      return newFraction(
        this["s"] * this["n"] * P["d"] + P["s"] * this["d"] * P["n"],
        this["d"] * P["d"]
      );
    },

    /**
     * Subtracts two rational numbers
     *
     * Ex: new Fraction({n: 2, d: 3}).add("14.9") => -427 / 30
     **/
    "sub": function(a, b) {

      parse(a, b);
      return newFraction(
        this["s"] * this["n"] * P["d"] - P["s"] * this["d"] * P["n"],
        this["d"] * P["d"]
      );
    },

    /**
     * Multiplies two rational numbers
     *
     * Ex: new Fraction("-17.(345)").mul(3) => 5776 / 111
     **/
    "mul": function(a, b) {

      parse(a, b);
      return newFraction(
        this["s"] * P["s"] * this["n"] * P["n"],
        this["d"] * P["d"]
      );
    },

    /**
     * Divides two rational numbers
     *
     * Ex: new Fraction("-17.(345)").inverse().div(3)
     **/
    "div": function(a, b) {

      parse(a, b);
      return newFraction(
        this["s"] * P["s"] * this["n"] * P["d"],
        this["d"] * P["n"]
      );
    },

    /**
     * Clones the actual object
     *
     * Ex: new Fraction("-17.(345)").clone()
     **/
    "clone": function() {
      return newFraction(this['s'] * this['n'], this['d']);
    },

    /**
     * Calculates the modulo of two rational numbers - a more precise fmod
     *
     * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)
     **/
    "mod": function(a, b) {

      if (isNaN(this['n']) || isNaN(this['d'])) {
        return new Fraction(NaN);
      }

      if (a === undefined) {
        return newFraction(this["s"] * this["n"] % this["d"], 1);
      }

      parse(a, b);
      if (0 === P["n"] && 0 === this["d"]) {
        throw Fraction['DivisionByZero'];
      }

      /*
       * First silly attempt, kinda slow
       *
       return that["sub"]({
       "n": num["n"] * Math.floor((this.n / this.d) / (num.n / num.d)),
       "d": num["d"],
       "s": this["s"]
       });*/

      /*
       * New attempt: a1 / b1 = a2 / b2 * q + r
       * => b2 * a1 = a2 * b1 * q + b1 * b2 * r
       * => (b2 * a1 % a2 * b1) / (b1 * b2)
       */
      return newFraction(
        this["s"] * (P["d"] * this["n"]) % (P["n"] * this["d"]),
        P["d"] * this["d"]
      );
    },

    /**
     * Calculates the fractional gcd of two rational numbers
     *
     * Ex: new Fraction(5,8).gcd(3,7) => 1/56
     */
    "gcd": function(a, b) {

      parse(a, b);

      // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)

      return newFraction(gcd(P["n"], this["n"]) * gcd(P["d"], this["d"]), P["d"] * this["d"]);
    },

    /**
     * Calculates the fractional lcm of two rational numbers
     *
     * Ex: new Fraction(5,8).lcm(3,7) => 15
     */
    "lcm": function(a, b) {

      parse(a, b);

      // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)

      if (P["n"] === 0 && this["n"] === 0) {
        return newFraction(0, 1);
      }
      return newFraction(P["n"] * this["n"], gcd(P["n"], this["n"]) * gcd(P["d"], this["d"]));
    },

    /**
     * Calculates the ceil of a rational number
     *
     * Ex: new Fraction('4.(3)').ceil() => (5 / 1)
     **/
    "ceil": function(places) {

      places = Math.pow(10, places || 0);

      if (isNaN(this["n"]) || isNaN(this["d"])) {
        return new Fraction(NaN);
      }
      return newFraction(Math.ceil(places * this["s"] * this["n"] / this["d"]), places);
    },

    /**
     * Calculates the floor of a rational number
     *
     * Ex: new Fraction('4.(3)').floor() => (4 / 1)
     **/
    "floor": function(places) {

      places = Math.pow(10, places || 0);

      if (isNaN(this["n"]) || isNaN(this["d"])) {
        return new Fraction(NaN);
      }
      return newFraction(Math.floor(places * this["s"] * this["n"] / this["d"]), places);
    },

    /**
     * Rounds a rational numbers
     *
     * Ex: new Fraction('4.(3)').round() => (4 / 1)
     **/
    "round": function(places) {

      places = Math.pow(10, places || 0);

      if (isNaN(this["n"]) || isNaN(this["d"])) {
        return new Fraction(NaN);
      }
      return newFraction(Math.round(places * this["s"] * this["n"] / this["d"]), places);
    },

    /**
     * Gets the inverse of the fraction, means numerator and denominator are exchanged
     *
     * Ex: new Fraction([-3, 4]).inverse() => -4 / 3
     **/
    "inverse": function() {

      return newFraction(this["s"] * this["d"], this["n"]);
    },

    /**
     * Calculates the fraction to some rational exponent, if possible
     *
     * Ex: new Fraction(-1,2).pow(-3) => -8
     */
    "pow": function(a, b) {

      parse(a, b);

      // Trivial case when exp is an integer

      if (P['d'] === 1) {

        if (P['s'] < 0) {
          return newFraction(Math.pow(this['s'] * this["d"], P['n']), Math.pow(this["n"], P['n']));
        } else {
          return newFraction(Math.pow(this['s'] * this["n"], P['n']), Math.pow(this["d"], P['n']));
        }
      }

      // Negative roots become complex
      //     (-a/b)^(c/d) = x
      // <=> (-1)^(c/d) * (a/b)^(c/d) = x
      // <=> (cos(pi) + i*sin(pi))^(c/d) * (a/b)^(c/d) = x         # rotate 1 by 180°
      // <=> (cos(c*pi/d) + i*sin(c*pi/d)) * (a/b)^(c/d) = x       # DeMoivre's formula in Q ( https://proofwiki.org/wiki/De_Moivre%27s_Formula/Rational_Index )
      // From which follows that only for c=0 the root is non-complex. c/d is a reduced fraction, so that sin(c/dpi)=0 occurs for d=1, which is handled by our trivial case.
      if (this['s'] < 0) return null;

      // Now prime factor n and d
      var N = factorize(this['n']);
      var D = factorize(this['d']);

      // Exponentiate and take root for n and d individually
      var n = 1;
      var d = 1;
      for (var k in N) {
        if (k === '1') continue;
        if (k === '0') {
          n = 0;
          break;
        }
        N[k]*= P['n'];

        if (N[k] % P['d'] === 0) {
          N[k]/= P['d'];
        } else return null;
        n*= Math.pow(k, N[k]);
      }

      for (var k in D) {
        if (k === '1') continue;
        D[k]*= P['n'];

        if (D[k] % P['d'] === 0) {
          D[k]/= P['d'];
        } else return null;
        d*= Math.pow(k, D[k]);
      }

      if (P['s'] < 0) {
        return newFraction(d, n);
      }
      return newFraction(n, d);
    },

    /**
     * Check if two rational numbers are the same
     *
     * Ex: new Fraction(19.6).equals([98, 5]);
     **/
    "equals": function(a, b) {

      parse(a, b);
      return this["s"] * this["n"] * P["d"] === P["s"] * P["n"] * this["d"]; // Same as compare() === 0
    },

    /**
     * Check if two rational numbers are the same
     *
     * Ex: new Fraction(19.6).equals([98, 5]);
     **/
    "compare": function(a, b) {

      parse(a, b);
      var t = (this["s"] * this["n"] * P["d"] - P["s"] * P["n"] * this["d"]);
      return (0 < t) - (t < 0);
    },

    "simplify": function(eps) {

      if (isNaN(this['n']) || isNaN(this['d'])) {
        return this;
      }

      eps = eps || 0.001;

      var thisABS = this['abs']();
      var cont = thisABS['toContinued']();

      for (var i = 1; i < cont.length; i++) {

        var s = newFraction(cont[i - 1], 1);
        for (var k = i - 2; k >= 0; k--) {
          s = s['inverse']()['add'](cont[k]);
        }

        if (s['sub'](thisABS)['abs']().valueOf() < eps) {
          return s['mul'](this['s']);
        }
      }
      return this;
    },

    /**
     * Check if two rational numbers are divisible
     *
     * Ex: new Fraction(19.6).divisible(1.5);
     */
    "divisible": function(a, b) {

      parse(a, b);
      return !(!(P["n"] * this["d"]) || ((this["n"] * P["d"]) % (P["n"] * this["d"])));
    },

    /**
     * Returns a decimal representation of the fraction
     *
     * Ex: new Fraction("100.'91823'").valueOf() => 100.91823918239183
     **/
    'valueOf': function() {

      return this["s"] * this["n"] / this["d"];
    },

    /**
     * Returns a string-fraction representation of a Fraction object
     *
     * Ex: new Fraction("1.'3'").toFraction(true) => "4 1/3"
     **/
    'toFraction': function(excludeWhole) {

      var whole, str = "";
      var n = this["n"];
      var d = this["d"];
      if (this["s"] < 0) {
        str+= '-';
      }

      if (d === 1) {
        str+= n;
      } else {

        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {
          str+= whole;
          str+= " ";
          n%= d;
        }

        str+= n;
        str+= '/';
        str+= d;
      }
      return str;
    },

    /**
     * Returns a latex representation of a Fraction object
     *
     * Ex: new Fraction("1.'3'").toLatex() => "\frac{4}{3}"
     **/
    'toLatex': function(excludeWhole) {

      var whole, str = "";
      var n = this["n"];
      var d = this["d"];
      if (this["s"] < 0) {
        str+= '-';
      }

      if (d === 1) {
        str+= n;
      } else {

        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {
          str+= whole;
          n%= d;
        }

        str+= "\\frac{";
        str+= n;
        str+= '}{';
        str+= d;
        str+= '}';
      }
      return str;
    },

    /**
     * Returns an array of continued fraction elements
     *
     * Ex: new Fraction("7/8").toContinued() => [0,1,7]
     */
    'toContinued': function() {

      var t;
      var a = this['n'];
      var b = this['d'];
      var res = [];

      if (isNaN(a) || isNaN(b)) {
        return res;
      }

      do {
        res.push(Math.floor(a / b));
        t = a % b;
        a = b;
        b = t;
      } while (a !== 1);

      return res;
    },

    /**
     * Creates a string representation of a fraction with all digits
     *
     * Ex: new Fraction("100.'91823'").toString() => "100.(91823)"
     **/
    'toString': function(dec) {

      var N = this["n"];
      var D = this["d"];

      if (isNaN(N) || isNaN(D)) {
        return "NaN";
      }

      dec = dec || 15; // 15 = decimal places when no repetation

      var cycLen = cycleLen(N, D); // Cycle length
      var cycOff = cycleStart(N, D, cycLen); // Cycle start

      var str = this['s'] < 0 ? "-" : "";

      str+= N / D | 0;

      N%= D;
      N*= 10;

      if (N)
        str+= ".";

      if (cycLen) {

        for (var i = cycOff; i--;) {
          str+= N / D | 0;
          N%= D;
          N*= 10;
        }
        str+= "(";
        for (var i = cycLen; i--;) {
          str+= N / D | 0;
          N%= D;
          N*= 10;
        }
        str+= ")";
      } else {
        for (var i = dec; N && i--;) {
          str+= N / D | 0;
          N%= D;
          N*= 10;
        }
      }
      return str;
    }
  };

  {
    Object.defineProperty(Fraction, "__esModule", { 'value': true });
    Fraction['default'] = Fraction;
    Fraction['Fraction'] = Fraction;
    module['exports'] = Fraction;
  }

})();
}(fraction));

var openParentheses = "(".charCodeAt(0);
var closeParentheses = ")".charCodeAt(0);
var singleQuote = "'".charCodeAt(0);
var doubleQuote = '"'.charCodeAt(0);
var backslash = "\\".charCodeAt(0);
var slash = "/".charCodeAt(0);
var comma = ",".charCodeAt(0);
var colon = ":".charCodeAt(0);
var star = "*".charCodeAt(0);
var uLower = "u".charCodeAt(0);
var uUpper = "U".charCodeAt(0);
var plus$1 = "+".charCodeAt(0);
var isUnicodeRange = /^[a-f0-9?-]+$/i;

var parse$2 = function(input) {
  var tokens = [];
  var value = input;

  var next,
    quote,
    prev,
    token,
    escape,
    escapePos,
    whitespacePos,
    parenthesesOpenPos;
  var pos = 0;
  var code = value.charCodeAt(pos);
  var max = value.length;
  var stack = [{ nodes: tokens }];
  var balanced = 0;
  var parent;

  var name = "";
  var before = "";
  var after = "";

  while (pos < max) {
    // Whitespaces
    if (code <= 32) {
      next = pos;
      do {
        next += 1;
        code = value.charCodeAt(next);
      } while (code <= 32);
      token = value.slice(pos, next);

      prev = tokens[tokens.length - 1];
      if (code === closeParentheses && balanced) {
        after = token;
      } else if (prev && prev.type === "div") {
        prev.after = token;
        prev.sourceEndIndex += token.length;
      } else if (
        code === comma ||
        code === colon ||
        (code === slash &&
          value.charCodeAt(next + 1) !== star &&
          (!parent ||
            (parent && parent.type === "function" && parent.value !== "calc")))
      ) {
        before = token;
      } else {
        tokens.push({
          type: "space",
          sourceIndex: pos,
          sourceEndIndex: next,
          value: token
        });
      }

      pos = next;

      // Quotes
    } else if (code === singleQuote || code === doubleQuote) {
      next = pos;
      quote = code === singleQuote ? "'" : '"';
      token = {
        type: "string",
        sourceIndex: pos,
        quote: quote
      };
      do {
        escape = false;
        next = value.indexOf(quote, next + 1);
        if (~next) {
          escapePos = next;
          while (value.charCodeAt(escapePos - 1) === backslash) {
            escapePos -= 1;
            escape = !escape;
          }
        } else {
          value += quote;
          next = value.length - 1;
          token.unclosed = true;
        }
      } while (escape);
      token.value = value.slice(pos + 1, next);
      token.sourceEndIndex = token.unclosed ? next : next + 1;
      tokens.push(token);
      pos = next + 1;
      code = value.charCodeAt(pos);

      // Comments
    } else if (code === slash && value.charCodeAt(pos + 1) === star) {
      next = value.indexOf("*/", pos);

      token = {
        type: "comment",
        sourceIndex: pos,
        sourceEndIndex: next + 2
      };

      if (next === -1) {
        token.unclosed = true;
        next = value.length;
        token.sourceEndIndex = next;
      }

      token.value = value.slice(pos + 2, next);
      tokens.push(token);

      pos = next + 2;
      code = value.charCodeAt(pos);

      // Operation within calc
    } else if (
      (code === slash || code === star) &&
      parent &&
      parent.type === "function" &&
      parent.value === "calc"
    ) {
      token = value[pos];
      tokens.push({
        type: "word",
        sourceIndex: pos - before.length,
        sourceEndIndex: pos + token.length,
        value: token
      });
      pos += 1;
      code = value.charCodeAt(pos);

      // Dividers
    } else if (code === slash || code === comma || code === colon) {
      token = value[pos];

      tokens.push({
        type: "div",
        sourceIndex: pos - before.length,
        sourceEndIndex: pos + token.length,
        value: token,
        before: before,
        after: ""
      });
      before = "";

      pos += 1;
      code = value.charCodeAt(pos);

      // Open parentheses
    } else if (openParentheses === code) {
      // Whitespaces after open parentheses
      next = pos;
      do {
        next += 1;
        code = value.charCodeAt(next);
      } while (code <= 32);
      parenthesesOpenPos = pos;
      token = {
        type: "function",
        sourceIndex: pos - name.length,
        value: name,
        before: value.slice(parenthesesOpenPos + 1, next)
      };
      pos = next;

      if (name === "url" && code !== singleQuote && code !== doubleQuote) {
        next -= 1;
        do {
          escape = false;
          next = value.indexOf(")", next + 1);
          if (~next) {
            escapePos = next;
            while (value.charCodeAt(escapePos - 1) === backslash) {
              escapePos -= 1;
              escape = !escape;
            }
          } else {
            value += ")";
            next = value.length - 1;
            token.unclosed = true;
          }
        } while (escape);
        // Whitespaces before closed
        whitespacePos = next;
        do {
          whitespacePos -= 1;
          code = value.charCodeAt(whitespacePos);
        } while (code <= 32);
        if (parenthesesOpenPos < whitespacePos) {
          if (pos !== whitespacePos + 1) {
            token.nodes = [
              {
                type: "word",
                sourceIndex: pos,
                sourceEndIndex: whitespacePos + 1,
                value: value.slice(pos, whitespacePos + 1)
              }
            ];
          } else {
            token.nodes = [];
          }
          if (token.unclosed && whitespacePos + 1 !== next) {
            token.after = "";
            token.nodes.push({
              type: "space",
              sourceIndex: whitespacePos + 1,
              sourceEndIndex: next,
              value: value.slice(whitespacePos + 1, next)
            });
          } else {
            token.after = value.slice(whitespacePos + 1, next);
            token.sourceEndIndex = next;
          }
        } else {
          token.after = "";
          token.nodes = [];
        }
        pos = next + 1;
        token.sourceEndIndex = token.unclosed ? next : pos;
        code = value.charCodeAt(pos);
        tokens.push(token);
      } else {
        balanced += 1;
        token.after = "";
        token.sourceEndIndex = pos + 1;
        tokens.push(token);
        stack.push(token);
        tokens = token.nodes = [];
        parent = token;
      }
      name = "";

      // Close parentheses
    } else if (closeParentheses === code && balanced) {
      pos += 1;
      code = value.charCodeAt(pos);

      parent.after = after;
      parent.sourceEndIndex += after.length;
      after = "";
      balanced -= 1;
      stack[stack.length - 1].sourceEndIndex = pos;
      stack.pop();
      parent = stack[balanced];
      tokens = parent.nodes;

      // Words
    } else {
      next = pos;
      do {
        if (code === backslash) {
          next += 1;
        }
        next += 1;
        code = value.charCodeAt(next);
      } while (
        next < max &&
        !(
          code <= 32 ||
          code === singleQuote ||
          code === doubleQuote ||
          code === comma ||
          code === colon ||
          code === slash ||
          code === openParentheses ||
          (code === star &&
            parent &&
            parent.type === "function" &&
            parent.value === "calc") ||
          (code === slash &&
            parent.type === "function" &&
            parent.value === "calc") ||
          (code === closeParentheses && balanced)
        )
      );
      token = value.slice(pos, next);

      if (openParentheses === code) {
        name = token;
      } else if (
        (uLower === token.charCodeAt(0) || uUpper === token.charCodeAt(0)) &&
        plus$1 === token.charCodeAt(1) &&
        isUnicodeRange.test(token.slice(2))
      ) {
        tokens.push({
          type: "unicode-range",
          sourceIndex: pos,
          sourceEndIndex: next,
          value: token
        });
      } else {
        tokens.push({
          type: "word",
          sourceIndex: pos,
          sourceEndIndex: next,
          value: token
        });
      }

      pos = next;
    }
  }

  for (pos = stack.length - 1; pos; pos -= 1) {
    stack[pos].unclosed = true;
    stack[pos].sourceEndIndex = value.length;
  }

  return stack[0].nodes;
};

var walk$1 = function walk(nodes, cb, bubble) {
  var i, max, node, result;

  for (i = 0, max = nodes.length; i < max; i += 1) {
    node = nodes[i];
    if (!bubble) {
      result = cb(node, i, nodes);
    }

    if (
      result !== false &&
      node.type === "function" &&
      Array.isArray(node.nodes)
    ) {
      walk(node.nodes, cb, bubble);
    }

    if (bubble) {
      cb(node, i, nodes);
    }
  }
};

function stringifyNode(node, custom) {
  var type = node.type;
  var value = node.value;
  var buf;
  var customResult;

  if (custom && (customResult = custom(node)) !== undefined) {
    return customResult;
  } else if (type === "word" || type === "space") {
    return value;
  } else if (type === "string") {
    buf = node.quote || "";
    return buf + value + (node.unclosed ? "" : buf);
  } else if (type === "comment") {
    return "/*" + value + (node.unclosed ? "" : "*/");
  } else if (type === "div") {
    return (node.before || "") + value + (node.after || "");
  } else if (Array.isArray(node.nodes)) {
    buf = stringify$1(node.nodes, custom);
    if (type !== "function") {
      return buf;
    }
    return (
      value +
      "(" +
      (node.before || "") +
      buf +
      (node.after || "") +
      (node.unclosed ? "" : ")")
    );
  }
  return value;
}

function stringify$1(nodes, custom) {
  var result, i;

  if (Array.isArray(nodes)) {
    result = "";
    for (i = nodes.length - 1; ~i; i -= 1) {
      result = stringifyNode(nodes[i], custom) + result;
    }
    return result;
  }
  return stringifyNode(nodes, custom);
}

var stringify_1 = stringify$1;

var minus = "-".charCodeAt(0);
var plus = "+".charCodeAt(0);
var dot = ".".charCodeAt(0);
var exp = "e".charCodeAt(0);
var EXP = "E".charCodeAt(0);

// Check if three code points would start a number
// https://www.w3.org/TR/css-syntax-3/#starts-with-a-number
function likeNumber(value) {
  var code = value.charCodeAt(0);
  var nextCode;

  if (code === plus || code === minus) {
    nextCode = value.charCodeAt(1);

    if (nextCode >= 48 && nextCode <= 57) {
      return true;
    }

    var nextNextCode = value.charCodeAt(2);

    if (nextCode === dot && nextNextCode >= 48 && nextNextCode <= 57) {
      return true;
    }

    return false;
  }

  if (code === dot) {
    nextCode = value.charCodeAt(1);

    if (nextCode >= 48 && nextCode <= 57) {
      return true;
    }

    return false;
  }

  if (code >= 48 && code <= 57) {
    return true;
  }

  return false;
}

// Consume a number
// https://www.w3.org/TR/css-syntax-3/#consume-number
var unit = function(value) {
  var pos = 0;
  var length = value.length;
  var code;
  var nextCode;
  var nextNextCode;

  if (length === 0 || !likeNumber(value)) {
    return false;
  }

  code = value.charCodeAt(pos);

  if (code === plus || code === minus) {
    pos++;
  }

  while (pos < length) {
    code = value.charCodeAt(pos);

    if (code < 48 || code > 57) {
      break;
    }

    pos += 1;
  }

  code = value.charCodeAt(pos);
  nextCode = value.charCodeAt(pos + 1);

  if (code === dot && nextCode >= 48 && nextCode <= 57) {
    pos += 2;

    while (pos < length) {
      code = value.charCodeAt(pos);

      if (code < 48 || code > 57) {
        break;
      }

      pos += 1;
    }
  }

  code = value.charCodeAt(pos);
  nextCode = value.charCodeAt(pos + 1);
  nextNextCode = value.charCodeAt(pos + 2);

  if (
    (code === exp || code === EXP) &&
    ((nextCode >= 48 && nextCode <= 57) ||
      ((nextCode === plus || nextCode === minus) &&
        nextNextCode >= 48 &&
        nextNextCode <= 57))
  ) {
    pos += nextCode === plus || nextCode === minus ? 3 : 2;

    while (pos < length) {
      code = value.charCodeAt(pos);

      if (code < 48 || code > 57) {
        break;
      }

      pos += 1;
    }
  }

  return {
    number: value.slice(0, pos),
    unit: value.slice(pos)
  };
};

var parse$1 = parse$2;
var walk = walk$1;
var stringify = stringify_1;

function ValueParser(value) {
  if (this instanceof ValueParser) {
    this.nodes = parse$1(value);
    return this;
  }
  return new ValueParser(value);
}

ValueParser.prototype.toString = function() {
  return Array.isArray(this.nodes) ? stringify(this.nodes) : "";
};

ValueParser.prototype.walk = function(cb, bubble) {
  walk(this.nodes, cb, bubble);
  return this;
};

ValueParser.unit = unit;

ValueParser.walk = walk;

ValueParser.stringify = stringify;

var lib = ValueParser;

let utils$b = utils$f;

class OldValue$5 {
  constructor(unprefixed, prefixed, string, regexp) {
    this.unprefixed = unprefixed;
    this.prefixed = prefixed;
    this.string = string || prefixed;
    this.regexp = regexp || utils$b.regexp(prefixed);
  }

  /**
   * Check, that value contain old value
   */
  check(value) {
    if (value.includes(this.string)) {
      return !!value.match(this.regexp)
    }
    return false
  }
}

var oldValue = OldValue$5;

let Prefixer$1 = prefixer;
let OldValue$4 = oldValue;
let vendor = vendor$2;
let utils$a = utils$f;

class Value$a extends Prefixer$1 {
  /**
   * Clone decl for each prefixed values
   */
  static save(prefixes, decl) {
    let prop = decl.prop;
    let result = [];

    for (let prefix in decl._autoprefixerValues) {
      let value = decl._autoprefixerValues[prefix];

      if (value === decl.value) {
        continue
      }

      let item;
      let propPrefix = vendor.prefix(prop);

      if (propPrefix === '-pie-') {
        continue
      }

      if (propPrefix === prefix) {
        item = decl.value = value;
        result.push(item);
        continue
      }

      let prefixed = prefixes.prefixed(prop, prefix);
      let rule = decl.parent;

      if (!rule.every(i => i.prop !== prefixed)) {
        result.push(item);
        continue
      }

      let trimmed = value.replace(/\s+/, ' ');
      let already = rule.some(
        i => i.prop === decl.prop && i.value.replace(/\s+/, ' ') === trimmed
      );

      if (already) {
        result.push(item);
        continue
      }

      let cloned = this.clone(decl, { value });
      item = decl.parent.insertBefore(decl, cloned);

      result.push(item);
    }

    return result
  }

  /**
   * Is declaration need to be prefixed
   */
  check(decl) {
    let value = decl.value;
    if (!value.includes(this.name)) {
      return false
    }

    return !!value.match(this.regexp())
  }

  /**
   * Lazy regexp loading
   */
  regexp() {
    return this.regexpCache || (this.regexpCache = utils$a.regexp(this.name))
  }

  /**
   * Add prefix to values in string
   */
  replace(string, prefix) {
    return string.replace(this.regexp(), `$1${prefix}$2`)
  }

  /**
   * Get value with comments if it was not changed
   */
  value(decl) {
    if (decl.raws.value && decl.raws.value.value === decl.value) {
      return decl.raws.value.raw
    } else {
      return decl.value
    }
  }

  /**
   * Save values with next prefixed token
   */
  add(decl, prefix) {
    if (!decl._autoprefixerValues) {
      decl._autoprefixerValues = {};
    }
    let value = decl._autoprefixerValues[prefix] || this.value(decl);

    let before;
    do {
      before = value;
      value = this.replace(value, prefix);
      if (value === false) return
    } while (value !== before)

    decl._autoprefixerValues[prefix] = value;
  }

  /**
   * Return function to fast find prefixed value
   */
  old(prefix) {
    return new OldValue$4(this.name, prefix + this.name)
  }
}

var value = Value$a;

var gridUtils = {};

let parser$2 = lib;
let list$3 = postcss_1.list;

let uniq = utils$f.uniq;
let escapeRegexp = utils$f.escapeRegexp;
let splitSelector = utils$f.splitSelector;

function convert(value) {
  if (
    value &&
    value.length === 2 &&
    value[0] === 'span' &&
    parseInt(value[1], 10) > 0
  ) {
    return [false, parseInt(value[1], 10)]
  }

  if (value && value.length === 1 && parseInt(value[0], 10) > 0) {
    return [parseInt(value[0], 10), false]
  }

  return [false, false]
}

gridUtils.translate = translate;

function translate(values, startIndex, endIndex) {
  let startValue = values[startIndex];
  let endValue = values[endIndex];

  if (!startValue) {
    return [false, false]
  }

  let [start, spanStart] = convert(startValue);
  let [end, spanEnd] = convert(endValue);

  if (start && !endValue) {
    return [start, false]
  }

  if (spanStart && end) {
    return [end - spanStart, spanStart]
  }

  if (start && spanEnd) {
    return [start, spanEnd]
  }

  if (start && end) {
    return [start, end - start]
  }

  return [false, false]
}

gridUtils.parse = parse;

function parse(decl) {
  let node = parser$2(decl.value);

  let values = [];
  let current = 0;
  values[current] = [];

  for (let i of node.nodes) {
    if (i.type === 'div') {
      current += 1;
      values[current] = [];
    } else if (i.type === 'word') {
      values[current].push(i.value);
    }
  }

  return values
}

gridUtils.insertDecl = insertDecl;

function insertDecl(decl, prop, value) {
  if (value && !decl.parent.some(i => i.prop === `-ms-${prop}`)) {
    decl.cloneBefore({
      prop: `-ms-${prop}`,
      value: value.toString()
    });
  }
}

// Track transforms

gridUtils.prefixTrackProp = prefixTrackProp$2;

function prefixTrackProp$2({ prop, prefix }) {
  return prefix + prop.replace('template-', '')
}

function transformRepeat({ nodes }, { gap }) {
  let { count, size } = nodes.reduce(
    (result, node) => {
      if (node.type === 'div' && node.value === ',') {
        result.key = 'size';
      } else {
        result[result.key].push(parser$2.stringify(node));
      }
      return result
    },
    {
      key: 'count',
      size: [],
      count: []
    }
  );

  // insert gap values
  if (gap) {
    size = size.filter(i => i.trim());
    let val = [];
    for (let i = 1; i <= count; i++) {
      size.forEach((item, index) => {
        if (index > 0 || i > 1) {
          val.push(gap);
        }
        val.push(item);
      });
    }

    return val.join(' ')
  }

  return `(${size.join('')})[${count.join('')}]`
}

gridUtils.prefixTrackValue = prefixTrackValue$2;

function prefixTrackValue$2({ value, gap }) {
  let result = parser$2(value).nodes.reduce((nodes, node) => {
    if (node.type === 'function' && node.value === 'repeat') {
      return nodes.concat({
        type: 'word',
        value: transformRepeat(node, { gap })
      })
    }
    if (gap && node.type === 'space') {
      return nodes.concat(
        {
          type: 'space',
          value: ' '
        },
        {
          type: 'word',
          value: gap
        },
        node
      )
    }
    return nodes.concat(node)
  }, []);

  return parser$2.stringify(result)
}

// Parse grid-template-areas

let DOTS = /^\.+$/;

function track(start, end) {
  return { start, end, span: end - start }
}

function getColumns(line) {
  return line.trim().split(/\s+/g)
}

gridUtils.parseGridAreas = parseGridAreas$1;

function parseGridAreas$1({ rows, gap }) {
  return rows.reduce((areas, line, rowIndex) => {
    if (gap.row) rowIndex *= 2;

    if (line.trim() === '') return areas

    getColumns(line).forEach((area, columnIndex) => {
      if (DOTS.test(area)) return

      if (gap.column) columnIndex *= 2;

      if (typeof areas[area] === 'undefined') {
        areas[area] = {
          column: track(columnIndex + 1, columnIndex + 2),
          row: track(rowIndex + 1, rowIndex + 2)
        };
      } else {
        let { column, row } = areas[area];

        column.start = Math.min(column.start, columnIndex + 1);
        column.end = Math.max(column.end, columnIndex + 2);
        column.span = column.end - column.start;

        row.start = Math.min(row.start, rowIndex + 1);
        row.end = Math.max(row.end, rowIndex + 2);
        row.span = row.end - row.start;
      }
    });

    return areas
  }, {})
}

// Parse grid-template

function testTrack(node) {
  return node.type === 'word' && /^\[.+]$/.test(node.value)
}

function verifyRowSize(result) {
  if (result.areas.length > result.rows.length) {
    result.rows.push('auto');
  }
  return result
}

gridUtils.parseTemplate = parseTemplate$1;

function parseTemplate$1({ decl, gap }) {
  let gridTemplate = parser$2(decl.value).nodes.reduce(
    (result, node) => {
      let { type, value } = node;

      if (testTrack(node) || type === 'space') return result

      // area
      if (type === 'string') {
        result = verifyRowSize(result);
        result.areas.push(value);
      }

      // values and function
      if (type === 'word' || type === 'function') {
        result[result.key].push(parser$2.stringify(node));
      }

      // divider(/)
      if (type === 'div' && value === '/') {
        result.key = 'columns';
        result = verifyRowSize(result);
      }

      return result
    },
    {
      key: 'rows',
      columns: [],
      rows: [],
      areas: []
    }
  );

  return {
    areas: parseGridAreas$1({
      rows: gridTemplate.areas,
      gap
    }),
    columns: prefixTrackValue$2({
      value: gridTemplate.columns.join(' '),
      gap: gap.column
    }),
    rows: prefixTrackValue$2({
      value: gridTemplate.rows.join(' '),
      gap: gap.row
    })
  }
}

// Insert parsed grid areas

/**
 * Get an array of -ms- prefixed props and values
 * @param  {Object} [area] area object with column and row data
 * @param  {Boolean} [addRowSpan] should we add grid-column-row value?
 * @param  {Boolean} [addColumnSpan] should we add grid-column-span value?
 * @return {Array<Object>}
 */
function getMSDecls(area, addRowSpan = false, addColumnSpan = false) {
  let result = [
    {
      prop: '-ms-grid-row',
      value: String(area.row.start)
    }
  ];
  if (area.row.span > 1 || addRowSpan) {
    result.push({
      prop: '-ms-grid-row-span',
      value: String(area.row.span)
    });
  }
  result.push({
    prop: '-ms-grid-column',
    value: String(area.column.start)
  });
  if (area.column.span > 1 || addColumnSpan) {
    result.push({
      prop: '-ms-grid-column-span',
      value: String(area.column.span)
    });
  }
  return result
}

function getParentMedia(parent) {
  if (parent.type === 'atrule' && parent.name === 'media') {
    return parent
  }
  if (!parent.parent) {
    return false
  }
  return getParentMedia(parent.parent)
}

/**
 * change selectors for rules with duplicate grid-areas.
 * @param  {Array<Rule>} rules
 * @param  {Array<String>} templateSelectors
 * @return {Array<Rule>} rules with changed selectors
 */
function changeDuplicateAreaSelectors(ruleSelectors, templateSelectors) {
  ruleSelectors = ruleSelectors.map(selector => {
    let selectorBySpace = list$3.space(selector);
    let selectorByComma = list$3.comma(selector);

    if (selectorBySpace.length > selectorByComma.length) {
      selector = selectorBySpace.slice(-1).join('');
    }
    return selector
  });

  return ruleSelectors.map(ruleSelector => {
    let newSelector = templateSelectors.map((tplSelector, index) => {
      let space = index === 0 ? '' : ' ';
      return `${space}${tplSelector} > ${ruleSelector}`
    });

    return newSelector
  })
}

/**
 * check if selector of rules are equal
 * @param  {Rule} ruleA
 * @param  {Rule} ruleB
 * @return {Boolean}
 */
function selectorsEqual(ruleA, ruleB) {
  return ruleA.selectors.some(sel => {
    return ruleB.selectors.includes(sel)
  })
}

/**
 * Parse data from all grid-template(-areas) declarations
 * @param  {Root} css css root
 * @return {Object} parsed data
 */
function parseGridTemplatesData(css) {
  let parsed = [];

  // we walk through every grid-template(-areas) declaration and store
  // data with the same area names inside the item
  css.walkDecls(/grid-template(-areas)?$/, d => {
    let rule = d.parent;
    let media = getParentMedia(rule);
    let gap = getGridGap$3(d);
    let inheritedGap = inheritGridGap$3(d, gap);
    let { areas } = parseTemplate$1({ decl: d, gap: inheritedGap || gap });
    let areaNames = Object.keys(areas);

    // skip node if it doesn't have areas
    if (areaNames.length === 0) {
      return true
    }

    // check parsed array for item that include the same area names
    // return index of that item
    let index = parsed.reduce((acc, { allAreas }, idx) => {
      let hasAreas = allAreas && areaNames.some(area => allAreas.includes(area));
      return hasAreas ? idx : acc
    }, null);

    if (index !== null) {
      // index is found, add the grid-template data to that item
      let { allAreas, rules } = parsed[index];

      // check if rule has no duplicate area names
      let hasNoDuplicates = rules.some(r => {
        return r.hasDuplicates === false && selectorsEqual(r, rule)
      });

      let duplicatesFound = false;

      // check need to gather all duplicate area names
      let duplicateAreaNames = rules.reduce((acc, r) => {
        if (!r.params && selectorsEqual(r, rule)) {
          duplicatesFound = true;
          return r.duplicateAreaNames
        }
        if (!duplicatesFound) {
          areaNames.forEach(name => {
            if (r.areas[name]) {
              acc.push(name);
            }
          });
        }
        return uniq(acc)
      }, []);

      // update grid-row/column-span values for areas with duplicate
      // area names. @see #1084 and #1146
      rules.forEach(r => {
        areaNames.forEach(name => {
          let area = r.areas[name];
          if (area && area.row.span !== areas[name].row.span) {
            areas[name].row.updateSpan = true;
          }

          if (area && area.column.span !== areas[name].column.span) {
            areas[name].column.updateSpan = true;
          }
        });
      });

      parsed[index].allAreas = uniq([...allAreas, ...areaNames]);
      parsed[index].rules.push({
        hasDuplicates: !hasNoDuplicates,
        params: media.params,
        selectors: rule.selectors,
        node: rule,
        duplicateAreaNames,
        areas
      });
    } else {
      // index is NOT found, push the new item to the parsed array
      parsed.push({
        allAreas: areaNames,
        areasCount: 0,
        rules: [
          {
            hasDuplicates: false,
            duplicateRules: [],
            params: media.params,
            selectors: rule.selectors,
            node: rule,
            duplicateAreaNames: [],
            areas
          }
        ]
      });
    }

    return undefined
  });

  return parsed
}

/**
 * insert prefixed grid-area declarations
 * @param  {Root}  css css root
 * @param  {Function} isDisabled check if the rule is disabled
 * @return {void}
 */
gridUtils.insertAreas = insertAreas$1;

function insertAreas$1(css, isDisabled) {
  // parse grid-template declarations
  let gridTemplatesData = parseGridTemplatesData(css);

  // return undefined if no declarations found
  if (gridTemplatesData.length === 0) {
    return undefined
  }

  // we need to store the rules that we will insert later
  let rulesToInsert = {};

  css.walkDecls('grid-area', gridArea => {
    let gridAreaRule = gridArea.parent;
    let hasPrefixedRow = gridAreaRule.first.prop === '-ms-grid-row';
    let gridAreaMedia = getParentMedia(gridAreaRule);

    if (isDisabled(gridArea)) {
      return undefined
    }

    let gridAreaRuleIndex = css.index(gridAreaMedia || gridAreaRule);

    let value = gridArea.value;
    // found the data that matches grid-area identifier
    let data = gridTemplatesData.filter(d => d.allAreas.includes(value))[0];

    if (!data) {
      return true
    }

    let lastArea = data.allAreas[data.allAreas.length - 1];
    let selectorBySpace = list$3.space(gridAreaRule.selector);
    let selectorByComma = list$3.comma(gridAreaRule.selector);
    let selectorIsComplex =
      selectorBySpace.length > 1 &&
      selectorBySpace.length > selectorByComma.length;

    // prevent doubling of prefixes
    if (hasPrefixedRow) {
      return false
    }

    // create the empty object with the key as the last area name
    // e.g if we have templates with "a b c" values, "c" will be the last area
    if (!rulesToInsert[lastArea]) {
      rulesToInsert[lastArea] = {};
    }

    let lastRuleIsSet = false;

    // walk through every grid-template rule data
    for (let rule of data.rules) {
      let area = rule.areas[value];
      let hasDuplicateName = rule.duplicateAreaNames.includes(value);

      // if we can't find the area name, update lastRule and continue
      if (!area) {
        let lastRule = rulesToInsert[lastArea].lastRule;
        let lastRuleIndex;
        if (lastRule) {
          lastRuleIndex = css.index(lastRule);
        } else {
          /* c8 ignore next 2 */
          lastRuleIndex = -1;
        }

        if (gridAreaRuleIndex > lastRuleIndex) {
          rulesToInsert[lastArea].lastRule = gridAreaMedia || gridAreaRule;
        }
        continue
      }

      // for grid-templates inside media rule we need to create empty
      // array to push prefixed grid-area rules later
      if (rule.params && !rulesToInsert[lastArea][rule.params]) {
        rulesToInsert[lastArea][rule.params] = [];
      }

      if ((!rule.hasDuplicates || !hasDuplicateName) && !rule.params) {
        // grid-template has no duplicates and not inside media rule

        getMSDecls(area, false, false)
          .reverse()
          .forEach(i =>
            gridAreaRule.prepend(
              Object.assign(i, {
                raws: {
                  between: gridArea.raws.between
                }
              })
            )
          );

        rulesToInsert[lastArea].lastRule = gridAreaRule;
        lastRuleIsSet = true;
      } else if (rule.hasDuplicates && !rule.params && !selectorIsComplex) {
        // grid-template has duplicates and not inside media rule
        let cloned = gridAreaRule.clone();
        cloned.removeAll();

        getMSDecls(area, area.row.updateSpan, area.column.updateSpan)
          .reverse()
          .forEach(i =>
            cloned.prepend(
              Object.assign(i, {
                raws: {
                  between: gridArea.raws.between
                }
              })
            )
          );

        cloned.selectors = changeDuplicateAreaSelectors(
          cloned.selectors,
          rule.selectors
        );

        if (rulesToInsert[lastArea].lastRule) {
          rulesToInsert[lastArea].lastRule.after(cloned);
        }
        rulesToInsert[lastArea].lastRule = cloned;
        lastRuleIsSet = true;
      } else if (
        rule.hasDuplicates &&
        !rule.params &&
        selectorIsComplex &&
        gridAreaRule.selector.includes(rule.selectors[0])
      ) {
        // grid-template has duplicates and not inside media rule
        // and the selector is complex
        gridAreaRule.walkDecls(/-ms-grid-(row|column)/, d => d.remove());
        getMSDecls(area, area.row.updateSpan, area.column.updateSpan)
          .reverse()
          .forEach(i =>
            gridAreaRule.prepend(
              Object.assign(i, {
                raws: {
                  between: gridArea.raws.between
                }
              })
            )
          );
      } else if (rule.params) {
        // grid-template is inside media rule
        // if we're inside media rule, we need to store prefixed rules
        // inside rulesToInsert object to be able to preserve the order of media
        // rules and merge them easily
        let cloned = gridAreaRule.clone();
        cloned.removeAll();

        getMSDecls(area, area.row.updateSpan, area.column.updateSpan)
          .reverse()
          .forEach(i =>
            cloned.prepend(
              Object.assign(i, {
                raws: {
                  between: gridArea.raws.between
                }
              })
            )
          );

        if (rule.hasDuplicates && hasDuplicateName) {
          cloned.selectors = changeDuplicateAreaSelectors(
            cloned.selectors,
            rule.selectors
          );
        }

        cloned.raws = rule.node.raws;

        if (css.index(rule.node.parent) > gridAreaRuleIndex) {
          // append the prefixed rules right inside media rule
          // with grid-template
          rule.node.parent.append(cloned);
        } else {
          // store the rule to insert later
          rulesToInsert[lastArea][rule.params].push(cloned);
        }

        // set new rule as last rule ONLY if we didn't set lastRule for
        // this grid-area before
        if (!lastRuleIsSet) {
          rulesToInsert[lastArea].lastRule = gridAreaMedia || gridAreaRule;
        }
      }
    }

    return undefined
  });

  // append stored rules inside the media rules
  Object.keys(rulesToInsert).forEach(area => {
    let data = rulesToInsert[area];
    let lastRule = data.lastRule;
    Object.keys(data)
      .reverse()
      .filter(p => p !== 'lastRule')
      .forEach(params => {
        if (data[params].length > 0 && lastRule) {
          lastRule.after({ name: 'media', params });
          lastRule.next().append(data[params]);
        }
      });
  });

  return undefined
}

/**
 * Warn user if grid area identifiers are not found
 * @param  {Object} areas
 * @param  {Declaration} decl
 * @param  {Result} result
 * @return {void}
 */
gridUtils.warnMissedAreas = warnMissedAreas$2;

function warnMissedAreas$2(areas, decl, result) {
  let missed = Object.keys(areas);

  decl.root().walkDecls('grid-area', gridArea => {
    missed = missed.filter(e => e !== gridArea.value);
  });

  if (missed.length > 0) {
    decl.warn(result, 'Can not find grid areas: ' + missed.join(', '));
  }

  return undefined
}

/**
 * compare selectors with grid-area rule and grid-template rule
 * show warning if grid-template selector is not found
 * (this function used for grid-area rule)
 * @param  {Declaration} decl
 * @param  {Result} result
 * @return {void}
 */
gridUtils.warnTemplateSelectorNotFound = warnTemplateSelectorNotFound;

function warnTemplateSelectorNotFound(decl, result) {
  let rule = decl.parent;
  let root = decl.root();
  let duplicatesFound = false;

  // slice selector array. Remove the last part (for comparison)
  let slicedSelectorArr = list$3
    .space(rule.selector)
    .filter(str => str !== '>')
    .slice(0, -1);

  // we need to compare only if selector is complex.
  // e.g '.grid-cell' is simple, but '.parent > .grid-cell' is complex
  if (slicedSelectorArr.length > 0) {
    let gridTemplateFound = false;
    let foundAreaSelector = null;

    root.walkDecls(/grid-template(-areas)?$/, d => {
      let parent = d.parent;
      let templateSelectors = parent.selectors;

      let { areas } = parseTemplate$1({ decl: d, gap: getGridGap$3(d) });
      let hasArea = areas[decl.value];

      // find the the matching selectors
      for (let tplSelector of templateSelectors) {
        if (gridTemplateFound) {
          break
        }
        let tplSelectorArr = list$3.space(tplSelector).filter(str => str !== '>');

        gridTemplateFound = tplSelectorArr.every(
          (item, idx) => item === slicedSelectorArr[idx]
        );
      }

      if (gridTemplateFound || !hasArea) {
        return true
      }

      if (!foundAreaSelector) {
        foundAreaSelector = parent.selector;
      }

      // if we found the duplicate area with different selector
      if (foundAreaSelector && foundAreaSelector !== parent.selector) {
        duplicatesFound = true;
      }

      return undefined
    });

    // warn user if we didn't find template
    if (!gridTemplateFound && duplicatesFound) {
      decl.warn(
        result,
        'Autoprefixer cannot find a grid-template ' +
          `containing the duplicate grid-area "${decl.value}" ` +
          `with full selector matching: ${slicedSelectorArr.join(' ')}`
      );
    }
  }
}

/**
 * warn user if both grid-area and grid-(row|column)
 * declarations are present in the same rule
 * @param  {Declaration} decl
 * @param  {Result} result
 * @return {void}
 */
gridUtils.warnIfGridRowColumnExists = warnIfGridRowColumnExists;

function warnIfGridRowColumnExists(decl, result) {
  let rule = decl.parent;
  let decls = [];
  rule.walkDecls(/^grid-(row|column)/, d => {
    if (
      !d.prop.endsWith('-end') &&
      !d.value.startsWith('span') &&
      !d.prop.endsWith('-gap')
    ) {
      decls.push(d);
    }
  });
  if (decls.length > 0) {
    decls.forEach(d => {
      d.warn(
        result,
        'You already have a grid-area declaration present in the rule. ' +
          `You should use either grid-area or ${d.prop}, not both`
      );
    });
  }

  return undefined
}

// Gap utils

gridUtils.getGridGap = getGridGap$3;

function getGridGap$3(decl) {
  let gap = {};

  // try to find gap
  let testGap = /^(grid-)?((row|column)-)?gap$/;
  decl.parent.walkDecls(testGap, ({ prop, value }) => {
    if (/^(grid-)?gap$/.test(prop)) {
      let [row, , column] = parser$2(value).nodes;

      gap.row = row && parser$2.stringify(row);
      gap.column = column ? parser$2.stringify(column) : gap.row;
    }
    if (/^(grid-)?row-gap$/.test(prop)) gap.row = value;
    if (/^(grid-)?column-gap$/.test(prop)) gap.column = value;
  });

  return gap
}

/**
 * parse media parameters (for example 'min-width: 500px')
 * @param  {String} params parameter to parse
 * @return {}
 */
function parseMediaParams(params) {
  if (!params) {
    return []
  }
  let parsed = parser$2(params);
  let prop;
  let value;

  parsed.walk(node => {
    if (node.type === 'word' && /min|max/g.test(node.value)) {
      prop = node.value;
    } else if (node.value.includes('px')) {
      value = parseInt(node.value.replace(/\D/g, ''));
    }
  });

  return [prop, value]
}

/**
 * Compare the selectors and decide if we
 * need to inherit gap from compared selector or not.
 * @type {String} selA
 * @type {String} selB
 * @return {Boolean}
 */
function shouldInheritGap(selA, selB) {
  let result;

  // get arrays of selector split in 3-deep array
  let splitSelectorArrA = splitSelector(selA);
  let splitSelectorArrB = splitSelector(selB);

  if (splitSelectorArrA[0].length < splitSelectorArrB[0].length) {
    // abort if selectorA has lower descendant specificity then selectorB
    // (e.g '.grid' and '.hello .world .grid')
    return false
  } else if (splitSelectorArrA[0].length > splitSelectorArrB[0].length) {
    // if selectorA has higher descendant specificity then selectorB
    // (e.g '.foo .bar .grid' and '.grid')

    let idx = splitSelectorArrA[0].reduce((res, [item], index) => {
      let firstSelectorPart = splitSelectorArrB[0][0][0];
      if (item === firstSelectorPart) {
        return index
      }
      return false
    }, false);

    if (idx) {
      result = splitSelectorArrB[0].every((arr, index) => {
        return arr.every(
          (part, innerIndex) =>
            // because selectorA has more space elements, we need to slice
            // selectorA array by 'idx' number to compare them
            splitSelectorArrA[0].slice(idx)[index][innerIndex] === part
        )
      });
    }
  } else {
    // if selectorA has the same descendant specificity as selectorB
    // this condition covers cases such as: '.grid.foo.bar' and '.grid'
    result = splitSelectorArrB.some(byCommaArr => {
      return byCommaArr.every((bySpaceArr, index) => {
        return bySpaceArr.every(
          (part, innerIndex) => splitSelectorArrA[0][index][innerIndex] === part
        )
      })
    });
  }

  return result
}
/**
 * inherit grid gap values from the closest rule above
 * with the same selector
 * @param  {Declaration} decl
 * @param  {Object} gap gap values
 * @return {Object | Boolean} return gap values or false (if not found)
 */
gridUtils.inheritGridGap = inheritGridGap$3;

function inheritGridGap$3(decl, gap) {
  let rule = decl.parent;
  let mediaRule = getParentMedia(rule);
  let root = rule.root();

  // get an array of selector split in 3-deep array
  let splitSelectorArr = splitSelector(rule.selector);

  // abort if the rule already has gaps
  if (Object.keys(gap).length > 0) {
    return false
  }

  // e.g ['min-width']
  let [prop] = parseMediaParams(mediaRule.params);

  let lastBySpace = splitSelectorArr[0];

  // get escaped value from the selector
  // if we have '.grid-2.foo.bar' selector, will be '\.grid\-2'
  let escaped = escapeRegexp(lastBySpace[lastBySpace.length - 1][0]);

  let regexp = new RegExp(`(${escaped}$)|(${escaped}[,.])`);

  // find the closest rule with the same selector
  let closestRuleGap;
  root.walkRules(regexp, r => {
    let gridGap;

    // abort if are checking the same rule
    if (rule.toString() === r.toString()) {
      return false
    }

    // find grid-gap values
    r.walkDecls('grid-gap', d => (gridGap = getGridGap$3(d)));

    // skip rule without gaps
    if (!gridGap || Object.keys(gridGap).length === 0) {
      return true
    }

    // skip rules that should not be inherited from
    if (!shouldInheritGap(rule.selector, r.selector)) {
      return true
    }

    let media = getParentMedia(r);
    if (media) {
      // if we are inside media, we need to check that media props match
      // e.g ('min-width' === 'min-width')
      let propToCompare = parseMediaParams(media.params)[0];
      if (propToCompare === prop) {
        closestRuleGap = gridGap;
        return true
      }
    } else {
      closestRuleGap = gridGap;
      return true
    }

    return undefined
  });

  // if we find the closest gap object
  if (closestRuleGap && Object.keys(closestRuleGap).length > 0) {
    return closestRuleGap
  }
  return false
}

gridUtils.warnGridGap = warnGridGap$2;

function warnGridGap$2({ gap, hasColumns, decl, result }) {
  let hasBothGaps = gap.row && gap.column;
  if (!hasColumns && (hasBothGaps || (gap.column && !gap.row))) {
    delete gap.column;
    decl.warn(
      result,
      'Can not implement grid-gap without grid-template-columns'
    );
  }
}

/**
 * normalize the grid-template-rows/columns values
 * @param  {String} str grid-template-rows/columns value
 * @return {Array} normalized array with values
 * @example
 * let normalized = normalizeRowColumn('1fr repeat(2, 20px 50px) 1fr')
 * normalized // <= ['1fr', '20px', '50px', '20px', '50px', '1fr']
 */
function normalizeRowColumn(str) {
  let normalized = parser$2(str).nodes.reduce((result, node) => {
    if (node.type === 'function' && node.value === 'repeat') {
      let key = 'count';

      let [count, value] = node.nodes.reduce(
        (acc, n) => {
          if (n.type === 'word' && key === 'count') {
            acc[0] = Math.abs(parseInt(n.value));
            return acc
          }
          if (n.type === 'div' && n.value === ',') {
            key = 'value';
            return acc
          }
          if (key === 'value') {
            acc[1] += parser$2.stringify(n);
          }
          return acc
        },
        [0, '']
      );

      if (count) {
        for (let i = 0; i < count; i++) {
          result.push(value);
        }
      }

      return result
    }
    if (node.type === 'space') {
      return result
    }
    return result.concat(parser$2.stringify(node))
  }, []);

  return normalized
}

gridUtils.autoplaceGridItems = autoplaceGridItems$1;

/**
 * Autoplace grid items
 * @param {Declaration} decl
 * @param {Result} result
 * @param {Object} gap gap values
 * @param {String} autoflowValue grid-auto-flow value
 * @return {void}
 * @see https://github.com/postcss/autoprefixer/issues/1148
 */
function autoplaceGridItems$1(decl, result, gap, autoflowValue = 'row') {
  let { parent } = decl;

  let rowDecl = parent.nodes.find(i => i.prop === 'grid-template-rows');
  let rows = normalizeRowColumn(rowDecl.value);
  let columns = normalizeRowColumn(decl.value);

  // Build array of area names with dummy values. If we have 3 columns and
  // 2 rows, filledRows will be equal to ['1 2 3', '4 5 6']
  let filledRows = rows.map((_, rowIndex) => {
    return Array.from(
      { length: columns.length },
      (v, k) => k + rowIndex * columns.length + 1
    ).join(' ')
  });

  let areas = parseGridAreas$1({ rows: filledRows, gap });
  let keys = Object.keys(areas);
  let items = keys.map(i => areas[i]);

  // Change the order of cells if grid-auto-flow value is 'column'
  if (autoflowValue.includes('column')) {
    items = items.sort((a, b) => a.column.start - b.column.start);
  }

  // Insert new rules
  items.reverse().forEach((item, index) => {
    let { column, row } = item;
    let nodeSelector = parent.selectors
      .map(sel => sel + ` > *:nth-child(${keys.length - index})`)
      .join(', ');

    // create new rule
    let node = parent.clone().removeAll();

    // change rule selector
    node.selector = nodeSelector;

    // insert prefixed row/column values
    node.append({ prop: '-ms-grid-row', value: row.start });
    node.append({ prop: '-ms-grid-column', value: column.start });

    // insert rule
    parent.after(node);
  });

  return undefined
}

let parser$1 = lib;

let Value$9 = value;
let insertAreas = gridUtils.insertAreas;

const OLD_LINEAR = /(^|[^-])linear-gradient\(\s*(top|left|right|bottom)/i;
const OLD_RADIAL = /(^|[^-])radial-gradient\(\s*\d+(\w*|%)\s+\d+(\w*|%)\s*,/i;
const IGNORE_NEXT = /(!\s*)?autoprefixer:\s*ignore\s+next/i;
const GRID_REGEX = /(!\s*)?autoprefixer\s*grid:\s*(on|off|(no-)?autoplace)/i;

const SIZES = [
  'width',
  'height',
  'min-width',
  'max-width',
  'min-height',
  'max-height',
  'inline-size',
  'min-inline-size',
  'max-inline-size',
  'block-size',
  'min-block-size',
  'max-block-size'
];

function hasGridTemplate(decl) {
  return decl.parent.some(
    i => i.prop === 'grid-template' || i.prop === 'grid-template-areas'
  )
}

function hasRowsAndColumns(decl) {
  let hasRows = decl.parent.some(i => i.prop === 'grid-template-rows');
  let hasColumns = decl.parent.some(i => i.prop === 'grid-template-columns');
  return hasRows && hasColumns
}

class Processor$1 {
  constructor(prefixes) {
    this.prefixes = prefixes;
  }

  /**
   * Add necessary prefixes
   */
  add(css, result) {
    // At-rules
    let resolution = this.prefixes.add['@resolution'];
    let keyframes = this.prefixes.add['@keyframes'];
    let viewport = this.prefixes.add['@viewport'];
    let supports = this.prefixes.add['@supports'];

    css.walkAtRules(rule => {
      if (rule.name === 'keyframes') {
        if (!this.disabled(rule, result)) {
          return keyframes && keyframes.process(rule)
        }
      } else if (rule.name === 'viewport') {
        if (!this.disabled(rule, result)) {
          return viewport && viewport.process(rule)
        }
      } else if (rule.name === 'supports') {
        if (
          this.prefixes.options.supports !== false &&
          !this.disabled(rule, result)
        ) {
          return supports.process(rule)
        }
      } else if (rule.name === 'media' && rule.params.includes('-resolution')) {
        if (!this.disabled(rule, result)) {
          return resolution && resolution.process(rule)
        }
      }

      return undefined
    });

    // Selectors
    css.walkRules(rule => {
      if (this.disabled(rule, result)) return undefined

      return this.prefixes.add.selectors.map(selector => {
        return selector.process(rule, result)
      })
    });

    function insideGrid(decl) {
      return decl.parent.nodes.some(node => {
        if (node.type !== 'decl') return false
        let displayGrid =
          node.prop === 'display' && /(inline-)?grid/.test(node.value);
        let gridTemplate = node.prop.startsWith('grid-template');
        let gridGap = /^grid-([A-z]+-)?gap/.test(node.prop);
        return displayGrid || gridTemplate || gridGap
      })
    }
    function insideFlex(decl) {
      return decl.parent.some(node => {
        return node.prop === 'display' && /(inline-)?flex/.test(node.value)
      })
    }

    let gridPrefixes =
      this.gridStatus(css, result) &&
      this.prefixes.add['grid-area'] &&
      this.prefixes.add['grid-area'].prefixes;

    css.walkDecls(decl => {
      if (this.disabledDecl(decl, result)) return undefined

      let parent = decl.parent;
      let prop = decl.prop;
      let value = decl.value;

      if (prop === 'color-adjust') {
        if (parent.every(i => i.prop !== 'print-color-adjust')) {
          result.warn(
            'Replace color-adjust to print-color-adjust. ' +
              'The color-adjust shorthand is currently deprecated.',
            { node: decl }
          );
        }
      } else if (prop === 'grid-row-span') {
        result.warn(
          'grid-row-span is not part of final Grid Layout. Use grid-row.',
          { node: decl }
        );
        return undefined
      } else if (prop === 'grid-column-span') {
        result.warn(
          'grid-column-span is not part of final Grid Layout. Use grid-column.',
          { node: decl }
        );
        return undefined
      } else if (prop === 'display' && value === 'box') {
        result.warn(
          'You should write display: flex by final spec ' +
            'instead of display: box',
          { node: decl }
        );
        return undefined
      } else if (prop === 'text-emphasis-position') {
        if (value === 'under' || value === 'over') {
          result.warn(
            'You should use 2 values for text-emphasis-position ' +
              'For example, `under left` instead of just `under`.',
            { node: decl }
          );
        }
      } else if (
        /^(align|justify|place)-(items|content)$/.test(prop) &&
        insideFlex(decl)
      ) {
        if (value === 'start' || value === 'end') {
          result.warn(
            `${value} value has mixed support, consider using ` +
              `flex-${value} instead`,
            { node: decl }
          );
        }
      } else if (prop === 'text-decoration-skip' && value === 'ink') {
        result.warn(
          'Replace text-decoration-skip: ink to ' +
            'text-decoration-skip-ink: auto, because spec had been changed',
          { node: decl }
        );
      } else {
        if (gridPrefixes && this.gridStatus(decl, result)) {
          if (decl.value === 'subgrid') {
            result.warn('IE does not support subgrid', { node: decl });
          }
          if (/^(align|justify|place)-items$/.test(prop) && insideGrid(decl)) {
            let fixed = prop.replace('-items', '-self');
            result.warn(
              `IE does not support ${prop} on grid containers. ` +
                `Try using ${fixed} on child elements instead: ` +
                `${decl.parent.selector} > * { ${fixed}: ${decl.value} }`,
              { node: decl }
            );
          } else if (
            /^(align|justify|place)-content$/.test(prop) &&
            insideGrid(decl)
          ) {
            result.warn(`IE does not support ${decl.prop} on grid containers`, {
              node: decl
            });
          } else if (prop === 'display' && decl.value === 'contents') {
            result.warn(
              'Please do not use display: contents; ' +
                'if you have grid setting enabled',
              { node: decl }
            );
            return undefined
          } else if (decl.prop === 'grid-gap') {
            let status = this.gridStatus(decl, result);
            if (
              status === 'autoplace' &&
              !hasRowsAndColumns(decl) &&
              !hasGridTemplate(decl)
            ) {
              result.warn(
                'grid-gap only works if grid-template(-areas) is being ' +
                  'used or both rows and columns have been declared ' +
                  'and cells have not been manually ' +
                  'placed inside the explicit grid',
                { node: decl }
              );
            } else if (
              (status === true || status === 'no-autoplace') &&
              !hasGridTemplate(decl)
            ) {
              result.warn(
                'grid-gap only works if grid-template(-areas) is being used',
                { node: decl }
              );
            }
          } else if (prop === 'grid-auto-columns') {
            result.warn('grid-auto-columns is not supported by IE', {
              node: decl
            });
            return undefined
          } else if (prop === 'grid-auto-rows') {
            result.warn('grid-auto-rows is not supported by IE', { node: decl });
            return undefined
          } else if (prop === 'grid-auto-flow') {
            let hasRows = parent.some(i => i.prop === 'grid-template-rows');
            let hasCols = parent.some(i => i.prop === 'grid-template-columns');

            if (hasGridTemplate(decl)) {
              result.warn('grid-auto-flow is not supported by IE', {
                node: decl
              });
            } else if (value.includes('dense')) {
              result.warn('grid-auto-flow: dense is not supported by IE', {
                node: decl
              });
            } else if (!hasRows && !hasCols) {
              result.warn(
                'grid-auto-flow works only if grid-template-rows and ' +
                  'grid-template-columns are present in the same rule',
                { node: decl }
              );
            }
            return undefined
          } else if (value.includes('auto-fit')) {
            result.warn('auto-fit value is not supported by IE', {
              node: decl,
              word: 'auto-fit'
            });
            return undefined
          } else if (value.includes('auto-fill')) {
            result.warn('auto-fill value is not supported by IE', {
              node: decl,
              word: 'auto-fill'
            });
            return undefined
          } else if (prop.startsWith('grid-template') && value.includes('[')) {
            result.warn(
              'Autoprefixer currently does not support line names. ' +
                'Try using grid-template-areas instead.',
              { node: decl, word: '[' }
            );
          }
        }
        if (value.includes('radial-gradient')) {
          if (OLD_RADIAL.test(decl.value)) {
            result.warn(
              'Gradient has outdated direction syntax. ' +
                'New syntax is like `closest-side at 0 0` ' +
                'instead of `0 0, closest-side`.',
              { node: decl }
            );
          } else {
            let ast = parser$1(value);

            for (let i of ast.nodes) {
              if (i.type === 'function' && i.value === 'radial-gradient') {
                for (let word of i.nodes) {
                  if (word.type === 'word') {
                    if (word.value === 'cover') {
                      result.warn(
                        'Gradient has outdated direction syntax. ' +
                          'Replace `cover` to `farthest-corner`.',
                        { node: decl }
                      );
                    } else if (word.value === 'contain') {
                      result.warn(
                        'Gradient has outdated direction syntax. ' +
                          'Replace `contain` to `closest-side`.',
                        { node: decl }
                      );
                    }
                  }
                }
              }
            }
          }
        }
        if (value.includes('linear-gradient')) {
          if (OLD_LINEAR.test(value)) {
            result.warn(
              'Gradient has outdated direction syntax. ' +
                'New syntax is like `to left` instead of `right`.',
              { node: decl }
            );
          }
        }
      }

      if (SIZES.includes(decl.prop)) {
        if (!decl.value.includes('-fill-available')) {
          if (decl.value.includes('fill-available')) {
            result.warn(
              'Replace fill-available to stretch, ' +
                'because spec had been changed',
              { node: decl }
            );
          } else if (decl.value.includes('fill')) {
            let ast = parser$1(value);
            if (ast.nodes.some(i => i.type === 'word' && i.value === 'fill')) {
              result.warn(
                'Replace fill to stretch, because spec had been changed',
                { node: decl }
              );
            }
          }
        }
      }

      let prefixer;

      if (decl.prop === 'transition' || decl.prop === 'transition-property') {
        // Transition
        return this.prefixes.transition.add(decl, result)
      } else if (decl.prop === 'align-self') {
        // align-self flexbox or grid
        let display = this.displayType(decl);
        if (display !== 'grid' && this.prefixes.options.flexbox !== false) {
          prefixer = this.prefixes.add['align-self'];
          if (prefixer && prefixer.prefixes) {
            prefixer.process(decl);
          }
        }
        if (this.gridStatus(decl, result) !== false) {
          prefixer = this.prefixes.add['grid-row-align'];
          if (prefixer && prefixer.prefixes) {
            return prefixer.process(decl, result)
          }
        }
      } else if (decl.prop === 'justify-self') {
        // justify-self flexbox or grid
        if (this.gridStatus(decl, result) !== false) {
          prefixer = this.prefixes.add['grid-column-align'];
          if (prefixer && prefixer.prefixes) {
            return prefixer.process(decl, result)
          }
        }
      } else if (decl.prop === 'place-self') {
        prefixer = this.prefixes.add['place-self'];
        if (
          prefixer &&
          prefixer.prefixes &&
          this.gridStatus(decl, result) !== false
        ) {
          return prefixer.process(decl, result)
        }
      } else {
        // Properties
        prefixer = this.prefixes.add[decl.prop];
        if (prefixer && prefixer.prefixes) {
          return prefixer.process(decl, result)
        }
      }

      return undefined
    });

    // Insert grid-area prefixes. We need to be able to store the different
    // rules as a data and hack API is not enough for this
    if (this.gridStatus(css, result)) {
      insertAreas(css, this.disabled);
    }

    // Values
    return css.walkDecls(decl => {
      if (this.disabledValue(decl, result)) return

      let unprefixed = this.prefixes.unprefixed(decl.prop);
      let list = this.prefixes.values('add', unprefixed);
      if (Array.isArray(list)) {
        for (let value of list) {
          if (value.process) value.process(decl, result);
        }
      }
      Value$9.save(this.prefixes, decl);
    })
  }

  /**
   * Remove unnecessary pefixes
   */
  remove(css, result) {
    // At-rules
    let resolution = this.prefixes.remove['@resolution'];

    css.walkAtRules((rule, i) => {
      if (this.prefixes.remove[`@${rule.name}`]) {
        if (!this.disabled(rule, result)) {
          rule.parent.removeChild(i);
        }
      } else if (
        rule.name === 'media' &&
        rule.params.includes('-resolution') &&
        resolution
      ) {
        resolution.clean(rule);
      }
    });

    // Selectors
    for (let checker of this.prefixes.remove.selectors) {
      css.walkRules((rule, i) => {
        if (checker.check(rule)) {
          if (!this.disabled(rule, result)) {
            rule.parent.removeChild(i);
          }
        }
      });
    }

    return css.walkDecls((decl, i) => {
      if (this.disabled(decl, result)) return

      let rule = decl.parent;
      let unprefixed = this.prefixes.unprefixed(decl.prop);

      // Transition
      if (decl.prop === 'transition' || decl.prop === 'transition-property') {
        this.prefixes.transition.remove(decl);
      }

      // Properties
      if (
        this.prefixes.remove[decl.prop] &&
        this.prefixes.remove[decl.prop].remove
      ) {
        let notHack = this.prefixes.group(decl).down(other => {
          return this.prefixes.normalize(other.prop) === unprefixed
        });

        if (unprefixed === 'flex-flow') {
          notHack = true;
        }

        if (decl.prop === '-webkit-box-orient') {
          let hacks = { 'flex-direction': true, 'flex-flow': true };
          if (!decl.parent.some(j => hacks[j.prop])) return
        }

        if (notHack && !this.withHackValue(decl)) {
          if (decl.raw('before').includes('\n')) {
            this.reduceSpaces(decl);
          }
          rule.removeChild(i);
          return
        }
      }

      // Values
      for (let checker of this.prefixes.values('remove', unprefixed)) {
        if (!checker.check) continue
        if (!checker.check(decl.value)) continue

        unprefixed = checker.unprefixed;
        let notHack = this.prefixes.group(decl).down(other => {
          return other.value.includes(unprefixed)
        });

        if (notHack) {
          rule.removeChild(i);
          return
        }
      }
    })
  }

  /**
   * Some rare old values, which is not in standard
   */
  withHackValue(decl) {
    return decl.prop === '-webkit-background-clip' && decl.value === 'text'
  }

  /**
   * Check for grid/flexbox options.
   */
  disabledValue(node, result) {
    if (this.gridStatus(node, result) === false && node.type === 'decl') {
      if (node.prop === 'display' && node.value.includes('grid')) {
        return true
      }
    }
    if (this.prefixes.options.flexbox === false && node.type === 'decl') {
      if (node.prop === 'display' && node.value.includes('flex')) {
        return true
      }
    }
    if (node.type === 'decl' && node.prop === 'content') {
      return true
    }

    return this.disabled(node, result)
  }

  /**
   * Check for grid/flexbox options.
   */
  disabledDecl(node, result) {
    if (this.gridStatus(node, result) === false && node.type === 'decl') {
      if (node.prop.includes('grid') || node.prop === 'justify-items') {
        return true
      }
    }
    if (this.prefixes.options.flexbox === false && node.type === 'decl') {
      let other = ['order', 'justify-content', 'align-items', 'align-content'];
      if (node.prop.includes('flex') || other.includes(node.prop)) {
        return true
      }
    }

    return this.disabled(node, result)
  }

  /**
   * Check for control comment and global options
   */
  disabled(node, result) {
    if (!node) return false

    if (node._autoprefixerDisabled !== undefined) {
      return node._autoprefixerDisabled
    }

    if (node.parent) {
      let p = node.prev();
      if (p && p.type === 'comment' && IGNORE_NEXT.test(p.text)) {
        node._autoprefixerDisabled = true;
        node._autoprefixerSelfDisabled = true;
        return true
      }
    }

    let value = null;
    if (node.nodes) {
      let status;
      node.each(i => {
        if (i.type !== 'comment') return
        if (/(!\s*)?autoprefixer:\s*(off|on)/i.test(i.text)) {
          if (typeof status !== 'undefined') {
            result.warn(
              'Second Autoprefixer control comment ' +
                'was ignored. Autoprefixer applies control ' +
                'comment to whole block, not to next rules.',
              { node: i }
            );
          } else {
            status = /on/i.test(i.text);
          }
        }
      });

      if (status !== undefined) {
        value = !status;
      }
    }
    if (!node.nodes || value === null) {
      if (node.parent) {
        let isParentDisabled = this.disabled(node.parent, result);
        if (node.parent._autoprefixerSelfDisabled === true) {
          value = false;
        } else {
          value = isParentDisabled;
        }
      } else {
        value = false;
      }
    }
    node._autoprefixerDisabled = value;
    return value
  }

  /**
   * Normalize spaces in cascade declaration group
   */
  reduceSpaces(decl) {
    let stop = false;
    this.prefixes.group(decl).up(() => {
      stop = true;
      return true
    });
    if (stop) {
      return
    }

    let parts = decl.raw('before').split('\n');
    let prevMin = parts[parts.length - 1].length;
    let diff = false;

    this.prefixes.group(decl).down(other => {
      parts = other.raw('before').split('\n');
      let last = parts.length - 1;

      if (parts[last].length > prevMin) {
        if (diff === false) {
          diff = parts[last].length - prevMin;
        }

        parts[last] = parts[last].slice(0, -diff);
        other.raws.before = parts.join('\n');
      }
    });
  }

  /**
   * Is it flebox or grid rule
   */
  displayType(decl) {
    for (let i of decl.parent.nodes) {
      if (i.prop !== 'display') {
        continue
      }

      if (i.value.includes('flex')) {
        return 'flex'
      }

      if (i.value.includes('grid')) {
        return 'grid'
      }
    }

    return false
  }

  /**
   * Set grid option via control comment
   */
  gridStatus(node, result) {
    if (!node) return false

    if (node._autoprefixerGridStatus !== undefined) {
      return node._autoprefixerGridStatus
    }

    let value = null;
    if (node.nodes) {
      let status;
      node.each(i => {
        if (i.type !== 'comment') return
        if (GRID_REGEX.test(i.text)) {
          let hasAutoplace = /:\s*autoplace/i.test(i.text);
          let noAutoplace = /no-autoplace/i.test(i.text);
          if (typeof status !== 'undefined') {
            result.warn(
              'Second Autoprefixer grid control comment was ' +
                'ignored. Autoprefixer applies control comments to the whole ' +
                'block, not to the next rules.',
              { node: i }
            );
          } else if (hasAutoplace) {
            status = 'autoplace';
          } else if (noAutoplace) {
            status = true;
          } else {
            status = /on/i.test(i.text);
          }
        }
      });

      if (status !== undefined) {
        value = status;
      }
    }

    if (node.type === 'atrule' && node.name === 'supports') {
      let params = node.params;
      if (params.includes('grid') && params.includes('auto')) {
        value = false;
      }
    }

    if (!node.nodes || value === null) {
      if (node.parent) {
        let isParentGrid = this.gridStatus(node.parent, result);
        if (node.parent._autoprefixerSelfDisabled === true) {
          value = false;
        } else {
          value = isParentGrid;
        }
      } else if (typeof this.prefixes.options.grid !== 'undefined') {
        value = this.prefixes.options.grid;
      } else if (typeof ({}).AUTOPREFIXER_GRID !== 'undefined') {
        if (({}).AUTOPREFIXER_GRID === 'autoplace') {
          value = 'autoplace';
        } else {
          value = true;
        }
      } else {
        value = false;
      }
    }

    node._autoprefixerGridStatus = value;
    return value
  }
}

var processor = Processor$1;

let featureQueries = cssFeaturequeries;
let { feature } = unpacker;

let data = feature(featureQueries);
for (let browser in data.stats) {
  let versions = data.stats[browser];
  for (let version in versions) {
    let support = versions[version];
    if (/y/.test(support)) ;
  }
}

class OldSelector$1 {
  constructor(selector, prefix) {
    this.prefix = prefix;
    this.prefixed = selector.prefixed(this.prefix);
    this.regexp = selector.regexp(this.prefix);

    this.prefixeds = selector
      .possible()
      .map(x => [selector.prefixed(x), selector.regexp(x)]);

    this.unprefixed = selector.name;
    this.nameRegexp = selector.regexp();
  }

  /**
   * Is rule a hack without unprefixed version bottom
   */
  isHack(rule) {
    let index = rule.parent.index(rule) + 1;
    let rules = rule.parent.nodes;

    while (index < rules.length) {
      let before = rules[index].selector;
      if (!before) {
        return true
      }

      if (before.includes(this.unprefixed) && before.match(this.nameRegexp)) {
        return false
      }

      let some = false;
      for (let [string, regexp] of this.prefixeds) {
        if (before.includes(string) && before.match(regexp)) {
          some = true;
          break
        }
      }

      if (!some) {
        return true
      }

      index += 1;
    }

    return true
  }

  /**
   * Does rule contain an unnecessary prefixed selector
   */
  check(rule) {
    if (!rule.selector.includes(this.prefixed)) {
      return false
    }
    if (!rule.selector.match(this.regexp)) {
      return false
    }
    if (this.isHack(rule)) {
      return false
    }
    return true
  }
}

var oldSelector = OldSelector$1;

let { list: list$2 } = postcss_1;

let OldSelector = oldSelector;
let Prefixer = prefixer;
let Browsers = browsers;
let utils$9 = utils$f;

class Selector$6 extends Prefixer {
  constructor(name, prefixes, all) {
    super(name, prefixes, all);
    this.regexpCache = new Map();
  }

  /**
   * Is rule selectors need to be prefixed
   */
  check(rule) {
    if (rule.selector.includes(this.name)) {
      return !!rule.selector.match(this.regexp())
    }

    return false
  }

  /**
   * Return prefixed version of selector
   */
  prefixed(prefix) {
    return this.name.replace(/^(\W*)/, `$1${prefix}`)
  }

  /**
   * Lazy loadRegExp for name
   */
  regexp(prefix) {
    if (!this.regexpCache.has(prefix)) {
      let name = prefix ? this.prefixed(prefix) : this.name;
      this.regexpCache.set(
        prefix,
        new RegExp(`(^|[^:"'=])${utils$9.escapeRegexp(name)}`, 'gi')
      );
    }

    return this.regexpCache.get(prefix)
  }

  /**
   * All possible prefixes
   */
  possible() {
    return Browsers.prefixes()
  }

  /**
   * Return all possible selector prefixes
   */
  prefixeds(rule) {
    if (rule._autoprefixerPrefixeds) {
      if (rule._autoprefixerPrefixeds[this.name]) {
        return rule._autoprefixerPrefixeds
      }
    } else {
      rule._autoprefixerPrefixeds = {};
    }

    let prefixeds = {};
    if (rule.selector.includes(',')) {
      let ruleParts = list$2.comma(rule.selector);
      let toProcess = ruleParts.filter(el => el.includes(this.name));

      for (let prefix of this.possible()) {
        prefixeds[prefix] = toProcess
          .map(el => this.replace(el, prefix))
          .join(', ');
      }
    } else {
      for (let prefix of this.possible()) {
        prefixeds[prefix] = this.replace(rule.selector, prefix);
      }
    }

    rule._autoprefixerPrefixeds[this.name] = prefixeds;
    return rule._autoprefixerPrefixeds
  }

  /**
   * Is rule already prefixed before
   */
  already(rule, prefixeds, prefix) {
    let index = rule.parent.index(rule) - 1;

    while (index >= 0) {
      let before = rule.parent.nodes[index];

      if (before.type !== 'rule') {
        return false
      }

      let some = false;
      for (let key in prefixeds[this.name]) {
        let prefixed = prefixeds[this.name][key];
        if (before.selector === prefixed) {
          if (prefix === key) {
            return true
          } else {
            some = true;
            break
          }
        }
      }
      if (!some) {
        return false
      }

      index -= 1;
    }

    return false
  }

  /**
   * Replace selectors by prefixed one
   */
  replace(selector, prefix) {
    return selector.replace(this.regexp(), `$1${this.prefixed(prefix)}`)
  }

  /**
   * Clone and add prefixes for at-rule
   */
  add(rule, prefix) {
    let prefixeds = this.prefixeds(rule);

    if (this.already(rule, prefixeds, prefix)) {
      return
    }

    let cloned = this.clone(rule, { selector: prefixeds[this.name][prefix] });
    rule.parent.insertBefore(rule, cloned);
  }

  /**
   * Return function to fast find prefixed selector
   */
  old(prefix) {
    return new OldSelector(this, prefix)
  }
}

var selector = Selector$6;

let Selector$5 = selector;

class Fullscreen extends Selector$5 {
  /**
   * Return different selectors depend on prefix
   */
  prefixed(prefix) {
    if (prefix === '-webkit-') {
      return ':-webkit-full-screen'
    }
    if (prefix === '-moz-') {
      return ':-moz-full-screen'
    }
    return `:${prefix}fullscreen`
  }
}

Fullscreen.names = [':fullscreen'];

var fullscreen = Fullscreen;

let Selector$4 = selector;

class Placeholder extends Selector$4 {
  /**
   * Add old mozilla to possible prefixes
   */
  possible() {
    return super.possible().concat(['-moz- old', '-ms- old'])
  }

  /**
   * Return different selectors depend on prefix
   */
  prefixed(prefix) {
    if (prefix === '-webkit-') {
      return '::-webkit-input-placeholder'
    }
    if (prefix === '-ms-') {
      return '::-ms-input-placeholder'
    }
    if (prefix === '-ms- old') {
      return ':-ms-input-placeholder'
    }
    if (prefix === '-moz- old') {
      return ':-moz-placeholder'
    }
    return `::${prefix}placeholder`
  }
}

Placeholder.names = ['::placeholder'];

var placeholder = Placeholder;

let Selector$3 = selector;

class PlaceholderShown extends Selector$3 {
  /**
   * Return different selectors depend on prefix
   */
  prefixed(prefix) {
    if (prefix === '-ms-') {
      return ':-ms-input-placeholder'
    }
    return `:${prefix}placeholder-shown`
  }
}

PlaceholderShown.names = [':placeholder-shown'];

var placeholderShown = PlaceholderShown;

let Selector$2 = selector;
let utils$8 = utils$f;

class FileSelectorButton extends Selector$2 {
  constructor(name, prefixes, all) {
    super(name, prefixes, all);

    if (this.prefixes) {
      this.prefixes = utils$8.uniq(this.prefixes.map(() => '-webkit-'));
    }
  }

  /**
   * Return different selectors depend on prefix
   */
  prefixed(prefix) {
    if (prefix === '-webkit-') {
      return '::-webkit-file-upload-button'
    }
    return `::${prefix}file-selector-button`
  }
}

FileSelectorButton.names = ['::file-selector-button'];

var fileSelectorButton = FileSelectorButton;

/**
 * Return flexbox spec versions by prefix
 */

var flexSpec$d = function (prefix) {
  let spec;
  if (prefix === '-webkit- 2009' || prefix === '-moz-') {
    spec = 2009;
  } else if (prefix === '-ms-') {
    spec = 2012;
  } else if (prefix === '-webkit-') {
    spec = 'final';
  }

  if (prefix === '-webkit- 2009') {
    prefix = '-webkit-';
  }

  return [spec, prefix]
};

let list$1 = postcss_1.list;

let flexSpec$c = flexSpec$d;
let Declaration$I = declaration;

class Flex$1 extends Declaration$I {
  /**
   * Change property name for 2009 spec
   */
  prefixed(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec$c(prefix);
    if (spec === 2009) {
      return prefix + 'box-flex'
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Return property name by final spec
   */
  normalize() {
    return 'flex'
  }

  /**
   * Spec 2009 supports only first argument
   * Spec 2012 disallows unitless basis
   */
  set(decl, prefix) {
    let spec = flexSpec$c(prefix)[0];
    if (spec === 2009) {
      decl.value = list$1.space(decl.value)[0];
      decl.value = Flex$1.oldValues[decl.value] || decl.value;
      return super.set(decl, prefix)
    }
    if (spec === 2012) {
      let components = list$1.space(decl.value);
      if (components.length === 3 && components[2] === '0') {
        decl.value = components.slice(0, 2).concat('0px').join(' ');
      }
    }
    return super.set(decl, prefix)
  }
}

Flex$1.names = ['flex', 'box-flex'];

Flex$1.oldValues = {
  auto: '1',
  none: '0'
};

var flex = Flex$1;

let flexSpec$b = flexSpec$d;
let Declaration$H = declaration;

class Order extends Declaration$H {
  /**
   * Change property name for 2009 and 2012 specs
   */
  prefixed(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec$b(prefix);
    if (spec === 2009) {
      return prefix + 'box-ordinal-group'
    }
    if (spec === 2012) {
      return prefix + 'flex-order'
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Return property name by final spec
   */
  normalize() {
    return 'order'
  }

  /**
   * Fix value for 2009 spec
   */
  set(decl, prefix) {
    let spec = flexSpec$b(prefix)[0];
    if (spec === 2009 && /\d/.test(decl.value)) {
      decl.value = (parseInt(decl.value) + 1).toString();
      return super.set(decl, prefix)
    }
    return super.set(decl, prefix)
  }
}

Order.names = ['order', 'flex-order', 'box-ordinal-group'];

var order = Order;

let Declaration$G = declaration;

class Filter extends Declaration$G {
  /**
   * Check is it Internet Explorer filter
   */
  check(decl) {
    let v = decl.value;
    return (
      !v.toLowerCase().includes('alpha(') &&
      !v.includes('DXImageTransform.Microsoft') &&
      !v.includes('data:image/svg+xml')
    )
  }
}

Filter.names = ['filter'];

var filter = Filter;

let Declaration$F = declaration;
let { isPureNumber } = utils$f;

class GridEnd extends Declaration$F {
  /**
   * Change repeating syntax for IE
   */
  insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)

    let clonedDecl = this.clone(decl);

    let startProp = decl.prop.replace(/end$/, 'start');
    let spanProp = prefix + decl.prop.replace(/end$/, 'span');

    if (decl.parent.some(i => i.prop === spanProp)) {
      return undefined
    }

    clonedDecl.prop = spanProp;

    if (decl.value.includes('span')) {
      clonedDecl.value = decl.value.replace(/span\s/i, '');
    } else {
      let startDecl;
      decl.parent.walkDecls(startProp, d => {
        startDecl = d;
      });
      if (startDecl) {
        if (isPureNumber(startDecl.value)) {
          let value = Number(decl.value) - Number(startDecl.value) + '';
          clonedDecl.value = value;
        } else {
          return undefined
        }
      } else {
        decl.warn(
          result,
          `Can not prefix ${decl.prop} (${startProp} is not found)`
        );
      }
    }

    decl.cloneBefore(clonedDecl);

    return undefined
  }
}

GridEnd.names = ['grid-row-end', 'grid-column-end'];

var gridEnd = GridEnd;

let Declaration$E = declaration;

class Animation extends Declaration$E {
  /**
   * Don’t add prefixes for modern values.
   */
  check(decl) {
    return !decl.value.split(/\s+/).some(i => {
      let lower = i.toLowerCase();
      return lower === 'reverse' || lower === 'alternate-reverse'
    })
  }
}

Animation.names = ['animation', 'animation-direction'];

var animation = Animation;

let flexSpec$a = flexSpec$d;
let Declaration$D = declaration;

class FlexFlow extends Declaration$D {
  /**
   * Use two properties for 2009 spec
   */
  insert(decl, prefix, prefixes) {
    let spec
    ;[spec, prefix] = flexSpec$a(prefix);
    if (spec !== 2009) {
      return super.insert(decl, prefix, prefixes)
    }
    let values = decl.value
      .split(/\s+/)
      .filter(i => i !== 'wrap' && i !== 'nowrap' && 'wrap-reverse');
    if (values.length === 0) {
      return undefined
    }

    let already = decl.parent.some(
      i =>
        i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction'
    );
    if (already) {
      return undefined
    }

    let value = values[0];
    let orient = value.includes('row') ? 'horizontal' : 'vertical';
    let dir = value.includes('reverse') ? 'reverse' : 'normal';

    let cloned = this.clone(decl);
    cloned.prop = prefix + 'box-orient';
    cloned.value = orient;
    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
    }
    decl.parent.insertBefore(decl, cloned);

    cloned = this.clone(decl);
    cloned.prop = prefix + 'box-direction';
    cloned.value = dir;
    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
    }
    return decl.parent.insertBefore(decl, cloned)
  }
}

FlexFlow.names = ['flex-flow', 'box-direction', 'box-orient'];

var flexFlow = FlexFlow;

let flexSpec$9 = flexSpec$d;
let Declaration$C = declaration;

class Flex extends Declaration$C {
  /**
   * Return property name by final spec
   */
  normalize() {
    return 'flex'
  }

  /**
   * Return flex property for 2009 and 2012 specs
   */
  prefixed(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec$9(prefix);
    if (spec === 2009) {
      return prefix + 'box-flex'
    }
    if (spec === 2012) {
      return prefix + 'flex-positive'
    }
    return super.prefixed(prop, prefix)
  }
}

Flex.names = ['flex-grow', 'flex-positive'];

var flexGrow = Flex;

let flexSpec$8 = flexSpec$d;
let Declaration$B = declaration;

class FlexWrap extends Declaration$B {
  /**
   * Don't add prefix for 2009 spec
   */
  set(decl, prefix) {
    let spec = flexSpec$8(prefix)[0];
    if (spec !== 2009) {
      return super.set(decl, prefix)
    }
    return undefined
  }
}

FlexWrap.names = ['flex-wrap'];

var flexWrap = FlexWrap;

let Declaration$A = declaration;
let utils$7 = gridUtils;

class GridArea extends Declaration$A {
  /**
   * Translate grid-area to separate -ms- prefixed properties
   */
  insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)

    let values = utils$7.parse(decl);

    let [rowStart, rowSpan] = utils$7.translate(values, 0, 2);
    let [columnStart, columnSpan] = utils$7.translate(values, 1, 3)

    ;[
      ['grid-row', rowStart],
      ['grid-row-span', rowSpan],
      ['grid-column', columnStart],
      ['grid-column-span', columnSpan]
    ].forEach(([prop, value]) => {
      utils$7.insertDecl(decl, prop, value);
    });

    utils$7.warnTemplateSelectorNotFound(decl, result);
    utils$7.warnIfGridRowColumnExists(decl, result);

    return undefined
  }
}

GridArea.names = ['grid-area'];

var gridArea = GridArea;

let Declaration$z = declaration;
let utils$6 = gridUtils;

class PlaceSelf extends Declaration$z {
  /**
   * Translate place-self to separate -ms- prefixed properties
   */
  insert(decl, prefix, prefixes) {
    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)

    // prevent doubling of prefixes
    if (decl.parent.some(i => i.prop === '-ms-grid-row-align')) {
      return undefined
    }

    let [[first, second]] = utils$6.parse(decl);

    if (second) {
      utils$6.insertDecl(decl, 'grid-row-align', first);
      utils$6.insertDecl(decl, 'grid-column-align', second);
    } else {
      utils$6.insertDecl(decl, 'grid-row-align', first);
      utils$6.insertDecl(decl, 'grid-column-align', first);
    }

    return undefined
  }
}

PlaceSelf.names = ['place-self'];

var placeSelf = PlaceSelf;

let Declaration$y = declaration;

class GridStart extends Declaration$y {
  /**
   * Do not add prefix for unsupported value in IE
   */
  check(decl) {
    let value = decl.value;
    return !value.includes('/') && !value.includes('span')
  }

  /**
   * Return a final spec property
   */
  normalize(prop) {
    return prop.replace('-start', '')
  }

  /**
   * Change property name for IE
   */
  prefixed(prop, prefix) {
    let result = super.prefixed(prop, prefix);
    if (prefix === '-ms-') {
      result = result.replace('-start', '');
    }
    return result
  }
}

GridStart.names = ['grid-row-start', 'grid-column-start'];

var gridStart = GridStart;

let flexSpec$7 = flexSpec$d;
let Declaration$x = declaration;

class AlignSelf extends Declaration$x {
  check(decl) {
    return (
      decl.parent &&
      !decl.parent.some(i => {
        return i.prop && i.prop.startsWith('grid-')
      })
    )
  }

  /**
   * Change property name for 2012 specs
   */
  prefixed(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec$7(prefix);
    if (spec === 2012) {
      return prefix + 'flex-item-align'
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Return property name by final spec
   */
  normalize() {
    return 'align-self'
  }

  /**
   * Change value for 2012 spec and ignore prefix for 2009
   */
  set(decl, prefix) {
    let spec = flexSpec$7(prefix)[0];
    if (spec === 2012) {
      decl.value = AlignSelf.oldValues[decl.value] || decl.value;
      return super.set(decl, prefix)
    }
    if (spec === 'final') {
      return super.set(decl, prefix)
    }
    return undefined
  }
}

AlignSelf.names = ['align-self', 'flex-item-align'];

AlignSelf.oldValues = {
  'flex-end': 'end',
  'flex-start': 'start'
};

var alignSelf = AlignSelf;

let Declaration$w = declaration;
let utils$5 = utils$f;

class Appearance extends Declaration$w {
  constructor(name, prefixes, all) {
    super(name, prefixes, all);

    if (this.prefixes) {
      this.prefixes = utils$5.uniq(
        this.prefixes.map(i => {
          if (i === '-ms-') {
            return '-webkit-'
          }
          return i
        })
      );
    }
  }
}

Appearance.names = ['appearance'];

var appearance = Appearance;

let flexSpec$6 = flexSpec$d;
let Declaration$v = declaration;

class FlexBasis extends Declaration$v {
  /**
   * Return property name by final spec
   */
  normalize() {
    return 'flex-basis'
  }

  /**
   * Return flex property for 2012 spec
   */
  prefixed(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec$6(prefix);
    if (spec === 2012) {
      return prefix + 'flex-preferred-size'
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Ignore 2009 spec and use flex property for 2012
   */
  set(decl, prefix) {
    let spec
    ;[spec, prefix] = flexSpec$6(prefix);
    if (spec === 2012 || spec === 'final') {
      return super.set(decl, prefix)
    }
    return undefined
  }
}

FlexBasis.names = ['flex-basis', 'flex-preferred-size'];

var flexBasis = FlexBasis;

let Declaration$u = declaration;

class MaskBorder extends Declaration$u {
  /**
   * Return property name by final spec
   */
  normalize() {
    return this.name.replace('box-image', 'border')
  }

  /**
   * Return flex property for 2012 spec
   */
  prefixed(prop, prefix) {
    let result = super.prefixed(prop, prefix);
    if (prefix === '-webkit-') {
      result = result.replace('border', 'box-image');
    }
    return result
  }
}

MaskBorder.names = [
  'mask-border',
  'mask-border-source',
  'mask-border-slice',
  'mask-border-width',
  'mask-border-outset',
  'mask-border-repeat',
  'mask-box-image',
  'mask-box-image-source',
  'mask-box-image-slice',
  'mask-box-image-width',
  'mask-box-image-outset',
  'mask-box-image-repeat'
];

var maskBorder = MaskBorder;

let Declaration$t = declaration;

class MaskComposite extends Declaration$t {
  /**
   * Prefix mask-composite for webkit
   */
  insert(decl, prefix, prefixes) {
    let isCompositeProp = decl.prop === 'mask-composite';

    let compositeValues;

    if (isCompositeProp) {
      compositeValues = decl.value.split(',');
    } else {
      compositeValues = decl.value.match(MaskComposite.regexp) || [];
    }

    compositeValues = compositeValues.map(el => el.trim()).filter(el => el);
    let hasCompositeValues = compositeValues.length;

    let compositeDecl;

    if (hasCompositeValues) {
      compositeDecl = this.clone(decl);
      compositeDecl.value = compositeValues
        .map(value => MaskComposite.oldValues[value] || value)
        .join(', ');

      if (compositeValues.includes('intersect')) {
        compositeDecl.value += ', xor';
      }

      compositeDecl.prop = prefix + 'mask-composite';
    }

    if (isCompositeProp) {
      if (!hasCompositeValues) {
        return undefined
      }

      if (this.needCascade(decl)) {
        compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix);
      }

      return decl.parent.insertBefore(decl, compositeDecl)
    }

    let cloned = this.clone(decl);
    cloned.prop = prefix + cloned.prop;

    if (hasCompositeValues) {
      cloned.value = cloned.value.replace(MaskComposite.regexp, '');
    }

    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
    }

    decl.parent.insertBefore(decl, cloned);

    if (!hasCompositeValues) {
      return decl
    }

    if (this.needCascade(decl)) {
      compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix);
    }
    return decl.parent.insertBefore(decl, compositeDecl)
  }
}

MaskComposite.names = ['mask', 'mask-composite'];

MaskComposite.oldValues = {
  add: 'source-over',
  subtract: 'source-out',
  intersect: 'source-in',
  exclude: 'xor'
};

MaskComposite.regexp = new RegExp(
  `\\s+(${Object.keys(MaskComposite.oldValues).join(
    '|'
  )})\\b(?!\\))\\s*(?=[,])`,
  'ig'
);

var maskComposite = MaskComposite;

let flexSpec$5 = flexSpec$d;
let Declaration$s = declaration;

class AlignItems extends Declaration$s {
  /**
   * Change property name for 2009 and 2012 specs
   */
  prefixed(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec$5(prefix);
    if (spec === 2009) {
      return prefix + 'box-align'
    }
    if (spec === 2012) {
      return prefix + 'flex-align'
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Return property name by final spec
   */
  normalize() {
    return 'align-items'
  }

  /**
   * Change value for 2009 and 2012 specs
   */
  set(decl, prefix) {
    let spec = flexSpec$5(prefix)[0];
    if (spec === 2009 || spec === 2012) {
      decl.value = AlignItems.oldValues[decl.value] || decl.value;
    }
    return super.set(decl, prefix)
  }
}

AlignItems.names = ['align-items', 'flex-align', 'box-align'];

AlignItems.oldValues = {
  'flex-end': 'end',
  'flex-start': 'start'
};

var alignItems = AlignItems;

let Declaration$r = declaration;

class UserSelect extends Declaration$r {
  /**
   * Change prefixed value for IE
   */
  set(decl, prefix) {
    if (prefix === '-ms-' && decl.value === 'contain') {
      decl.value = 'element';
    }
    return super.set(decl, prefix)
  }

  /**
   * Avoid prefixing all in IE
   */
  insert(decl, prefix, prefixes) {
    if (decl.value === 'all' && prefix === '-ms-') {
      return undefined
    } else {
      return super.insert(decl, prefix, prefixes)
    }
  }
}

UserSelect.names = ['user-select'];

var userSelect = UserSelect;

let flexSpec$4 = flexSpec$d;
let Declaration$q = declaration;

class FlexShrink extends Declaration$q {
  /**
   * Return property name by final spec
   */
  normalize() {
    return 'flex-shrink'
  }

  /**
   * Return flex property for 2012 spec
   */
  prefixed(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec$4(prefix);
    if (spec === 2012) {
      return prefix + 'flex-negative'
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Ignore 2009 spec and use flex property for 2012
   */
  set(decl, prefix) {
    let spec
    ;[spec, prefix] = flexSpec$4(prefix);
    if (spec === 2012 || spec === 'final') {
      return super.set(decl, prefix)
    }
    return undefined
  }
}

FlexShrink.names = ['flex-shrink', 'flex-negative'];

var flexShrink = FlexShrink;

let Declaration$p = declaration;

class BreakProps extends Declaration$p {
  /**
   * Change name for -webkit- and -moz- prefix
   */
  prefixed(prop, prefix) {
    return `${prefix}column-${prop}`
  }

  /**
   * Return property name by final spec
   */
  normalize(prop) {
    if (prop.includes('inside')) {
      return 'break-inside'
    }
    if (prop.includes('before')) {
      return 'break-before'
    }
    return 'break-after'
  }

  /**
   * Change prefixed value for avoid-column and avoid-page
   */
  set(decl, prefix) {
    if (
      (decl.prop === 'break-inside' && decl.value === 'avoid-column') ||
      decl.value === 'avoid-page'
    ) {
      decl.value = 'avoid';
    }
    return super.set(decl, prefix)
  }

  /**
   * Don’t prefix some values
   */
  insert(decl, prefix, prefixes) {
    if (decl.prop !== 'break-inside') {
      return super.insert(decl, prefix, prefixes)
    }
    if (/region/i.test(decl.value) || /page/i.test(decl.value)) {
      return undefined
    }
    return super.insert(decl, prefix, prefixes)
  }
}

BreakProps.names = [
  'break-inside',
  'page-break-inside',
  'column-break-inside',
  'break-before',
  'page-break-before',
  'column-break-before',
  'break-after',
  'page-break-after',
  'column-break-after'
];

var breakProps = BreakProps;

let Declaration$o = declaration;

class WritingMode extends Declaration$o {
  insert(decl, prefix, prefixes) {
    if (prefix === '-ms-') {
      let cloned = this.set(this.clone(decl), prefix);

      if (this.needCascade(decl)) {
        cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
      }
      let direction = 'ltr';

      decl.parent.nodes.forEach(i => {
        if (i.prop === 'direction') {
          if (i.value === 'rtl' || i.value === 'ltr') direction = i.value;
        }
      });

      cloned.value = WritingMode.msValues[direction][decl.value] || decl.value;
      return decl.parent.insertBefore(decl, cloned)
    }

    return super.insert(decl, prefix, prefixes)
  }
}

WritingMode.names = ['writing-mode'];

WritingMode.msValues = {
  ltr: {
    'horizontal-tb': 'lr-tb',
    'vertical-rl': 'tb-rl',
    'vertical-lr': 'tb-lr'
  },
  rtl: {
    'horizontal-tb': 'rl-tb',
    'vertical-rl': 'bt-rl',
    'vertical-lr': 'bt-lr'
  }
};

var writingMode = WritingMode;

let Declaration$n = declaration;

class BorderImage extends Declaration$n {
  /**
   * Remove fill parameter for prefixed declarations
   */
  set(decl, prefix) {
    decl.value = decl.value.replace(/\s+fill(\s)/, '$1');
    return super.set(decl, prefix)
  }
}

BorderImage.names = ['border-image'];

var borderImage = BorderImage;

let flexSpec$3 = flexSpec$d;
let Declaration$m = declaration;

class AlignContent extends Declaration$m {
  /**
   * Change property name for 2012 spec
   */
  prefixed(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec$3(prefix);
    if (spec === 2012) {
      return prefix + 'flex-line-pack'
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Return property name by final spec
   */
  normalize() {
    return 'align-content'
  }

  /**
   * Change value for 2012 spec and ignore prefix for 2009
   */
  set(decl, prefix) {
    let spec = flexSpec$3(prefix)[0];
    if (spec === 2012) {
      decl.value = AlignContent.oldValues[decl.value] || decl.value;
      return super.set(decl, prefix)
    }
    if (spec === 'final') {
      return super.set(decl, prefix)
    }
    return undefined
  }
}

AlignContent.names = ['align-content', 'flex-line-pack'];

AlignContent.oldValues = {
  'flex-end': 'end',
  'flex-start': 'start',
  'space-between': 'justify',
  'space-around': 'distribute'
};

var alignContent = AlignContent;

let Declaration$l = declaration;

class BorderRadius extends Declaration$l {
  /**
   * Change syntax, when add Mozilla prefix
   */
  prefixed(prop, prefix) {
    if (prefix === '-moz-') {
      return prefix + (BorderRadius.toMozilla[prop] || prop)
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Return unprefixed version of property
   */
  normalize(prop) {
    return BorderRadius.toNormal[prop] || prop
  }
}

BorderRadius.names = ['border-radius'];

BorderRadius.toMozilla = {};
BorderRadius.toNormal = {};

for (let ver of ['top', 'bottom']) {
  for (let hor of ['left', 'right']) {
    let normal = `border-${ver}-${hor}-radius`;
    let mozilla = `border-radius-${ver}${hor}`;

    BorderRadius.names.push(normal);
    BorderRadius.names.push(mozilla);

    BorderRadius.toMozilla[normal] = mozilla;
    BorderRadius.toNormal[mozilla] = normal;
  }
}

var borderRadius = BorderRadius;

let Declaration$k = declaration;

class BlockLogical extends Declaration$k {
  /**
   * Use old syntax for -moz- and -webkit-
   */
  prefixed(prop, prefix) {
    if (prop.includes('-start')) {
      return prefix + prop.replace('-block-start', '-before')
    }
    return prefix + prop.replace('-block-end', '-after')
  }

  /**
   * Return property name by spec
   */
  normalize(prop) {
    if (prop.includes('-before')) {
      return prop.replace('-before', '-block-start')
    }
    return prop.replace('-after', '-block-end')
  }
}

BlockLogical.names = [
  'border-block-start',
  'border-block-end',
  'margin-block-start',
  'margin-block-end',
  'padding-block-start',
  'padding-block-end',
  'border-before',
  'border-after',
  'margin-before',
  'margin-after',
  'padding-before',
  'padding-after'
];

var blockLogical = BlockLogical;

let Declaration$j = declaration;
let {
  parseTemplate,
  warnMissedAreas: warnMissedAreas$1,
  getGridGap: getGridGap$2,
  warnGridGap: warnGridGap$1,
  inheritGridGap: inheritGridGap$2
} = gridUtils;

class GridTemplate extends Declaration$j {
  /**
   * Translate grid-template to separate -ms- prefixed properties
   */
  insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)

    if (decl.parent.some(i => i.prop === '-ms-grid-rows')) {
      return undefined
    }

    let gap = getGridGap$2(decl);

    /**
     * we must insert inherited gap values in some cases:
     * if we are inside media query && if we have no grid-gap value
     */
    let inheritedGap = inheritGridGap$2(decl, gap);

    let { rows, columns, areas } = parseTemplate({
      decl,
      gap: inheritedGap || gap
    });

    let hasAreas = Object.keys(areas).length > 0;
    let hasRows = Boolean(rows);
    let hasColumns = Boolean(columns);

    warnGridGap$1({
      gap,
      hasColumns,
      decl,
      result
    });

    warnMissedAreas$1(areas, decl, result);

    if ((hasRows && hasColumns) || hasAreas) {
      decl.cloneBefore({
        prop: '-ms-grid-rows',
        value: rows,
        raws: {}
      });
    }

    if (hasColumns) {
      decl.cloneBefore({
        prop: '-ms-grid-columns',
        value: columns,
        raws: {}
      });
    }

    return decl
  }
}

GridTemplate.names = ['grid-template'];

var gridTemplate = GridTemplate;

let Declaration$i = declaration;

class InlineLogical extends Declaration$i {
  /**
   * Use old syntax for -moz- and -webkit-
   */
  prefixed(prop, prefix) {
    return prefix + prop.replace('-inline', '')
  }

  /**
   * Return property name by spec
   */
  normalize(prop) {
    return prop.replace(/(margin|padding|border)-(start|end)/, '$1-inline-$2')
  }
}

InlineLogical.names = [
  'border-inline-start',
  'border-inline-end',
  'margin-inline-start',
  'margin-inline-end',
  'padding-inline-start',
  'padding-inline-end',
  'border-start',
  'border-end',
  'margin-start',
  'margin-end',
  'padding-start',
  'padding-end'
];

var inlineLogical = InlineLogical;

let Declaration$h = declaration;

class GridRowAlign extends Declaration$h {
  /**
   * Do not prefix flexbox values
   */
  check(decl) {
    return !decl.value.includes('flex-') && decl.value !== 'baseline'
  }

  /**
   * Change property name for IE
   */
  prefixed(prop, prefix) {
    return prefix + 'grid-row-align'
  }

  /**
   * Change IE property back
   */
  normalize() {
    return 'align-self'
  }
}

GridRowAlign.names = ['grid-row-align'];

var gridRowAlign = GridRowAlign;

let Declaration$g = declaration;

class TransformDecl extends Declaration$g {
  /**
   * Recursively check all parents for @keyframes
   */
  keyframeParents(decl) {
    let { parent } = decl;
    while (parent) {
      if (parent.type === 'atrule' && parent.name === 'keyframes') {
        return true
      }
({ parent } = parent);
    }
    return false
  }

  /**
   * Is transform contain 3D commands
   */
  contain3d(decl) {
    if (decl.prop === 'transform-origin') {
      return false
    }

    for (let func of TransformDecl.functions3d) {
      if (decl.value.includes(`${func}(`)) {
        return true
      }
    }

    return false
  }

  /**
   * Replace rotateZ to rotate for IE 9
   */
  set(decl, prefix) {
    decl = super.set(decl, prefix);
    if (prefix === '-ms-') {
      decl.value = decl.value.replace(/rotatez/gi, 'rotate');
    }
    return decl
  }

  /**
   * Don't add prefix for IE in keyframes
   */
  insert(decl, prefix, prefixes) {
    if (prefix === '-ms-') {
      if (!this.contain3d(decl) && !this.keyframeParents(decl)) {
        return super.insert(decl, prefix, prefixes)
      }
    } else if (prefix === '-o-') {
      if (!this.contain3d(decl)) {
        return super.insert(decl, prefix, prefixes)
      }
    } else {
      return super.insert(decl, prefix, prefixes)
    }
    return undefined
  }
}

TransformDecl.names = ['transform', 'transform-origin'];

TransformDecl.functions3d = [
  'matrix3d',
  'translate3d',
  'translateZ',
  'scale3d',
  'scaleZ',
  'rotate3d',
  'rotateX',
  'rotateY',
  'perspective'
];

var transformDecl = TransformDecl;

let flexSpec$2 = flexSpec$d;
let Declaration$f = declaration;

class FlexDirection extends Declaration$f {
  /**
   * Return property name by final spec
   */
  normalize() {
    return 'flex-direction'
  }

  /**
   * Use two properties for 2009 spec
   */
  insert(decl, prefix, prefixes) {
    let spec
    ;[spec, prefix] = flexSpec$2(prefix);
    if (spec !== 2009) {
      return super.insert(decl, prefix, prefixes)
    }
    let already = decl.parent.some(
      i =>
        i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction'
    );
    if (already) {
      return undefined
    }

    let v = decl.value;
    let orient, dir;
    if (v === 'inherit' || v === 'initial' || v === 'unset') {
      orient = v;
      dir = v;
    } else {
      orient = v.includes('row') ? 'horizontal' : 'vertical';
      dir = v.includes('reverse') ? 'reverse' : 'normal';
    }

    let cloned = this.clone(decl);
    cloned.prop = prefix + 'box-orient';
    cloned.value = orient;
    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
    }
    decl.parent.insertBefore(decl, cloned);

    cloned = this.clone(decl);
    cloned.prop = prefix + 'box-direction';
    cloned.value = dir;
    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
    }
    return decl.parent.insertBefore(decl, cloned)
  }

  /**
   * Clean two properties for 2009 spec
   */
  old(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec$2(prefix);
    if (spec === 2009) {
      return [prefix + 'box-orient', prefix + 'box-direction']
    } else {
      return super.old(prop, prefix)
    }
  }
}

FlexDirection.names = ['flex-direction', 'box-direction', 'box-orient'];

var flexDirection = FlexDirection;

let Declaration$e = declaration;

class ImageRendering extends Declaration$e {
  /**
   * Add hack only for crisp-edges
   */
  check(decl) {
    return decl.value === 'pixelated'
  }

  /**
   * Change property name for IE
   */
  prefixed(prop, prefix) {
    if (prefix === '-ms-') {
      return '-ms-interpolation-mode'
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Change property and value for IE
   */
  set(decl, prefix) {
    if (prefix !== '-ms-') return super.set(decl, prefix)
    decl.prop = '-ms-interpolation-mode';
    decl.value = 'nearest-neighbor';
    return decl
  }

  /**
   * Return property name by spec
   */
  normalize() {
    return 'image-rendering'
  }

  /**
   * Warn on old value
   */
  process(node, result) {
    return super.process(node, result)
  }
}

ImageRendering.names = ['image-rendering', 'interpolation-mode'];

var imageRendering = ImageRendering;

let Declaration$d = declaration;
let utils$4 = utils$f;

class BackdropFilter extends Declaration$d {
  constructor(name, prefixes, all) {
    super(name, prefixes, all);

    if (this.prefixes) {
      this.prefixes = utils$4.uniq(
        this.prefixes.map(i => {
          return i === '-ms-' ? '-webkit-' : i
        })
      );
    }
  }
}

BackdropFilter.names = ['backdrop-filter'];

var backdropFilter = BackdropFilter;

let Declaration$c = declaration;
let utils$3 = utils$f;

class BackgroundClip extends Declaration$c {
  constructor(name, prefixes, all) {
    super(name, prefixes, all);

    if (this.prefixes) {
      this.prefixes = utils$3.uniq(
        this.prefixes.map(i => {
          return i === '-ms-' ? '-webkit-' : i
        })
      );
    }
  }

  check(decl) {
    return decl.value.toLowerCase() === 'text'
  }
}

BackgroundClip.names = ['background-clip'];

var backgroundClip = BackgroundClip;

let Declaration$b = declaration;

const BASIC = [
  'none',
  'underline',
  'overline',
  'line-through',
  'blink',
  'inherit',
  'initial',
  'unset'
];

class TextDecoration extends Declaration$b {
  /**
   * Do not add prefixes for basic values.
   */
  check(decl) {
    return decl.value.split(/\s+/).some(i => !BASIC.includes(i))
  }
}

TextDecoration.names = ['text-decoration'];

var textDecoration = TextDecoration;

let flexSpec$1 = flexSpec$d;
let Declaration$a = declaration;

class JustifyContent extends Declaration$a {
  /**
   * Change property name for 2009 and 2012 specs
   */
  prefixed(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec$1(prefix);
    if (spec === 2009) {
      return prefix + 'box-pack'
    }
    if (spec === 2012) {
      return prefix + 'flex-pack'
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Return property name by final spec
   */
  normalize() {
    return 'justify-content'
  }

  /**
   * Change value for 2009 and 2012 specs
   */
  set(decl, prefix) {
    let spec = flexSpec$1(prefix)[0];
    if (spec === 2009 || spec === 2012) {
      let value = JustifyContent.oldValues[decl.value] || decl.value;
      decl.value = value;
      if (spec !== 2009 || value !== 'distribute') {
        return super.set(decl, prefix)
      }
    } else if (spec === 'final') {
      return super.set(decl, prefix)
    }
    return undefined
  }
}

JustifyContent.names = ['justify-content', 'flex-pack', 'box-pack'];

JustifyContent.oldValues = {
  'flex-end': 'end',
  'flex-start': 'start',
  'space-between': 'justify',
  'space-around': 'distribute'
};

var justifyContent = JustifyContent;

let Declaration$9 = declaration;

class BackgroundSize extends Declaration$9 {
  /**
   * Duplication parameter for -webkit- browsers
   */
  set(decl, prefix) {
    let value = decl.value.toLowerCase();
    if (
      prefix === '-webkit-' &&
      !value.includes(' ') &&
      value !== 'contain' &&
      value !== 'cover'
    ) {
      decl.value = decl.value + ' ' + decl.value;
    }
    return super.set(decl, prefix)
  }
}

BackgroundSize.names = ['background-size'];

var backgroundSize = BackgroundSize;

let Declaration$8 = declaration;
let utils$2 = gridUtils;

class GridRowColumn extends Declaration$8 {
  /**
   * Translate grid-row / grid-column to separate -ms- prefixed properties
   */
  insert(decl, prefix, prefixes) {
    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)

    let values = utils$2.parse(decl);
    let [start, span] = utils$2.translate(values, 0, 1);

    let hasStartValueSpan = values[0] && values[0].includes('span');

    if (hasStartValueSpan) {
      span = values[0].join('').replace(/\D/g, '');
    }
[
      [decl.prop, start],
      [`${decl.prop}-span`, span]
    ].forEach(([prop, value]) => {
      utils$2.insertDecl(decl, prop, value);
    });

    return undefined
  }
}

GridRowColumn.names = ['grid-row', 'grid-column'];

var gridRowColumn = GridRowColumn;

let Declaration$7 = declaration;
let {
  prefixTrackProp: prefixTrackProp$1,
  prefixTrackValue: prefixTrackValue$1,
  autoplaceGridItems,
  getGridGap: getGridGap$1,
  inheritGridGap: inheritGridGap$1
} = gridUtils;
let Processor = processor;

class GridRowsColumns extends Declaration$7 {
  /**
   * Change property name for IE
   */
  prefixed(prop, prefix) {
    if (prefix === '-ms-') {
      return prefixTrackProp$1({ prop, prefix })
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Change IE property back
   */
  normalize(prop) {
    return prop.replace(/^grid-(rows|columns)/, 'grid-template-$1')
  }

  insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)

    let { parent, prop, value } = decl;
    let isRowProp = prop.includes('rows');
    let isColumnProp = prop.includes('columns');

    let hasGridTemplate = parent.some(
      i => i.prop === 'grid-template' || i.prop === 'grid-template-areas'
    );

    /**
     * Not to prefix rows declaration if grid-template(-areas) is present
     */
    if (hasGridTemplate && isRowProp) {
      return false
    }

    let processor = new Processor({ options: {} });
    let status = processor.gridStatus(parent, result);
    let gap = getGridGap$1(decl);
    gap = inheritGridGap$1(decl, gap) || gap;

    let gapValue = isRowProp ? gap.row : gap.column;

    if ((status === 'no-autoplace' || status === true) && !hasGridTemplate) {
      gapValue = null;
    }

    let prefixValue = prefixTrackValue$1({
      value,
      gap: gapValue
    });

    /**
     * Insert prefixes
     */
    decl.cloneBefore({
      prop: prefixTrackProp$1({ prop, prefix }),
      value: prefixValue
    });

    let autoflow = parent.nodes.find(i => i.prop === 'grid-auto-flow');
    let autoflowValue = 'row';

    if (autoflow && !processor.disabled(autoflow, result)) {
      autoflowValue = autoflow.value.trim();
    }
    if (status === 'autoplace') {
      /**
       * Show warning if grid-template-rows decl is not found
       */
      let rowDecl = parent.nodes.find(i => i.prop === 'grid-template-rows');

      if (!rowDecl && hasGridTemplate) {
        return undefined
      } else if (!rowDecl && !hasGridTemplate) {
        decl.warn(
          result,
          'Autoplacement does not work without grid-template-rows property'
        );
        return undefined
      }

      /**
       * Show warning if grid-template-columns decl is not found
       */
      let columnDecl = parent.nodes.find(i => {
        return i.prop === 'grid-template-columns'
      });
      if (!columnDecl && !hasGridTemplate) {
        decl.warn(
          result,
          'Autoplacement does not work without grid-template-columns property'
        );
      }

      /**
       * Autoplace grid items
       */
      if (isColumnProp && !hasGridTemplate) {
        autoplaceGridItems(decl, result, gap, autoflowValue);
      }
    }

    return undefined
  }
}

GridRowsColumns.names = [
  'grid-template-rows',
  'grid-template-columns',
  'grid-rows',
  'grid-columns'
];

var gridRowsColumns = GridRowsColumns;

let Declaration$6 = declaration;

class GridColumnAlign extends Declaration$6 {
  /**
   * Do not prefix flexbox values
   */
  check(decl) {
    return !decl.value.includes('flex-') && decl.value !== 'baseline'
  }

  /**
   * Change property name for IE
   */
  prefixed(prop, prefix) {
    return prefix + 'grid-column-align'
  }

  /**
   * Change IE property back
   */
  normalize() {
    return 'justify-self'
  }
}

GridColumnAlign.names = ['grid-column-align'];

var gridColumnAlign = GridColumnAlign;

let Declaration$5 = declaration;

class PrintColorAdjust extends Declaration$5 {
  /**
   * Change property name for WebKit-based browsers
   */
  prefixed(prop, prefix) {
    if (prefix === '-moz-') {
      return 'color-adjust'
    } else {
      return prefix + 'print-color-adjust'
    }
  }

  /**
   * Return property name by spec
   */
  normalize() {
    return 'print-color-adjust'
  }
}

PrintColorAdjust.names = ['print-color-adjust', 'color-adjust'];

var printColorAdjust = PrintColorAdjust;

let Declaration$4 = declaration;

class OverscrollBehavior extends Declaration$4 {
  /**
   * Change property name for IE
   */
  prefixed(prop, prefix) {
    return prefix + 'scroll-chaining'
  }

  /**
   * Return property name by spec
   */
  normalize() {
    return 'overscroll-behavior'
  }

  /**
   * Change value for IE
   */
  set(decl, prefix) {
    if (decl.value === 'auto') {
      decl.value = 'chained';
    } else if (decl.value === 'none' || decl.value === 'contain') {
      decl.value = 'none';
    }
    return super.set(decl, prefix)
  }
}

OverscrollBehavior.names = ['overscroll-behavior', 'scroll-chaining'];

var overscrollBehavior = OverscrollBehavior;

let Declaration$3 = declaration;
let {
  parseGridAreas,
  warnMissedAreas,
  prefixTrackProp,
  prefixTrackValue,
  getGridGap,
  warnGridGap,
  inheritGridGap
} = gridUtils;

function getGridRows(tpl) {
  return tpl
    .trim()
    .slice(1, -1)
    .split(/["']\s*["']?/g)
}

class GridTemplateAreas extends Declaration$3 {
  /**
   * Translate grid-template-areas to separate -ms- prefixed properties
   */
  insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)

    let hasColumns = false;
    let hasRows = false;
    let parent = decl.parent;
    let gap = getGridGap(decl);
    gap = inheritGridGap(decl, gap) || gap;

    // remove already prefixed rows
    // to prevent doubling prefixes
    parent.walkDecls(/-ms-grid-rows/, i => i.remove());

    // add empty tracks to rows
    parent.walkDecls(/grid-template-(rows|columns)/, trackDecl => {
      if (trackDecl.prop === 'grid-template-rows') {
        hasRows = true;
        let { prop, value } = trackDecl;
        trackDecl.cloneBefore({
          prop: prefixTrackProp({ prop, prefix }),
          value: prefixTrackValue({ value, gap: gap.row })
        });
      } else {
        hasColumns = true;
      }
    });

    let gridRows = getGridRows(decl.value);

    if (hasColumns && !hasRows && gap.row && gridRows.length > 1) {
      decl.cloneBefore({
        prop: '-ms-grid-rows',
        value: prefixTrackValue({
          value: `repeat(${gridRows.length}, auto)`,
          gap: gap.row
        }),
        raws: {}
      });
    }

    // warnings
    warnGridGap({
      gap,
      hasColumns,
      decl,
      result
    });

    let areas = parseGridAreas({
      rows: gridRows,
      gap
    });

    warnMissedAreas(areas, decl, result);

    return decl
  }
}

GridTemplateAreas.names = ['grid-template-areas'];

var gridTemplateAreas = GridTemplateAreas;

let Declaration$2 = declaration;

class TextEmphasisPosition extends Declaration$2 {
  set(decl, prefix) {
    if (prefix === '-webkit-') {
      decl.value = decl.value.replace(/\s*(right|left)\s*/i, '');
    }
    return super.set(decl, prefix)
  }
}

TextEmphasisPosition.names = ['text-emphasis-position'];

var textEmphasisPosition = TextEmphasisPosition;

let Declaration$1 = declaration;

class TextDecorationSkipInk extends Declaration$1 {
  /**
   * Change prefix for ink value
   */
  set(decl, prefix) {
    if (decl.prop === 'text-decoration-skip-ink' && decl.value === 'auto') {
      decl.prop = prefix + 'text-decoration-skip';
      decl.value = 'ink';
      return decl
    } else {
      return super.set(decl, prefix)
    }
  }
}

TextDecorationSkipInk.names = [
  'text-decoration-skip-ink',
  'text-decoration-skip'
];

var textDecorationSkipInk = TextDecorationSkipInk;

var normalizeRange = {
  wrap: wrapRange,
  limit: limitRange,
  validate: validateRange,
  test: testRange,
  curry: curry,
  name: name
};

function wrapRange(min, max, value) {
  var maxLessMin = max - min;
  return ((value - min) % maxLessMin + maxLessMin) % maxLessMin + min;
}

function limitRange(min, max, value) {
  return Math.max(min, Math.min(max, value));
}

function validateRange(min, max, value, minExclusive, maxExclusive) {
  if (!testRange(min, max, value, minExclusive, maxExclusive)) {
    throw new Error(value + ' is outside of range [' + min + ',' + max + ')');
  }
  return value;
}

function testRange(min, max, value, minExclusive, maxExclusive) {
  return !(
       value < min ||
       value > max ||
       (maxExclusive && (value === max)) ||
       (minExclusive && (value === min))
  );
}

function name(min, max, minExcl, maxExcl) {
  return (minExcl ? '(' : '[') + min + ',' + max + (maxExcl ? ')' : ']');
}

function curry(min, max, minExclusive, maxExclusive) {
  var boundNameFn = name.bind(null, min, max, minExclusive, maxExclusive);
  return {
    wrap: wrapRange.bind(null, min, max),
    limit: limitRange.bind(null, min, max),
    validate: function(value) {
      return validateRange(min, max, value, minExclusive, maxExclusive);
    },
    test: function(value) {
      return testRange(min, max, value, minExclusive, maxExclusive);
    },
    toString: boundNameFn,
    name: boundNameFn
  };
}

let parser = lib;
let range = normalizeRange;

let OldValue$3 = oldValue;
let Value$8 = value;
let utils$1 = utils$f;

let IS_DIRECTION = /top|left|right|bottom/gi;

class Gradient extends Value$8 {
  /**
   * Change degrees for webkit prefix
   */
  replace(string, prefix) {
    let ast = parser(string);
    for (let node of ast.nodes) {
      let gradientName = this.name; // gradient name
      if (node.type === 'function' && node.value === gradientName) {
        node.nodes = this.newDirection(node.nodes);
        node.nodes = this.normalize(node.nodes, gradientName);
        if (prefix === '-webkit- old') {
          let changes = this.oldWebkit(node);
          if (!changes) {
            return false
          }
        } else {
          node.nodes = this.convertDirection(node.nodes);
          node.value = prefix + node.value;
        }
      }
    }
    return ast.toString()
  }

  /**
   * Replace first token
   */
  replaceFirst(params, ...words) {
    let prefix = words.map(i => {
      if (i === ' ') {
        return { type: 'space', value: i }
      }
      return { type: 'word', value: i }
    });
    return prefix.concat(params.slice(1))
  }

  /**
   * Convert angle unit to deg
   */
  normalizeUnit(str, full) {
    let num = parseFloat(str);
    let deg = (num / full) * 360;
    return `${deg}deg`
  }

  /**
   * Normalize angle
   */
  normalize(nodes, gradientName) {
    if (!nodes[0]) return nodes

    if (/-?\d+(.\d+)?grad/.test(nodes[0].value)) {
      nodes[0].value = this.normalizeUnit(nodes[0].value, 400);
    } else if (/-?\d+(.\d+)?rad/.test(nodes[0].value)) {
      nodes[0].value = this.normalizeUnit(nodes[0].value, 2 * Math.PI);
    } else if (/-?\d+(.\d+)?turn/.test(nodes[0].value)) {
      nodes[0].value = this.normalizeUnit(nodes[0].value, 1);
    } else if (nodes[0].value.includes('deg')) {
      let num = parseFloat(nodes[0].value);
      num = range.wrap(0, 360, num);
      nodes[0].value = `${num}deg`;
    }

    if (
      gradientName === 'linear-gradient' ||
      gradientName === 'repeating-linear-gradient'
    ) {
      let direction = nodes[0].value;

      // Unitless zero for `<angle>` values are allowed in CSS gradients and transforms.
      // Spec: https://github.com/w3c/csswg-drafts/commit/602789171429b2231223ab1e5acf8f7f11652eb3
      if (direction === '0deg' || direction === '0') {
        nodes = this.replaceFirst(nodes, 'to', ' ', 'top');
      } else if (direction === '90deg') {
        nodes = this.replaceFirst(nodes, 'to', ' ', 'right');
      } else if (direction === '180deg') {
        nodes = this.replaceFirst(nodes, 'to', ' ', 'bottom'); // default value
      } else if (direction === '270deg') {
        nodes = this.replaceFirst(nodes, 'to', ' ', 'left');
      }
    }

    return nodes
  }

  /**
   * Replace old direction to new
   */
  newDirection(params) {
    if (params[0].value === 'to') {
      return params
    }
    IS_DIRECTION.lastIndex = 0; // reset search index of global regexp
    if (!IS_DIRECTION.test(params[0].value)) {
      return params
    }

    params.unshift(
      {
        type: 'word',
        value: 'to'
      },
      {
        type: 'space',
        value: ' '
      }
    );

    for (let i = 2; i < params.length; i++) {
      if (params[i].type === 'div') {
        break
      }
      if (params[i].type === 'word') {
        params[i].value = this.revertDirection(params[i].value);
      }
    }

    return params
  }

  /**
   * Look for at word
   */
  isRadial(params) {
    let state = 'before';
    for (let param of params) {
      if (state === 'before' && param.type === 'space') {
        state = 'at';
      } else if (state === 'at' && param.value === 'at') {
        state = 'after';
      } else if (state === 'after' && param.type === 'space') {
        return true
      } else if (param.type === 'div') {
        break
      } else {
        state = 'before';
      }
    }
    return false
  }

  /**
   * Change new direction to old
   */
  convertDirection(params) {
    if (params.length > 0) {
      if (params[0].value === 'to') {
        this.fixDirection(params);
      } else if (params[0].value.includes('deg')) {
        this.fixAngle(params);
      } else if (this.isRadial(params)) {
        this.fixRadial(params);
      }
    }
    return params
  }

  /**
   * Replace `to top left` to `bottom right`
   */
  fixDirection(params) {
    params.splice(0, 2);

    for (let param of params) {
      if (param.type === 'div') {
        break
      }
      if (param.type === 'word') {
        param.value = this.revertDirection(param.value);
      }
    }
  }

  /**
   * Add 90 degrees
   */
  fixAngle(params) {
    let first = params[0].value;
    first = parseFloat(first);
    first = Math.abs(450 - first) % 360;
    first = this.roundFloat(first, 3);
    params[0].value = `${first}deg`;
  }

  /**
   * Fix radial direction syntax
   */
  fixRadial(params) {
    let first = [];
    let second = [];
    let a, b, c, i, next;

    for (i = 0; i < params.length - 2; i++) {
      a = params[i];
      b = params[i + 1];
      c = params[i + 2];
      if (a.type === 'space' && b.value === 'at' && c.type === 'space') {
        next = i + 3;
        break
      } else {
        first.push(a);
      }
    }

    let div;
    for (i = next; i < params.length; i++) {
      if (params[i].type === 'div') {
        div = params[i];
        break
      } else {
        second.push(params[i]);
      }
    }

    params.splice(0, i, ...second, div, ...first);
  }

  revertDirection(word) {
    return Gradient.directions[word.toLowerCase()] || word
  }

  /**
   * Round float and save digits under dot
   */
  roundFloat(float, digits) {
    return parseFloat(float.toFixed(digits))
  }

  /**
   * Convert to old webkit syntax
   */
  oldWebkit(node) {
    let { nodes } = node;
    let string = parser.stringify(node.nodes);

    if (this.name !== 'linear-gradient') {
      return false
    }
    if (nodes[0] && nodes[0].value.includes('deg')) {
      return false
    }
    if (
      string.includes('px') ||
      string.includes('-corner') ||
      string.includes('-side')
    ) {
      return false
    }

    let params = [[]];
    for (let i of nodes) {
      params[params.length - 1].push(i);
      if (i.type === 'div' && i.value === ',') {
        params.push([]);
      }
    }

    this.oldDirection(params);
    this.colorStops(params);

    node.nodes = [];
    for (let param of params) {
      node.nodes = node.nodes.concat(param);
    }

    node.nodes.unshift(
      { type: 'word', value: 'linear' },
      this.cloneDiv(node.nodes)
    );
    node.value = '-webkit-gradient';

    return true
  }

  /**
   * Change direction syntax to old webkit
   */
  oldDirection(params) {
    let div = this.cloneDiv(params[0]);

    if (params[0][0].value !== 'to') {
      return params.unshift([
        { type: 'word', value: Gradient.oldDirections.bottom },
        div
      ])
    } else {
      let words = [];
      for (let node of params[0].slice(2)) {
        if (node.type === 'word') {
          words.push(node.value.toLowerCase());
        }
      }

      words = words.join(' ');
      let old = Gradient.oldDirections[words] || words;

      params[0] = [{ type: 'word', value: old }, div];
      return params[0]
    }
  }

  /**
   * Get div token from exists parameters
   */
  cloneDiv(params) {
    for (let i of params) {
      if (i.type === 'div' && i.value === ',') {
        return i
      }
    }
    return { type: 'div', value: ',', after: ' ' }
  }

  /**
   * Change colors syntax to old webkit
   */
  colorStops(params) {
    let result = [];
    for (let i = 0; i < params.length; i++) {
      let pos;
      let param = params[i];
      let item;
      if (i === 0) {
        continue
      }

      let color = parser.stringify(param[0]);
      if (param[1] && param[1].type === 'word') {
        pos = param[1].value;
      } else if (param[2] && param[2].type === 'word') {
        pos = param[2].value;
      }

      let stop;
      if (i === 1 && (!pos || pos === '0%')) {
        stop = `from(${color})`;
      } else if (i === params.length - 1 && (!pos || pos === '100%')) {
        stop = `to(${color})`;
      } else if (pos) {
        stop = `color-stop(${pos}, ${color})`;
      } else {
        stop = `color-stop(${color})`;
      }

      let div = param[param.length - 1];
      params[i] = [{ type: 'word', value: stop }];
      if (div.type === 'div' && div.value === ',') {
        item = params[i].push(div);
      }
      result.push(item);
    }
    return result
  }

  /**
   * Remove old WebKit gradient too
   */
  old(prefix) {
    if (prefix === '-webkit-') {
      let type;
      if (this.name === 'linear-gradient') {
        type = 'linear';
      } else if (this.name === 'repeating-linear-gradient') {
        type = 'repeating-linear';
      } else if (this.name === 'repeating-radial-gradient') {
        type = 'repeating-radial';
      } else {
        type = 'radial';
      }
      let string = '-gradient';
      let regexp = utils$1.regexp(
        `-webkit-(${type}-gradient|gradient\\(\\s*${type})`,
        false
      );

      return new OldValue$3(this.name, prefix + this.name, string, regexp)
    } else {
      return super.old(prefix)
    }
  }

  /**
   * Do not add non-webkit prefixes for list-style and object
   */
  add(decl, prefix) {
    let p = decl.prop;
    if (p.includes('mask')) {
      if (prefix === '-webkit-' || prefix === '-webkit- old') {
        return super.add(decl, prefix)
      }
    } else if (
      p === 'list-style' ||
      p === 'list-style-image' ||
      p === 'content'
    ) {
      if (prefix === '-webkit-' || prefix === '-webkit- old') {
        return super.add(decl, prefix)
      }
    } else {
      return super.add(decl, prefix)
    }
    return undefined
  }
}

Gradient.names = [
  'linear-gradient',
  'repeating-linear-gradient',
  'radial-gradient',
  'repeating-radial-gradient'
];

Gradient.directions = {
  top: 'bottom', // default value
  left: 'right',
  bottom: 'top',
  right: 'left'
};

// Direction to replace
Gradient.oldDirections = {
  'top': 'left bottom, left top',
  'left': 'right top, left top',
  'bottom': 'left top, left bottom',
  'right': 'left top, right top',

  'top right': 'left bottom, right top',
  'top left': 'right bottom, left top',
  'right top': 'left bottom, right top',
  'right bottom': 'left top, right bottom',
  'bottom right': 'left top, right bottom',
  'bottom left': 'right top, left bottom',
  'left top': 'right bottom, left top',
  'left bottom': 'right top, left bottom'
};

var gradient = Gradient;

let OldValue$2 = oldValue;
let Value$7 = value;

function regexp(name) {
  return new RegExp(`(^|[\\s,(])(${name}($|[\\s),]))`, 'gi')
}

class Intrinsic extends Value$7 {
  regexp() {
    if (!this.regexpCache) this.regexpCache = regexp(this.name);
    return this.regexpCache
  }

  isStretch() {
    return (
      this.name === 'stretch' ||
      this.name === 'fill' ||
      this.name === 'fill-available'
    )
  }

  replace(string, prefix) {
    if (prefix === '-moz-' && this.isStretch()) {
      return string.replace(this.regexp(), '$1-moz-available$3')
    }
    if (prefix === '-webkit-' && this.isStretch()) {
      return string.replace(this.regexp(), '$1-webkit-fill-available$3')
    }
    return super.replace(string, prefix)
  }

  old(prefix) {
    let prefixed = prefix + this.name;
    if (this.isStretch()) {
      if (prefix === '-moz-') {
        prefixed = '-moz-available';
      } else if (prefix === '-webkit-') {
        prefixed = '-webkit-fill-available';
      }
    }
    return new OldValue$2(this.name, prefixed, prefixed, regexp(prefixed))
  }

  add(decl, prefix) {
    if (decl.prop.includes('grid') && prefix !== '-webkit-') {
      return undefined
    }
    return super.add(decl, prefix)
  }
}

Intrinsic.names = [
  'max-content',
  'min-content',
  'fit-content',
  'fill',
  'fill-available',
  'stretch'
];

var intrinsic = Intrinsic;

let OldValue$1 = oldValue;
let Value$6 = value;

class Pixelated extends Value$6 {
  /**
   * Use non-standard name for WebKit and Firefox
   */
  replace(string, prefix) {
    if (prefix === '-webkit-') {
      return string.replace(this.regexp(), '$1-webkit-optimize-contrast')
    }
    if (prefix === '-moz-') {
      return string.replace(this.regexp(), '$1-moz-crisp-edges')
    }
    return super.replace(string, prefix)
  }

  /**
   * Different name for WebKit and Firefox
   */
  old(prefix) {
    if (prefix === '-webkit-') {
      return new OldValue$1(this.name, '-webkit-optimize-contrast')
    }
    if (prefix === '-moz-') {
      return new OldValue$1(this.name, '-moz-crisp-edges')
    }
    return super.old(prefix)
  }
}

Pixelated.names = ['pixelated'];

var pixelated = Pixelated;

let Value$5 = value;

class ImageSet extends Value$5 {
  /**
   * Use non-standard name for WebKit and Firefox
   */
  replace(string, prefix) {
    let fixed = super.replace(string, prefix);
    if (prefix === '-webkit-') {
      fixed = fixed.replace(/("[^"]+"|'[^']+')(\s+\d+\w)/gi, 'url($1)$2');
    }
    return fixed
  }
}

ImageSet.names = ['image-set'];

var imageSet = ImageSet;

let list = postcss_1.list;

let Value$4 = value;

class CrossFade extends Value$4 {
  replace(string, prefix) {
    return list
      .space(string)
      .map(value => {
        if (value.slice(0, +this.name.length + 1) !== this.name + '(') {
          return value
        }

        let close = value.lastIndexOf(')');
        let after = value.slice(close + 1);
        let args = value.slice(this.name.length + 1, close);

        if (prefix === '-webkit-') {
          let match = args.match(/\d*.?\d+%?/);
          if (match) {
            args = args.slice(match[0].length).trim();
            args += `, ${match[0]}`;
          } else {
            args += ', 0.5';
          }
        }
        return prefix + this.name + '(' + args + ')' + after
      })
      .join(' ')
  }
}

CrossFade.names = ['cross-fade'];

var crossFade = CrossFade;

let flexSpec = flexSpec$d;
let OldValue = oldValue;
let Value$3 = value;

class DisplayFlex extends Value$3 {
  constructor(name, prefixes) {
    super(name, prefixes);
    if (name === 'display-flex') {
      this.name = 'flex';
    }
  }

  /**
   * Faster check for flex value
   */
  check(decl) {
    return decl.prop === 'display' && decl.value === this.name
  }

  /**
   * Return value by spec
   */
  prefixed(prefix) {
    let spec, value
    ;[spec, prefix] = flexSpec(prefix);

    if (spec === 2009) {
      if (this.name === 'flex') {
        value = 'box';
      } else {
        value = 'inline-box';
      }
    } else if (spec === 2012) {
      if (this.name === 'flex') {
        value = 'flexbox';
      } else {
        value = 'inline-flexbox';
      }
    } else if (spec === 'final') {
      value = this.name;
    }

    return prefix + value
  }

  /**
   * Add prefix to value depend on flebox spec version
   */
  replace(string, prefix) {
    return this.prefixed(prefix)
  }

  /**
   * Change value for old specs
   */
  old(prefix) {
    let prefixed = this.prefixed(prefix);
    if (!prefixed) return undefined
    return new OldValue(this.name, prefixed)
  }
}

DisplayFlex.names = ['display-flex', 'inline-flex'];

var displayFlex = DisplayFlex;

let Value$2 = value;

class DisplayGrid extends Value$2 {
  constructor(name, prefixes) {
    super(name, prefixes);
    if (name === 'display-grid') {
      this.name = 'grid';
    }
  }

  /**
   * Faster check for flex value
   */
  check(decl) {
    return decl.prop === 'display' && decl.value === this.name
  }
}

DisplayGrid.names = ['display-grid', 'inline-grid'];

var displayGrid = DisplayGrid;

let Value$1 = value;

class FilterValue extends Value$1 {
  constructor(name, prefixes) {
    super(name, prefixes);
    if (name === 'filter-function') {
      this.name = 'filter';
    }
  }
}

FilterValue.names = ['filter', 'filter-function'];

var filterValue = FilterValue;

let Selector$1 = selector;
let utils = utils$f;

class Autofill extends Selector$1 {
  constructor(name, prefixes, all) {
    super(name, prefixes, all);

    if (this.prefixes) {
      this.prefixes = utils.uniq(this.prefixes.map(() => '-webkit-'));
    }
  }

  /**
   * Return different selectors depend on prefix
   */
  prefixed(prefix) {
    if (prefix === '-webkit-') {
      return ':-webkit-autofill'
    }
    return `:${prefix}autofill`
  }
}

Autofill.names = [':autofill'];

var autofill = Autofill;

let Declaration = declaration;
let Selector = selector;
let Value = value;
let hackFullscreen = fullscreen;
let hackPlaceholder = placeholder;
let hackPlaceholderShown = placeholderShown;
let hackFileSelectorButton = fileSelectorButton;
let hackFlex = flex;
let hackOrder = order;
let hackFilter = filter;
let hackGridEnd = gridEnd;
let hackAnimation = animation;
let hackFlexFlow = flexFlow;
let hackFlexGrow = flexGrow;
let hackFlexWrap = flexWrap;
let hackGridArea = gridArea;
let hackPlaceSelf = placeSelf;
let hackGridStart = gridStart;
let hackAlignSelf = alignSelf;
let hackAppearance = appearance;
let hackFlexBasis = flexBasis;
let hackMaskBorder = maskBorder;
let hackMaskComposite = maskComposite;
let hackAlignItems = alignItems;
let hackUserSelect = userSelect;
let hackFlexShrink = flexShrink;
let hackBreakProps = breakProps;
let hackWritingMode = writingMode;
let hackBorderImage = borderImage;
let hackAlignContent = alignContent;
let hackBorderRadius = borderRadius;
let hackBlockLogical = blockLogical;
let hackGridTemplate = gridTemplate;
let hackInlineLogical = inlineLogical;
let hackGridRowAlign = gridRowAlign;
let hackTransformDecl = transformDecl;
let hackFlexDirection = flexDirection;
let hackImageRendering = imageRendering;
let hackBackdropFilter = backdropFilter;
let hackBackgroundClip = backgroundClip;
let hackTextDecoration = textDecoration;
let hackJustifyContent = justifyContent;
let hackBackgroundSize = backgroundSize;
let hackGridRowColumn = gridRowColumn;
let hackGridRowsColumns = gridRowsColumns;
let hackGridColumnAlign = gridColumnAlign;
let hackPrintColorAdjust = printColorAdjust;
let hackOverscrollBehavior = overscrollBehavior;
let hackGridTemplateAreas = gridTemplateAreas;
let hackTextEmphasisPosition = textEmphasisPosition;
let hackTextDecorationSkipInk = textDecorationSkipInk;
let hackGradient = gradient;
let hackIntrinsic = intrinsic;
let hackPixelated = pixelated;
let hackImageSet = imageSet;
let hackCrossFade = crossFade;
let hackDisplayFlex = displayFlex;
let hackDisplayGrid = displayGrid;
let hackFilterValue = filterValue;
let hackAutofill = autofill;

Selector.hack(hackAutofill);
Selector.hack(hackFullscreen);
Selector.hack(hackPlaceholder);
Selector.hack(hackPlaceholderShown);
Selector.hack(hackFileSelectorButton);
Declaration.hack(hackFlex);
Declaration.hack(hackOrder);
Declaration.hack(hackFilter);
Declaration.hack(hackGridEnd);
Declaration.hack(hackAnimation);
Declaration.hack(hackFlexFlow);
Declaration.hack(hackFlexGrow);
Declaration.hack(hackFlexWrap);
Declaration.hack(hackGridArea);
Declaration.hack(hackPlaceSelf);
Declaration.hack(hackGridStart);
Declaration.hack(hackAlignSelf);
Declaration.hack(hackAppearance);
Declaration.hack(hackFlexBasis);
Declaration.hack(hackMaskBorder);
Declaration.hack(hackMaskComposite);
Declaration.hack(hackAlignItems);
Declaration.hack(hackUserSelect);
Declaration.hack(hackFlexShrink);
Declaration.hack(hackBreakProps);
Declaration.hack(hackWritingMode);
Declaration.hack(hackBorderImage);
Declaration.hack(hackAlignContent);
Declaration.hack(hackBorderRadius);
Declaration.hack(hackBlockLogical);
Declaration.hack(hackGridTemplate);
Declaration.hack(hackInlineLogical);
Declaration.hack(hackGridRowAlign);
Declaration.hack(hackTransformDecl);
Declaration.hack(hackFlexDirection);
Declaration.hack(hackImageRendering);
Declaration.hack(hackBackdropFilter);
Declaration.hack(hackBackgroundClip);
Declaration.hack(hackTextDecoration);
Declaration.hack(hackJustifyContent);
Declaration.hack(hackBackgroundSize);
Declaration.hack(hackGridRowColumn);
Declaration.hack(hackGridRowsColumns);
Declaration.hack(hackGridColumnAlign);
Declaration.hack(hackOverscrollBehavior);
Declaration.hack(hackGridTemplateAreas);
Declaration.hack(hackPrintColorAdjust);
Declaration.hack(hackTextEmphasisPosition);
Declaration.hack(hackTextDecorationSkipInk);
Value.hack(hackGradient);
Value.hack(hackIntrinsic);
Value.hack(hackPixelated);
Value.hack(hackImageSet);
Value.hack(hackCrossFade);
Value.hack(hackDisplayFlex);
Value.hack(hackDisplayGrid);
Value.hack(hackFilterValue);

let unpack = unpacker.feature;

function browsersSort(a, b) {
  a = a.split(' ');
  b = b.split(' ');
  if (a[0] > b[0]) {
    return 1
  } else if (a[0] < b[0]) {
    return -1
  } else {
    return Math.sign(parseFloat(a[1]) - parseFloat(b[1]))
  }
}

// Convert Can I Use data
function f(data, opts, callback) {
  data = unpack(data);

  if (!callback) {
[callback, opts] = [opts, {}];
  }

  let match = opts.match || /\sx($|\s)/;
  let need = [];

  for (let browser in data.stats) {
    let versions = data.stats[browser];
    for (let version in versions) {
      let support = versions[version];
      if (support.match(match)) {
        need.push(browser + ' ' + version);
      }
    }
  }

  callback(need.sort(browsersSort));
}

// Add data for all properties
let result = {};

function prefix(names, data) {
  for (let name of names) {
    result[name] = Object.assign({}, data);
  }
}

function add(names, data) {
  for (let name of names) {
    result[name].browsers = result[name].browsers
      .concat(data.browsers)
      .sort(browsersSort);
  }
}

// Border Radius
let prefixBorderRadius = borderRadius$1;

f(prefixBorderRadius, browsers =>
  prefix(
    [
      'border-radius',
      'border-top-left-radius',
      'border-top-right-radius',
      'border-bottom-right-radius',
      'border-bottom-left-radius'
    ],
    {
      mistakes: ['-khtml-', '-ms-', '-o-'],
      feature: 'border-radius',
      browsers
    }
  )
);

// Box Shadow
let prefixBoxshadow = cssBoxshadow;

f(prefixBoxshadow, browsers =>
  prefix(['box-shadow'], {
    mistakes: ['-khtml-'],
    feature: 'css-boxshadow',
    browsers
  })
);

// Animation
let prefixAnimation = cssAnimation;

f(prefixAnimation, browsers =>
  prefix(
    [
      'animation',
      'animation-name',
      'animation-duration',
      'animation-delay',
      'animation-direction',
      'animation-fill-mode',
      'animation-iteration-count',
      'animation-play-state',
      'animation-timing-function',
      '@keyframes'
    ],
    {
      mistakes: ['-khtml-', '-ms-'],
      feature: 'css-animation',
      browsers
    }
  )
);

// Transition
let prefixTransition = cssTransitions;

f(prefixTransition, browsers =>
  prefix(
    [
      'transition',
      'transition-property',
      'transition-duration',
      'transition-delay',
      'transition-timing-function'
    ],
    {
      mistakes: ['-khtml-', '-ms-'],
      browsers,
      feature: 'css-transitions'
    }
  )
);

// Transform 2D
let prefixTransform2d = transforms2d;

f(prefixTransform2d, browsers =>
  prefix(['transform', 'transform-origin'], {
    feature: 'transforms2d',
    browsers
  })
);

// Transform 3D
let prefixTransforms3d = transforms3d;

f(prefixTransforms3d, browsers => {
  prefix(['perspective', 'perspective-origin'], {
    feature: 'transforms3d',
    browsers
  });
  return prefix(['transform-style'], {
    mistakes: ['-ms-', '-o-'],
    browsers,
    feature: 'transforms3d'
  })
});

f(prefixTransforms3d, { match: /y\sx|y\s#2/ }, browsers =>
  prefix(['backface-visibility'], {
    mistakes: ['-ms-', '-o-'],
    feature: 'transforms3d',
    browsers
  })
);

// Gradients
let prefixGradients = cssGradients;

f(prefixGradients, { match: /y\sx/ }, browsers =>
  prefix(
    [
      'linear-gradient',
      'repeating-linear-gradient',
      'radial-gradient',
      'repeating-radial-gradient'
    ],
    {
      props: [
        'background',
        'background-image',
        'border-image',
        'mask',
        'list-style',
        'list-style-image',
        'content',
        'mask-image'
      ],
      mistakes: ['-ms-'],
      feature: 'css-gradients',
      browsers
    }
  )
);

f(prefixGradients, { match: /a\sx/ }, browsers => {
  browsers = browsers.map(i => {
    if (/firefox|op/.test(i)) {
      return i
    } else {
      return `${i} old`
    }
  });
  return add(
    [
      'linear-gradient',
      'repeating-linear-gradient',
      'radial-gradient',
      'repeating-radial-gradient'
    ],
    {
      feature: 'css-gradients',
      browsers
    }
  )
});

// Box sizing
let prefixBoxsizing = css3Boxsizing;

f(prefixBoxsizing, browsers =>
  prefix(['box-sizing'], {
    feature: 'css3-boxsizing',
    browsers
  })
);

// Filter Effects
let prefixFilters = cssFilters;

f(prefixFilters, browsers =>
  prefix(['filter'], {
    feature: 'css-filters',
    browsers
  })
);

// filter() function
let prefixFilterFunction = cssFilterFunction;

f(prefixFilterFunction, browsers =>
  prefix(['filter-function'], {
    props: [
      'background',
      'background-image',
      'border-image',
      'mask',
      'list-style',
      'list-style-image',
      'content',
      'mask-image'
    ],
    feature: 'css-filter-function',
    browsers
  })
);

// Backdrop-filter
let prefixBackdrop = cssBackdropFilter;

f(prefixBackdrop, { match: /y\sx|y\s#2/ }, browsers =>
  prefix(['backdrop-filter'], {
    feature: 'css-backdrop-filter',
    browsers
  })
);

// element() function
let prefixElementFunction = cssElementFunction;

f(prefixElementFunction, browsers =>
  prefix(['element'], {
    props: [
      'background',
      'background-image',
      'border-image',
      'mask',
      'list-style',
      'list-style-image',
      'content',
      'mask-image'
    ],
    feature: 'css-element-function',
    browsers
  })
);

// Multicolumns
let prefixMulticolumns = multicolumn;

f(prefixMulticolumns, browsers => {
  prefix(
    [
      'columns',
      'column-width',
      'column-gap',
      'column-rule',
      'column-rule-color',
      'column-rule-width',
      'column-count',
      'column-rule-style',
      'column-span',
      'column-fill'
    ],
    {
      feature: 'multicolumn',
      browsers
    }
  );

  let noff = browsers.filter(i => !/firefox/.test(i));
  prefix(['break-before', 'break-after', 'break-inside'], {
    feature: 'multicolumn',
    browsers: noff
  });
});

// User select
let prefixUserSelect = userSelectNone;

f(prefixUserSelect, browsers =>
  prefix(['user-select'], {
    mistakes: ['-khtml-'],
    feature: 'user-select-none',
    browsers
  })
);

// Flexible Box Layout
let prefixFlexbox = flexbox;

f(prefixFlexbox, { match: /a\sx/ }, browsers => {
  browsers = browsers.map(i => {
    if (/ie|firefox/.test(i)) {
      return i
    } else {
      return `${i} 2009`
    }
  });
  prefix(['display-flex', 'inline-flex'], {
    props: ['display'],
    feature: 'flexbox',
    browsers
  });
  prefix(['flex', 'flex-grow', 'flex-shrink', 'flex-basis'], {
    feature: 'flexbox',
    browsers
  });
  prefix(
    [
      'flex-direction',
      'flex-wrap',
      'flex-flow',
      'justify-content',
      'order',
      'align-items',
      'align-self',
      'align-content'
    ],
    {
      feature: 'flexbox',
      browsers
    }
  );
});

f(prefixFlexbox, { match: /y\sx/ }, browsers => {
  add(['display-flex', 'inline-flex'], {
    feature: 'flexbox',
    browsers
  });
  add(['flex', 'flex-grow', 'flex-shrink', 'flex-basis'], {
    feature: 'flexbox',
    browsers
  });
  add(
    [
      'flex-direction',
      'flex-wrap',
      'flex-flow',
      'justify-content',
      'order',
      'align-items',
      'align-self',
      'align-content'
    ],
    {
      feature: 'flexbox',
      browsers
    }
  );
});

// calc() unit
let prefixCalc = calc;

f(prefixCalc, browsers =>
  prefix(['calc'], {
    props: ['*'],
    feature: 'calc',
    browsers
  })
);

// Background options
let prefixBackgroundOptions = backgroundImgOpts;

f(prefixBackgroundOptions, browsers =>
  prefix(['background-origin', 'background-size'], {
    feature: 'background-img-opts',
    browsers
  })
);

// background-clip: text
let prefixBackgroundClipText = backgroundClipText;

f(prefixBackgroundClipText, browsers =>
  prefix(['background-clip'], {
    feature: 'background-clip-text',
    browsers
  })
);

// Font feature settings
let prefixFontFeature = fontFeature;

f(prefixFontFeature, browsers =>
  prefix(
    [
      'font-feature-settings',
      'font-variant-ligatures',
      'font-language-override'
    ],
    {
      feature: 'font-feature',
      browsers
    }
  )
);

// CSS font-kerning property
let prefixFontKerning = fontKerning;

f(prefixFontKerning, browsers =>
  prefix(['font-kerning'], {
    feature: 'font-kerning',
    browsers
  })
);

// Border image
let prefixBorderImage = borderImage$1;

f(prefixBorderImage, browsers =>
  prefix(['border-image'], {
    feature: 'border-image',
    browsers
  })
);

// Selection selector
let prefixSelection = cssSelection;

f(prefixSelection, browsers =>
  prefix(['::selection'], {
    selector: true,
    feature: 'css-selection',
    browsers
  })
);

// Placeholder selector
let prefixPlaceholder = cssPlaceholder;

f(prefixPlaceholder, browsers => {
  prefix(['::placeholder'], {
    selector: true,
    feature: 'css-placeholder',
    browsers: browsers.concat(['ie 10 old', 'ie 11 old', 'firefox 18 old'])
  });
});

// Placeholder-shown selector
let prefixPlaceholderShown = cssPlaceholderShown;

f(prefixPlaceholderShown, browsers => {
  prefix([':placeholder-shown'], {
    selector: true,
    feature: 'css-placeholder-shown',
    browsers
  });
});

// Hyphenation
let prefixHyphens = cssHyphens;

f(prefixHyphens, browsers =>
  prefix(['hyphens'], {
    feature: 'css-hyphens',
    browsers
  })
);

// Fullscreen selector
let prefixFullscreen = fullscreen$1;

f(prefixFullscreen, browsers =>
  prefix([':fullscreen'], {
    selector: true,
    feature: 'fullscreen',
    browsers
  })
);

f(prefixFullscreen, { match: /x(\s#2|$)/ }, browsers =>
  prefix(['::backdrop'], {
    selector: true,
    feature: 'fullscreen',
    browsers
  })
);

// File selector button
let prefixFileSelectorButton = cssFileSelectorButton;

f(prefixFileSelectorButton, browsers =>
  prefix(['::file-selector-button'], {
    selector: true,
    feature: 'file-selector-button',
    browsers
  })
);

// :autofill
let prefixAutofill = cssAutofill;

f(prefixAutofill, browsers =>
  prefix([':autofill'], {
    selector: true,
    feature: 'css-autofill',
    browsers
  })
);

// Tab size
let prefixTabsize = css3Tabsize;

f(prefixTabsize, browsers =>
  prefix(['tab-size'], {
    feature: 'css3-tabsize',
    browsers
  })
);

// Intrinsic & extrinsic sizing
let prefixIntrinsic = intrinsicWidth;

let sizeProps = [
  'width',
  'min-width',
  'max-width',
  'height',
  'min-height',
  'max-height',
  'inline-size',
  'min-inline-size',
  'max-inline-size',
  'block-size',
  'min-block-size',
  'max-block-size',
  'grid',
  'grid-template',
  'grid-template-rows',
  'grid-template-columns',
  'grid-auto-columns',
  'grid-auto-rows'
];

f(prefixIntrinsic, browsers =>
  prefix(['max-content', 'min-content'], {
    props: sizeProps,
    feature: 'intrinsic-width',
    browsers
  })
);

f(prefixIntrinsic, { match: /x|\s#4/ }, browsers =>
  prefix(['fill', 'fill-available'], {
    props: sizeProps,
    feature: 'intrinsic-width',
    browsers
  })
);

f(prefixIntrinsic, { match: /x|\s#5/ }, browsers =>
  prefix(['fit-content'], {
    props: sizeProps,
    feature: 'intrinsic-width',
    browsers
  })
);

// Stretch value

let prefixStretch = cssWidthStretch;

f(prefixStretch, browsers =>
  prefix(['stretch'], {
    props: sizeProps,
    feature: 'css-width-stretch',
    browsers
  })
);

// Zoom cursors
let prefixCursorsNewer = css3CursorsNewer;

f(prefixCursorsNewer, browsers =>
  prefix(['zoom-in', 'zoom-out'], {
    props: ['cursor'],
    feature: 'css3-cursors-newer',
    browsers
  })
);

// Grab cursors
let prefixCursorsGrab = css3CursorsGrab;

f(prefixCursorsGrab, browsers =>
  prefix(['grab', 'grabbing'], {
    props: ['cursor'],
    feature: 'css3-cursors-grab',
    browsers
  })
);

// Sticky position
let prefixSticky = cssSticky;

f(prefixSticky, browsers =>
  prefix(['sticky'], {
    props: ['position'],
    feature: 'css-sticky',
    browsers
  })
);

// Pointer Events
let prefixPointer = pointer;

f(prefixPointer, browsers =>
  prefix(['touch-action'], {
    feature: 'pointer',
    browsers
  })
);

// Text decoration
let prefixDecoration = textDecoration$1;

f(prefixDecoration, { match: /x.*#[235]/ }, browsers =>
  prefix(['text-decoration-skip', 'text-decoration-skip-ink'], {
    feature: 'text-decoration',
    browsers
  })
);

let prefixDecorationShorthand = mdnTextDecorationShorthand;

f(prefixDecorationShorthand, browsers =>
  prefix(['text-decoration'], {
    feature: 'text-decoration',
    browsers
  })
);

let prefixDecorationColor = mdnTextDecorationColor;

f(prefixDecorationColor, browsers =>
  prefix(['text-decoration-color'], {
    feature: 'text-decoration',
    browsers
  })
);

let prefixDecorationLine = mdnTextDecorationLine;

f(prefixDecorationLine, browsers =>
  prefix(['text-decoration-line'], {
    feature: 'text-decoration',
    browsers
  })
);

let prefixDecorationStyle = mdnTextDecorationStyle;

f(prefixDecorationStyle, browsers =>
  prefix(['text-decoration-style'], {
    feature: 'text-decoration',
    browsers
  })
);

// Text Size Adjust
let prefixTextSizeAdjust = textSizeAdjust;

f(prefixTextSizeAdjust, browsers =>
  prefix(['text-size-adjust'], {
    feature: 'text-size-adjust',
    browsers
  })
);

// CSS Masks
let prefixCssMasks = cssMasks;

f(prefixCssMasks, browsers => {
  prefix(
    [
      'mask-clip',
      'mask-composite',
      'mask-image',
      'mask-origin',
      'mask-repeat',
      'mask-border-repeat',
      'mask-border-source'
    ],
    {
      feature: 'css-masks',
      browsers
    }
  );
  prefix(
    [
      'mask',
      'mask-position',
      'mask-size',
      'mask-border',
      'mask-border-outset',
      'mask-border-width',
      'mask-border-slice'
    ],
    {
      feature: 'css-masks',
      browsers
    }
  );
});

// CSS clip-path property
let prefixClipPath = cssClipPath;

f(prefixClipPath, browsers =>
  prefix(['clip-path'], {
    feature: 'css-clip-path',
    browsers
  })
);

// Fragmented Borders and Backgrounds
let prefixBoxdecoration = cssBoxdecorationbreak;

f(prefixBoxdecoration, browsers =>
  prefix(['box-decoration-break'], {
    feature: 'css-boxdecorationbreak',
    browsers
  })
);

// CSS3 object-fit/object-position
let prefixObjectFit = objectFit;

f(prefixObjectFit, browsers =>
  prefix(['object-fit', 'object-position'], {
    feature: 'object-fit',
    browsers
  })
);

// CSS Shapes
let prefixShapes = cssShapes;

f(prefixShapes, browsers =>
  prefix(['shape-margin', 'shape-outside', 'shape-image-threshold'], {
    feature: 'css-shapes',
    browsers
  })
);

// CSS3 text-overflow
let prefixTextOverflow = textOverflow;

f(prefixTextOverflow, browsers =>
  prefix(['text-overflow'], {
    feature: 'text-overflow',
    browsers
  })
);

// Viewport at-rule
let prefixDeviceadaptation = cssDeviceadaptation;

f(prefixDeviceadaptation, browsers =>
  prefix(['@viewport'], {
    feature: 'css-deviceadaptation',
    browsers
  })
);

// Resolution Media Queries
let prefixResolut = cssMediaResolution;

f(prefixResolut, { match: /( x($| )|a #2)/ }, browsers =>
  prefix(['@resolution'], {
    feature: 'css-media-resolution',
    browsers
  })
);

// CSS text-align-last
let prefixTextAlignLast = cssTextAlignLast;

f(prefixTextAlignLast, browsers =>
  prefix(['text-align-last'], {
    feature: 'css-text-align-last',
    browsers
  })
);

// Crisp Edges Image Rendering Algorithm
let prefixCrispedges = cssCrispEdges;

f(prefixCrispedges, { match: /y x|a x #1/ }, browsers =>
  prefix(['pixelated'], {
    props: ['image-rendering'],
    feature: 'css-crisp-edges',
    browsers
  })
);

f(prefixCrispedges, { match: /a x #2/ }, browsers =>
  prefix(['image-rendering'], {
    feature: 'css-crisp-edges',
    browsers
  })
);

// Logical Properties
let prefixLogicalProps = cssLogicalProps;

f(prefixLogicalProps, browsers =>
  prefix(
    [
      'border-inline-start',
      'border-inline-end',
      'margin-inline-start',
      'margin-inline-end',
      'padding-inline-start',
      'padding-inline-end'
    ],
    {
      feature: 'css-logical-props',
      browsers
    }
  )
);

f(prefixLogicalProps, { match: /x\s#2/ }, browsers =>
  prefix(
    [
      'border-block-start',
      'border-block-end',
      'margin-block-start',
      'margin-block-end',
      'padding-block-start',
      'padding-block-end'
    ],
    {
      feature: 'css-logical-props',
      browsers
    }
  )
);

// CSS appearance
let prefixAppearance = cssAppearance;

f(prefixAppearance, { match: /#2|x/ }, browsers =>
  prefix(['appearance'], {
    feature: 'css-appearance',
    browsers
  })
);

// CSS Scroll snap points
let prefixSnappoints = cssSnappoints;

f(prefixSnappoints, browsers =>
  prefix(
    [
      'scroll-snap-type',
      'scroll-snap-coordinate',
      'scroll-snap-destination',
      'scroll-snap-points-x',
      'scroll-snap-points-y'
    ],
    {
      feature: 'css-snappoints',
      browsers
    }
  )
);

// CSS Regions
let prefixRegions = cssRegions;

f(prefixRegions, browsers =>
  prefix(['flow-into', 'flow-from', 'region-fragment'], {
    feature: 'css-regions',
    browsers
  })
);

// CSS image-set
let prefixImageSet = cssImageSet;

f(prefixImageSet, browsers =>
  prefix(['image-set'], {
    props: [
      'background',
      'background-image',
      'border-image',
      'cursor',
      'mask',
      'mask-image',
      'list-style',
      'list-style-image',
      'content'
    ],
    feature: 'css-image-set',
    browsers
  })
);

// Writing Mode
let prefixWritingMode = cssWritingMode;

f(prefixWritingMode, { match: /a|x/ }, browsers =>
  prefix(['writing-mode'], {
    feature: 'css-writing-mode',
    browsers
  })
);

// Cross-Fade Function
let prefixCrossFade = cssCrossFade;

f(prefixCrossFade, browsers =>
  prefix(['cross-fade'], {
    props: [
      'background',
      'background-image',
      'border-image',
      'mask',
      'list-style',
      'list-style-image',
      'content',
      'mask-image'
    ],
    feature: 'css-cross-fade',
    browsers
  })
);

// Read Only selector
let prefixReadOnly = cssReadOnlyWrite;

f(prefixReadOnly, browsers =>
  prefix([':read-only', ':read-write'], {
    selector: true,
    feature: 'css-read-only-write',
    browsers
  })
);

// Text Emphasize
let prefixTextEmphasis = textEmphasis;

f(prefixTextEmphasis, browsers =>
  prefix(
    [
      'text-emphasis',
      'text-emphasis-position',
      'text-emphasis-style',
      'text-emphasis-color'
    ],
    {
      feature: 'text-emphasis',
      browsers
    }
  )
);

// CSS Grid Layout
let prefixGrid = cssGrid;

f(prefixGrid, browsers => {
  prefix(['display-grid', 'inline-grid'], {
    props: ['display'],
    feature: 'css-grid',
    browsers
  });
  prefix(
    [
      'grid-template-columns',
      'grid-template-rows',
      'grid-row-start',
      'grid-column-start',
      'grid-row-end',
      'grid-column-end',
      'grid-row',
      'grid-column',
      'grid-area',
      'grid-template',
      'grid-template-areas',
      'place-self'
    ],
    {
      feature: 'css-grid',
      browsers
    }
  );
});

f(prefixGrid, { match: /a x/ }, browsers =>
  prefix(['grid-column-align', 'grid-row-align'], {
    feature: 'css-grid',
    browsers
  })
);

// CSS text-spacing
let prefixTextSpacing = cssTextSpacing;

f(prefixTextSpacing, browsers =>
  prefix(['text-spacing'], {
    feature: 'css-text-spacing',
    browsers
  })
);

// :any-link selector
let prefixAnyLink = cssAnyLink;

f(prefixAnyLink, browsers =>
  prefix([':any-link'], {
    selector: true,
    feature: 'css-any-link',
    browsers
  })
);

// unicode-bidi

let bidiIsolate = mdnCssUnicodeBidiIsolate;

f(bidiIsolate, browsers =>
  prefix(['isolate'], {
    props: ['unicode-bidi'],
    feature: 'css-unicode-bidi',
    browsers
  })
);

let bidiPlaintext = mdnCssUnicodeBidiPlaintext;

f(bidiPlaintext, browsers =>
  prefix(['plaintext'], {
    props: ['unicode-bidi'],
    feature: 'css-unicode-bidi',
    browsers
  })
);

let bidiOverride = mdnCssUnicodeBidiIsolateOverride;

f(bidiOverride, { match: /y x/ }, browsers =>
  prefix(['isolate-override'], {
    props: ['unicode-bidi'],
    feature: 'css-unicode-bidi',
    browsers
  })
);

// overscroll-behavior selector
let prefixOverscroll = cssOverscrollBehavior;

f(prefixOverscroll, { match: /a #1/ }, browsers =>
  prefix(['overscroll-behavior'], {
    feature: 'css-overscroll-behavior',
    browsers
  })
);

// text-orientation
let prefixTextOrientation = cssTextOrientation;

f(prefixTextOrientation, browsers =>
  prefix(['text-orientation'], {
    feature: 'css-text-orientation',
    browsers
  })
);

// print-color-adjust
let prefixPrintAdjust = cssPrintColorAdjust;

f(prefixPrintAdjust, browsers =>
  prefix(['print-color-adjust', 'color-adjust'], {
    feature: 'css-print-color-adjust',
    browsers
  })
);

let browserslist = browserslist_1;

/**
 * Autoprefixer default browsers
 */
browserslist.defaults;

// 测试
const TestError = () => {
  return service({
    url: '/api/500',
    method: 'get',
  })
};

// 用户列表
const getUsers = data => {
  return service({
    url: '/api/test/users',
    method: 'post',
    data,
  })
};

export { TestError as T, getUsers as g };
